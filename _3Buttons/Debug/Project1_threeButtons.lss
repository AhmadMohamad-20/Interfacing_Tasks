
Project1_threeButtons.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000036e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000036e2  00003756  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000270  00000000  00000000  0000375e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000034a  00000000  00000000  000039ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00002feb  00000000  00000000  00003d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00001413  00000000  00000000  00006d03  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000261d  00000000  00000000  00008116  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000300  00000000  00000000  0000a734  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000607  00000000  00000000  0000aa34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000088e  00000000  00000000  0000b03b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macinfo 000055fb  00000000  00000000  0000b8c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000138  00000000  00000000  00010ec4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ee       	ldi	r30, 0xE2	; 226
      68:	f6 e3       	ldi	r31, 0x36	; 54
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 20 0b 	call	0x1640	; 0x1640 <main>
      7a:	0c 94 6f 1b 	jmp	0x36de	; 0x36de <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 38 1b 	jmp	0x3670	; 0x3670 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 54 1b 	jmp	0x36a8	; 0x36a8 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 38 1b 	jmp	0x3670	; 0x3670 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 54 1b 	jmp	0x36a8	; 0x36a8 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 40 1b 	jmp	0x3680	; 0x3680 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 5c 1b 	jmp	0x36b8	; 0x36b8 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 44 1b 	jmp	0x3688	; 0x3688 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 48 1b 	jmp	0x3690	; 0x3690 <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 64 1b 	jmp	0x36c8	; 0x36c8 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <LED_turnOn>:
#include "LED_Private.h"
#include "LED_Reg.h"
#include "LED_Interface.h"

uint8 LED_turnOn(uint8 copy_LED_port,uint8 copy_LED_pin)
{
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	00 d0       	rcall	.+0      	; 0xc94 <LED_turnOn+0x6>
     c94:	0f 92       	push	r0
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	8a 83       	std	Y+2, r24	; 0x02
     c9c:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	89 83       	std	Y+1, r24	; 0x01
	local_errorSignal = DIO_setPinValue(copy_LED_port,copy_LED_pin,HIGH);
     ca2:	8a 81       	ldd	r24, Y+2	; 0x02
     ca4:	6b 81       	ldd	r22, Y+3	; 0x03
     ca6:	41 e0       	ldi	r20, 0x01	; 1
     ca8:	0e 94 9a 07 	call	0xf34	; 0xf34 <DIO_setPinValue>
     cac:	89 83       	std	Y+1, r24	; 0x01
	return local_errorSignal;
     cae:	89 81       	ldd	r24, Y+1	; 0x01
}
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	cf 91       	pop	r28
     cb8:	df 91       	pop	r29
     cba:	08 95       	ret

00000cbc <LED_turnOff>:

uint8 LED_turnOff(uint8 copy_LED_port,uint8 copy_LED_pin)
{
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	00 d0       	rcall	.+0      	; 0xcc2 <LED_turnOff+0x6>
     cc2:	0f 92       	push	r0
     cc4:	cd b7       	in	r28, 0x3d	; 61
     cc6:	de b7       	in	r29, 0x3e	; 62
     cc8:	8a 83       	std	Y+2, r24	; 0x02
     cca:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	89 83       	std	Y+1, r24	; 0x01
	local_errorSignal = DIO_setPinValue(copy_LED_port,copy_LED_pin,LOW);
     cd0:	8a 81       	ldd	r24, Y+2	; 0x02
     cd2:	6b 81       	ldd	r22, Y+3	; 0x03
     cd4:	40 e0       	ldi	r20, 0x00	; 0
     cd6:	0e 94 9a 07 	call	0xf34	; 0xf34 <DIO_setPinValue>
     cda:	89 83       	std	Y+1, r24	; 0x01
	return local_errorSignal;
     cdc:	89 81       	ldd	r24, Y+1	; 0x01
}
     cde:	0f 90       	pop	r0
     ce0:	0f 90       	pop	r0
     ce2:	0f 90       	pop	r0
     ce4:	cf 91       	pop	r28
     ce6:	df 91       	pop	r29
     ce8:	08 95       	ret

00000cea <LED_toggle>:

uint8 LED_toggle(uint8 copy_LED_port,uint8 copy_LED_pin)
{
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	00 d0       	rcall	.+0      	; 0xcf0 <LED_toggle+0x6>
     cf0:	0f 92       	push	r0
     cf2:	cd b7       	in	r28, 0x3d	; 61
     cf4:	de b7       	in	r29, 0x3e	; 62
     cf6:	8a 83       	std	Y+2, r24	; 0x02
     cf8:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
     cfa:	81 e0       	ldi	r24, 0x01	; 1
     cfc:	89 83       	std	Y+1, r24	; 0x01
	local_errorSignal = DIO_togglePin(copy_LED_port,copy_LED_pin);
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	6b 81       	ldd	r22, Y+3	; 0x03
     d02:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <DIO_togglePin>
     d06:	89 83       	std	Y+1, r24	; 0x01
	return local_errorSignal;
     d08:	89 81       	ldd	r24, Y+1	; 0x01
}
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	0f 90       	pop	r0
     d10:	cf 91       	pop	r28
     d12:	df 91       	pop	r29
     d14:	08 95       	ret

00000d16 <DIO_setPinDirection>:
#include "DIO_Private.h"
#include "DIO_Reg.h"
#include "DIO_Interface.h"

uint8 DIO_setPinDirection(uint8 copy_DIO_port, uint8 copy_DIO_pin, uint8 copy_DIO_direction)
{
     d16:	df 93       	push	r29
     d18:	cf 93       	push	r28
     d1a:	cd b7       	in	r28, 0x3d	; 61
     d1c:	de b7       	in	r29, 0x3e	; 62
     d1e:	28 97       	sbiw	r28, 0x08	; 8
     d20:	0f b6       	in	r0, 0x3f	; 63
     d22:	f8 94       	cli
     d24:	de bf       	out	0x3e, r29	; 62
     d26:	0f be       	out	0x3f, r0	; 63
     d28:	cd bf       	out	0x3d, r28	; 61
     d2a:	8a 83       	std	Y+2, r24	; 0x02
     d2c:	6b 83       	std	Y+3, r22	; 0x03
     d2e:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorState = OK_STAT;
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	89 83       	std	Y+1, r24	; 0x01
	if (copy_DIO_pin <= PIN7)
     d34:	8b 81       	ldd	r24, Y+3	; 0x03
     d36:	88 30       	cpi	r24, 0x08	; 8
     d38:	08 f0       	brcs	.+2      	; 0xd3c <DIO_setPinDirection+0x26>
     d3a:	f1 c0       	rjmp	.+482    	; 0xf1e <DIO_setPinDirection+0x208>
	{
		if (copy_DIO_direction == OUTPUT)
     d3c:	8c 81       	ldd	r24, Y+4	; 0x04
     d3e:	81 30       	cpi	r24, 0x01	; 1
     d40:	09 f0       	breq	.+2      	; 0xd44 <DIO_setPinDirection+0x2e>
     d42:	71 c0       	rjmp	.+226    	; 0xe26 <DIO_setPinDirection+0x110>
		{
			switch (copy_DIO_port)
     d44:	8a 81       	ldd	r24, Y+2	; 0x02
     d46:	28 2f       	mov	r18, r24
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	38 87       	std	Y+8, r19	; 0x08
     d4c:	2f 83       	std	Y+7, r18	; 0x07
     d4e:	8f 81       	ldd	r24, Y+7	; 0x07
     d50:	98 85       	ldd	r25, Y+8	; 0x08
     d52:	81 30       	cpi	r24, 0x01	; 1
     d54:	91 05       	cpc	r25, r1
     d56:	49 f1       	breq	.+82     	; 0xdaa <DIO_setPinDirection+0x94>
     d58:	2f 81       	ldd	r18, Y+7	; 0x07
     d5a:	38 85       	ldd	r19, Y+8	; 0x08
     d5c:	22 30       	cpi	r18, 0x02	; 2
     d5e:	31 05       	cpc	r19, r1
     d60:	2c f4       	brge	.+10     	; 0xd6c <DIO_setPinDirection+0x56>
     d62:	8f 81       	ldd	r24, Y+7	; 0x07
     d64:	98 85       	ldd	r25, Y+8	; 0x08
     d66:	00 97       	sbiw	r24, 0x00	; 0
     d68:	61 f0       	breq	.+24     	; 0xd82 <DIO_setPinDirection+0x6c>
     d6a:	5b c0       	rjmp	.+182    	; 0xe22 <DIO_setPinDirection+0x10c>
     d6c:	2f 81       	ldd	r18, Y+7	; 0x07
     d6e:	38 85       	ldd	r19, Y+8	; 0x08
     d70:	22 30       	cpi	r18, 0x02	; 2
     d72:	31 05       	cpc	r19, r1
     d74:	71 f1       	breq	.+92     	; 0xdd2 <DIO_setPinDirection+0xbc>
     d76:	8f 81       	ldd	r24, Y+7	; 0x07
     d78:	98 85       	ldd	r25, Y+8	; 0x08
     d7a:	83 30       	cpi	r24, 0x03	; 3
     d7c:	91 05       	cpc	r25, r1
     d7e:	e9 f1       	breq	.+122    	; 0xdfa <DIO_setPinDirection+0xe4>
     d80:	50 c0       	rjmp	.+160    	; 0xe22 <DIO_setPinDirection+0x10c>
			{
				case DIO_PORTA:
					SET_BIT(DDRA,copy_DIO_pin);
     d82:	aa e3       	ldi	r26, 0x3A	; 58
     d84:	b0 e0       	ldi	r27, 0x00	; 0
     d86:	ea e3       	ldi	r30, 0x3A	; 58
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	80 81       	ld	r24, Z
     d8c:	48 2f       	mov	r20, r24
     d8e:	8b 81       	ldd	r24, Y+3	; 0x03
     d90:	28 2f       	mov	r18, r24
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	02 2e       	mov	r0, r18
     d9a:	02 c0       	rjmp	.+4      	; 0xda0 <DIO_setPinDirection+0x8a>
     d9c:	88 0f       	add	r24, r24
     d9e:	99 1f       	adc	r25, r25
     da0:	0a 94       	dec	r0
     da2:	e2 f7       	brpl	.-8      	; 0xd9c <DIO_setPinDirection+0x86>
     da4:	84 2b       	or	r24, r20
     da6:	8c 93       	st	X, r24
     da8:	bb c0       	rjmp	.+374    	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				case DIO_PORTB:
					SET_BIT(DDRB,copy_DIO_pin);
     daa:	a7 e3       	ldi	r26, 0x37	; 55
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	e7 e3       	ldi	r30, 0x37	; 55
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	80 81       	ld	r24, Z
     db4:	48 2f       	mov	r20, r24
     db6:	8b 81       	ldd	r24, Y+3	; 0x03
     db8:	28 2f       	mov	r18, r24
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	02 2e       	mov	r0, r18
     dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <DIO_setPinDirection+0xb2>
     dc4:	88 0f       	add	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	0a 94       	dec	r0
     dca:	e2 f7       	brpl	.-8      	; 0xdc4 <DIO_setPinDirection+0xae>
     dcc:	84 2b       	or	r24, r20
     dce:	8c 93       	st	X, r24
     dd0:	a7 c0       	rjmp	.+334    	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				case DIO_PORTC:
					SET_BIT(DDRC,copy_DIO_pin);
     dd2:	a4 e3       	ldi	r26, 0x34	; 52
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	e4 e3       	ldi	r30, 0x34	; 52
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	80 81       	ld	r24, Z
     ddc:	48 2f       	mov	r20, r24
     dde:	8b 81       	ldd	r24, Y+3	; 0x03
     de0:	28 2f       	mov	r18, r24
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	02 2e       	mov	r0, r18
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <DIO_setPinDirection+0xda>
     dec:	88 0f       	add	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	0a 94       	dec	r0
     df2:	e2 f7       	brpl	.-8      	; 0xdec <DIO_setPinDirection+0xd6>
     df4:	84 2b       	or	r24, r20
     df6:	8c 93       	st	X, r24
     df8:	93 c0       	rjmp	.+294    	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				case DIO_PORTD:
					SET_BIT(DDRD,copy_DIO_pin);
     dfa:	a1 e3       	ldi	r26, 0x31	; 49
     dfc:	b0 e0       	ldi	r27, 0x00	; 0
     dfe:	e1 e3       	ldi	r30, 0x31	; 49
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	48 2f       	mov	r20, r24
     e06:	8b 81       	ldd	r24, Y+3	; 0x03
     e08:	28 2f       	mov	r18, r24
     e0a:	30 e0       	ldi	r19, 0x00	; 0
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	02 2e       	mov	r0, r18
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <DIO_setPinDirection+0x102>
     e14:	88 0f       	add	r24, r24
     e16:	99 1f       	adc	r25, r25
     e18:	0a 94       	dec	r0
     e1a:	e2 f7       	brpl	.-8      	; 0xe14 <DIO_setPinDirection+0xfe>
     e1c:	84 2b       	or	r24, r20
     e1e:	8c 93       	st	X, r24
     e20:	7f c0       	rjmp	.+254    	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				default:
					local_errorState = NOT_OK_STAT;
     e22:	19 82       	std	Y+1, r1	; 0x01
     e24:	7d c0       	rjmp	.+250    	; 0xf20 <DIO_setPinDirection+0x20a>
			}
		}
		else if (copy_DIO_direction == INPUT)
     e26:	8c 81       	ldd	r24, Y+4	; 0x04
     e28:	88 23       	and	r24, r24
     e2a:	09 f0       	breq	.+2      	; 0xe2e <DIO_setPinDirection+0x118>
     e2c:	76 c0       	rjmp	.+236    	; 0xf1a <DIO_setPinDirection+0x204>
		{
			switch (copy_DIO_port)
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	28 2f       	mov	r18, r24
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	3e 83       	std	Y+6, r19	; 0x06
     e36:	2d 83       	std	Y+5, r18	; 0x05
     e38:	8d 81       	ldd	r24, Y+5	; 0x05
     e3a:	9e 81       	ldd	r25, Y+6	; 0x06
     e3c:	81 30       	cpi	r24, 0x01	; 1
     e3e:	91 05       	cpc	r25, r1
     e40:	59 f1       	breq	.+86     	; 0xe98 <DIO_setPinDirection+0x182>
     e42:	2d 81       	ldd	r18, Y+5	; 0x05
     e44:	3e 81       	ldd	r19, Y+6	; 0x06
     e46:	22 30       	cpi	r18, 0x02	; 2
     e48:	31 05       	cpc	r19, r1
     e4a:	2c f4       	brge	.+10     	; 0xe56 <DIO_setPinDirection+0x140>
     e4c:	8d 81       	ldd	r24, Y+5	; 0x05
     e4e:	9e 81       	ldd	r25, Y+6	; 0x06
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	69 f0       	breq	.+26     	; 0xe6e <DIO_setPinDirection+0x158>
     e54:	60 c0       	rjmp	.+192    	; 0xf16 <DIO_setPinDirection+0x200>
     e56:	2d 81       	ldd	r18, Y+5	; 0x05
     e58:	3e 81       	ldd	r19, Y+6	; 0x06
     e5a:	22 30       	cpi	r18, 0x02	; 2
     e5c:	31 05       	cpc	r19, r1
     e5e:	89 f1       	breq	.+98     	; 0xec2 <DIO_setPinDirection+0x1ac>
     e60:	8d 81       	ldd	r24, Y+5	; 0x05
     e62:	9e 81       	ldd	r25, Y+6	; 0x06
     e64:	83 30       	cpi	r24, 0x03	; 3
     e66:	91 05       	cpc	r25, r1
     e68:	09 f4       	brne	.+2      	; 0xe6c <DIO_setPinDirection+0x156>
     e6a:	40 c0       	rjmp	.+128    	; 0xeec <DIO_setPinDirection+0x1d6>
     e6c:	54 c0       	rjmp	.+168    	; 0xf16 <DIO_setPinDirection+0x200>
			{
				case DIO_PORTA:
					CLEAR_BIT(DDRA,copy_DIO_pin);
     e6e:	aa e3       	ldi	r26, 0x3A	; 58
     e70:	b0 e0       	ldi	r27, 0x00	; 0
     e72:	ea e3       	ldi	r30, 0x3A	; 58
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	80 81       	ld	r24, Z
     e78:	48 2f       	mov	r20, r24
     e7a:	8b 81       	ldd	r24, Y+3	; 0x03
     e7c:	28 2f       	mov	r18, r24
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	81 e0       	ldi	r24, 0x01	; 1
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	02 2e       	mov	r0, r18
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <DIO_setPinDirection+0x176>
     e88:	88 0f       	add	r24, r24
     e8a:	99 1f       	adc	r25, r25
     e8c:	0a 94       	dec	r0
     e8e:	e2 f7       	brpl	.-8      	; 0xe88 <DIO_setPinDirection+0x172>
     e90:	80 95       	com	r24
     e92:	84 23       	and	r24, r20
     e94:	8c 93       	st	X, r24
     e96:	44 c0       	rjmp	.+136    	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				case DIO_PORTB:
					CLEAR_BIT(DDRB,copy_DIO_pin);
     e98:	a7 e3       	ldi	r26, 0x37	; 55
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	e7 e3       	ldi	r30, 0x37	; 55
     e9e:	f0 e0       	ldi	r31, 0x00	; 0
     ea0:	80 81       	ld	r24, Z
     ea2:	48 2f       	mov	r20, r24
     ea4:	8b 81       	ldd	r24, Y+3	; 0x03
     ea6:	28 2f       	mov	r18, r24
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	02 2e       	mov	r0, r18
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <DIO_setPinDirection+0x1a0>
     eb2:	88 0f       	add	r24, r24
     eb4:	99 1f       	adc	r25, r25
     eb6:	0a 94       	dec	r0
     eb8:	e2 f7       	brpl	.-8      	; 0xeb2 <DIO_setPinDirection+0x19c>
     eba:	80 95       	com	r24
     ebc:	84 23       	and	r24, r20
     ebe:	8c 93       	st	X, r24
     ec0:	2f c0       	rjmp	.+94     	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				case DIO_PORTC:
					CLEAR_BIT(DDRC,copy_DIO_pin);
     ec2:	a4 e3       	ldi	r26, 0x34	; 52
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e4 e3       	ldi	r30, 0x34	; 52
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	80 81       	ld	r24, Z
     ecc:	48 2f       	mov	r20, r24
     ece:	8b 81       	ldd	r24, Y+3	; 0x03
     ed0:	28 2f       	mov	r18, r24
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	02 2e       	mov	r0, r18
     eda:	02 c0       	rjmp	.+4      	; 0xee0 <DIO_setPinDirection+0x1ca>
     edc:	88 0f       	add	r24, r24
     ede:	99 1f       	adc	r25, r25
     ee0:	0a 94       	dec	r0
     ee2:	e2 f7       	brpl	.-8      	; 0xedc <DIO_setPinDirection+0x1c6>
     ee4:	80 95       	com	r24
     ee6:	84 23       	and	r24, r20
     ee8:	8c 93       	st	X, r24
     eea:	1a c0       	rjmp	.+52     	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				case DIO_PORTD:
					CLEAR_BIT(DDRD,copy_DIO_pin);
     eec:	a1 e3       	ldi	r26, 0x31	; 49
     eee:	b0 e0       	ldi	r27, 0x00	; 0
     ef0:	e1 e3       	ldi	r30, 0x31	; 49
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	80 81       	ld	r24, Z
     ef6:	48 2f       	mov	r20, r24
     ef8:	8b 81       	ldd	r24, Y+3	; 0x03
     efa:	28 2f       	mov	r18, r24
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	02 2e       	mov	r0, r18
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <DIO_setPinDirection+0x1f4>
     f06:	88 0f       	add	r24, r24
     f08:	99 1f       	adc	r25, r25
     f0a:	0a 94       	dec	r0
     f0c:	e2 f7       	brpl	.-8      	; 0xf06 <DIO_setPinDirection+0x1f0>
     f0e:	80 95       	com	r24
     f10:	84 23       	and	r24, r20
     f12:	8c 93       	st	X, r24
     f14:	05 c0       	rjmp	.+10     	; 0xf20 <DIO_setPinDirection+0x20a>
					break;
				default:
					local_errorState = NOT_OK_STAT;
     f16:	19 82       	std	Y+1, r1	; 0x01
     f18:	03 c0       	rjmp	.+6      	; 0xf20 <DIO_setPinDirection+0x20a>
			}
		}
		else
		{
			local_errorState = NOT_OK_STAT;
     f1a:	19 82       	std	Y+1, r1	; 0x01
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <DIO_setPinDirection+0x20a>
		}
	}
	else
	{
		local_errorState = NOT_OK_STAT;
     f1e:	19 82       	std	Y+1, r1	; 0x01
	}

	return local_errorState;
     f20:	89 81       	ldd	r24, Y+1	; 0x01
}
     f22:	28 96       	adiw	r28, 0x08	; 8
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	de bf       	out	0x3e, r29	; 62
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	cd bf       	out	0x3d, r28	; 61
     f2e:	cf 91       	pop	r28
     f30:	df 91       	pop	r29
     f32:	08 95       	ret

00000f34 <DIO_setPinValue>:

uint8 DIO_setPinValue(uint8 copy_DIO_port, uint8 copy_DIO_pin, uint8 copy_DIO_value)
{
     f34:	df 93       	push	r29
     f36:	cf 93       	push	r28
     f38:	cd b7       	in	r28, 0x3d	; 61
     f3a:	de b7       	in	r29, 0x3e	; 62
     f3c:	28 97       	sbiw	r28, 0x08	; 8
     f3e:	0f b6       	in	r0, 0x3f	; 63
     f40:	f8 94       	cli
     f42:	de bf       	out	0x3e, r29	; 62
     f44:	0f be       	out	0x3f, r0	; 63
     f46:	cd bf       	out	0x3d, r28	; 61
     f48:	8a 83       	std	Y+2, r24	; 0x02
     f4a:	6b 83       	std	Y+3, r22	; 0x03
     f4c:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorSignal = OK_STAT;
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	89 83       	std	Y+1, r24	; 0x01
	if (copy_DIO_pin <= PIN7)
     f52:	8b 81       	ldd	r24, Y+3	; 0x03
     f54:	88 30       	cpi	r24, 0x08	; 8
     f56:	08 f0       	brcs	.+2      	; 0xf5a <DIO_setPinValue+0x26>
     f58:	f1 c0       	rjmp	.+482    	; 0x113c <DIO_setPinValue+0x208>
	{
		if (copy_DIO_value == HIGH)
     f5a:	8c 81       	ldd	r24, Y+4	; 0x04
     f5c:	81 30       	cpi	r24, 0x01	; 1
     f5e:	09 f0       	breq	.+2      	; 0xf62 <DIO_setPinValue+0x2e>
     f60:	71 c0       	rjmp	.+226    	; 0x1044 <DIO_setPinValue+0x110>
		{
			switch(copy_DIO_port)
     f62:	8a 81       	ldd	r24, Y+2	; 0x02
     f64:	28 2f       	mov	r18, r24
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	38 87       	std	Y+8, r19	; 0x08
     f6a:	2f 83       	std	Y+7, r18	; 0x07
     f6c:	8f 81       	ldd	r24, Y+7	; 0x07
     f6e:	98 85       	ldd	r25, Y+8	; 0x08
     f70:	81 30       	cpi	r24, 0x01	; 1
     f72:	91 05       	cpc	r25, r1
     f74:	49 f1       	breq	.+82     	; 0xfc8 <DIO_setPinValue+0x94>
     f76:	2f 81       	ldd	r18, Y+7	; 0x07
     f78:	38 85       	ldd	r19, Y+8	; 0x08
     f7a:	22 30       	cpi	r18, 0x02	; 2
     f7c:	31 05       	cpc	r19, r1
     f7e:	2c f4       	brge	.+10     	; 0xf8a <DIO_setPinValue+0x56>
     f80:	8f 81       	ldd	r24, Y+7	; 0x07
     f82:	98 85       	ldd	r25, Y+8	; 0x08
     f84:	00 97       	sbiw	r24, 0x00	; 0
     f86:	61 f0       	breq	.+24     	; 0xfa0 <DIO_setPinValue+0x6c>
     f88:	5b c0       	rjmp	.+182    	; 0x1040 <DIO_setPinValue+0x10c>
     f8a:	2f 81       	ldd	r18, Y+7	; 0x07
     f8c:	38 85       	ldd	r19, Y+8	; 0x08
     f8e:	22 30       	cpi	r18, 0x02	; 2
     f90:	31 05       	cpc	r19, r1
     f92:	71 f1       	breq	.+92     	; 0xff0 <DIO_setPinValue+0xbc>
     f94:	8f 81       	ldd	r24, Y+7	; 0x07
     f96:	98 85       	ldd	r25, Y+8	; 0x08
     f98:	83 30       	cpi	r24, 0x03	; 3
     f9a:	91 05       	cpc	r25, r1
     f9c:	e9 f1       	breq	.+122    	; 0x1018 <DIO_setPinValue+0xe4>
     f9e:	50 c0       	rjmp	.+160    	; 0x1040 <DIO_setPinValue+0x10c>
			{
				case DIO_PORTA:
					SET_BIT(PORTA,copy_DIO_pin);
     fa0:	ab e3       	ldi	r26, 0x3B	; 59
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	eb e3       	ldi	r30, 0x3B	; 59
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	48 2f       	mov	r20, r24
     fac:	8b 81       	ldd	r24, Y+3	; 0x03
     fae:	28 2f       	mov	r18, r24
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	02 2e       	mov	r0, r18
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <DIO_setPinValue+0x8a>
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	0a 94       	dec	r0
     fc0:	e2 f7       	brpl	.-8      	; 0xfba <DIO_setPinValue+0x86>
     fc2:	84 2b       	or	r24, r20
     fc4:	8c 93       	st	X, r24
     fc6:	bb c0       	rjmp	.+374    	; 0x113e <DIO_setPinValue+0x20a>
					break;
				case DIO_PORTB:
					SET_BIT(PORTB,copy_DIO_pin);
     fc8:	a8 e3       	ldi	r26, 0x38	; 56
     fca:	b0 e0       	ldi	r27, 0x00	; 0
     fcc:	e8 e3       	ldi	r30, 0x38	; 56
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	80 81       	ld	r24, Z
     fd2:	48 2f       	mov	r20, r24
     fd4:	8b 81       	ldd	r24, Y+3	; 0x03
     fd6:	28 2f       	mov	r18, r24
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	81 e0       	ldi	r24, 0x01	; 1
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	02 2e       	mov	r0, r18
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <DIO_setPinValue+0xb2>
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	0a 94       	dec	r0
     fe8:	e2 f7       	brpl	.-8      	; 0xfe2 <DIO_setPinValue+0xae>
     fea:	84 2b       	or	r24, r20
     fec:	8c 93       	st	X, r24
     fee:	a7 c0       	rjmp	.+334    	; 0x113e <DIO_setPinValue+0x20a>
					break;
				case DIO_PORTC:
					SET_BIT(PORTC,copy_DIO_pin);
     ff0:	a5 e3       	ldi	r26, 0x35	; 53
     ff2:	b0 e0       	ldi	r27, 0x00	; 0
     ff4:	e5 e3       	ldi	r30, 0x35	; 53
     ff6:	f0 e0       	ldi	r31, 0x00	; 0
     ff8:	80 81       	ld	r24, Z
     ffa:	48 2f       	mov	r20, r24
     ffc:	8b 81       	ldd	r24, Y+3	; 0x03
     ffe:	28 2f       	mov	r18, r24
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	81 e0       	ldi	r24, 0x01	; 1
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	02 2e       	mov	r0, r18
    1008:	02 c0       	rjmp	.+4      	; 0x100e <DIO_setPinValue+0xda>
    100a:	88 0f       	add	r24, r24
    100c:	99 1f       	adc	r25, r25
    100e:	0a 94       	dec	r0
    1010:	e2 f7       	brpl	.-8      	; 0x100a <DIO_setPinValue+0xd6>
    1012:	84 2b       	or	r24, r20
    1014:	8c 93       	st	X, r24
    1016:	93 c0       	rjmp	.+294    	; 0x113e <DIO_setPinValue+0x20a>
					break;
				case DIO_PORTD:
					SET_BIT(PORTD,copy_DIO_pin);
    1018:	a2 e3       	ldi	r26, 0x32	; 50
    101a:	b0 e0       	ldi	r27, 0x00	; 0
    101c:	e2 e3       	ldi	r30, 0x32	; 50
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	80 81       	ld	r24, Z
    1022:	48 2f       	mov	r20, r24
    1024:	8b 81       	ldd	r24, Y+3	; 0x03
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	02 2e       	mov	r0, r18
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <DIO_setPinValue+0x102>
    1032:	88 0f       	add	r24, r24
    1034:	99 1f       	adc	r25, r25
    1036:	0a 94       	dec	r0
    1038:	e2 f7       	brpl	.-8      	; 0x1032 <DIO_setPinValue+0xfe>
    103a:	84 2b       	or	r24, r20
    103c:	8c 93       	st	X, r24
    103e:	7f c0       	rjmp	.+254    	; 0x113e <DIO_setPinValue+0x20a>
					break;
				default:
					local_errorSignal = NOT_OK_STAT;
    1040:	19 82       	std	Y+1, r1	; 0x01
    1042:	7d c0       	rjmp	.+250    	; 0x113e <DIO_setPinValue+0x20a>
					break;
			}
		}
		else if(copy_DIO_value == LOW)
    1044:	8c 81       	ldd	r24, Y+4	; 0x04
    1046:	88 23       	and	r24, r24
    1048:	09 f0       	breq	.+2      	; 0x104c <DIO_setPinValue+0x118>
    104a:	76 c0       	rjmp	.+236    	; 0x1138 <DIO_setPinValue+0x204>
		{
			switch(copy_DIO_port)
    104c:	8a 81       	ldd	r24, Y+2	; 0x02
    104e:	28 2f       	mov	r18, r24
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	3e 83       	std	Y+6, r19	; 0x06
    1054:	2d 83       	std	Y+5, r18	; 0x05
    1056:	8d 81       	ldd	r24, Y+5	; 0x05
    1058:	9e 81       	ldd	r25, Y+6	; 0x06
    105a:	81 30       	cpi	r24, 0x01	; 1
    105c:	91 05       	cpc	r25, r1
    105e:	59 f1       	breq	.+86     	; 0x10b6 <DIO_setPinValue+0x182>
    1060:	2d 81       	ldd	r18, Y+5	; 0x05
    1062:	3e 81       	ldd	r19, Y+6	; 0x06
    1064:	22 30       	cpi	r18, 0x02	; 2
    1066:	31 05       	cpc	r19, r1
    1068:	2c f4       	brge	.+10     	; 0x1074 <DIO_setPinValue+0x140>
    106a:	8d 81       	ldd	r24, Y+5	; 0x05
    106c:	9e 81       	ldd	r25, Y+6	; 0x06
    106e:	00 97       	sbiw	r24, 0x00	; 0
    1070:	69 f0       	breq	.+26     	; 0x108c <DIO_setPinValue+0x158>
    1072:	60 c0       	rjmp	.+192    	; 0x1134 <DIO_setPinValue+0x200>
    1074:	2d 81       	ldd	r18, Y+5	; 0x05
    1076:	3e 81       	ldd	r19, Y+6	; 0x06
    1078:	22 30       	cpi	r18, 0x02	; 2
    107a:	31 05       	cpc	r19, r1
    107c:	89 f1       	breq	.+98     	; 0x10e0 <DIO_setPinValue+0x1ac>
    107e:	8d 81       	ldd	r24, Y+5	; 0x05
    1080:	9e 81       	ldd	r25, Y+6	; 0x06
    1082:	83 30       	cpi	r24, 0x03	; 3
    1084:	91 05       	cpc	r25, r1
    1086:	09 f4       	brne	.+2      	; 0x108a <DIO_setPinValue+0x156>
    1088:	40 c0       	rjmp	.+128    	; 0x110a <DIO_setPinValue+0x1d6>
    108a:	54 c0       	rjmp	.+168    	; 0x1134 <DIO_setPinValue+0x200>
			{
				case DIO_PORTA:
					CLEAR_BIT(PORTA,copy_DIO_pin);
    108c:	ab e3       	ldi	r26, 0x3B	; 59
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	eb e3       	ldi	r30, 0x3B	; 59
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	48 2f       	mov	r20, r24
    1098:	8b 81       	ldd	r24, Y+3	; 0x03
    109a:	28 2f       	mov	r18, r24
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	02 2e       	mov	r0, r18
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <DIO_setPinValue+0x176>
    10a6:	88 0f       	add	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	0a 94       	dec	r0
    10ac:	e2 f7       	brpl	.-8      	; 0x10a6 <DIO_setPinValue+0x172>
    10ae:	80 95       	com	r24
    10b0:	84 23       	and	r24, r20
    10b2:	8c 93       	st	X, r24
    10b4:	44 c0       	rjmp	.+136    	; 0x113e <DIO_setPinValue+0x20a>
					break;
				case DIO_PORTB:
					CLEAR_BIT(PORTB,copy_DIO_pin);
    10b6:	a8 e3       	ldi	r26, 0x38	; 56
    10b8:	b0 e0       	ldi	r27, 0x00	; 0
    10ba:	e8 e3       	ldi	r30, 0x38	; 56
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	80 81       	ld	r24, Z
    10c0:	48 2f       	mov	r20, r24
    10c2:	8b 81       	ldd	r24, Y+3	; 0x03
    10c4:	28 2f       	mov	r18, r24
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	02 2e       	mov	r0, r18
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <DIO_setPinValue+0x1a0>
    10d0:	88 0f       	add	r24, r24
    10d2:	99 1f       	adc	r25, r25
    10d4:	0a 94       	dec	r0
    10d6:	e2 f7       	brpl	.-8      	; 0x10d0 <DIO_setPinValue+0x19c>
    10d8:	80 95       	com	r24
    10da:	84 23       	and	r24, r20
    10dc:	8c 93       	st	X, r24
    10de:	2f c0       	rjmp	.+94     	; 0x113e <DIO_setPinValue+0x20a>
					break;
				case DIO_PORTC:
					CLEAR_BIT(PORTC,copy_DIO_pin);
    10e0:	a5 e3       	ldi	r26, 0x35	; 53
    10e2:	b0 e0       	ldi	r27, 0x00	; 0
    10e4:	e5 e3       	ldi	r30, 0x35	; 53
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	48 2f       	mov	r20, r24
    10ec:	8b 81       	ldd	r24, Y+3	; 0x03
    10ee:	28 2f       	mov	r18, r24
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	02 2e       	mov	r0, r18
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <DIO_setPinValue+0x1ca>
    10fa:	88 0f       	add	r24, r24
    10fc:	99 1f       	adc	r25, r25
    10fe:	0a 94       	dec	r0
    1100:	e2 f7       	brpl	.-8      	; 0x10fa <DIO_setPinValue+0x1c6>
    1102:	80 95       	com	r24
    1104:	84 23       	and	r24, r20
    1106:	8c 93       	st	X, r24
    1108:	1a c0       	rjmp	.+52     	; 0x113e <DIO_setPinValue+0x20a>
					break;
				case DIO_PORTD:
					CLEAR_BIT(PORTD,copy_DIO_pin);
    110a:	a2 e3       	ldi	r26, 0x32	; 50
    110c:	b0 e0       	ldi	r27, 0x00	; 0
    110e:	e2 e3       	ldi	r30, 0x32	; 50
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	80 81       	ld	r24, Z
    1114:	48 2f       	mov	r20, r24
    1116:	8b 81       	ldd	r24, Y+3	; 0x03
    1118:	28 2f       	mov	r18, r24
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 2e       	mov	r0, r18
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <DIO_setPinValue+0x1f4>
    1124:	88 0f       	add	r24, r24
    1126:	99 1f       	adc	r25, r25
    1128:	0a 94       	dec	r0
    112a:	e2 f7       	brpl	.-8      	; 0x1124 <DIO_setPinValue+0x1f0>
    112c:	80 95       	com	r24
    112e:	84 23       	and	r24, r20
    1130:	8c 93       	st	X, r24
    1132:	05 c0       	rjmp	.+10     	; 0x113e <DIO_setPinValue+0x20a>
					break;
				default:
					local_errorSignal = NOT_OK_STAT;
    1134:	19 82       	std	Y+1, r1	; 0x01
    1136:	03 c0       	rjmp	.+6      	; 0x113e <DIO_setPinValue+0x20a>
					break;
			}
		}
		else
		{
			local_errorSignal = NOT_OK_STAT;
    1138:	19 82       	std	Y+1, r1	; 0x01
    113a:	01 c0       	rjmp	.+2      	; 0x113e <DIO_setPinValue+0x20a>
		}
	}
	else
	{
		local_errorSignal = NOT_OK_STAT;
    113c:	19 82       	std	Y+1, r1	; 0x01
	}
	return local_errorSignal;
    113e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1140:	28 96       	adiw	r28, 0x08	; 8
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
    114c:	cf 91       	pop	r28
    114e:	df 91       	pop	r29
    1150:	08 95       	ret

00001152 <DIO_ReadPinValue>:

uint8 DIO_ReadPinValue(uint8 copy_DIO_port, uint8 copy_DIO_pin,  uint8 *copy_DIO_pValue)
{
    1152:	df 93       	push	r29
    1154:	cf 93       	push	r28
    1156:	cd b7       	in	r28, 0x3d	; 61
    1158:	de b7       	in	r29, 0x3e	; 62
    115a:	27 97       	sbiw	r28, 0x07	; 7
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	f8 94       	cli
    1160:	de bf       	out	0x3e, r29	; 62
    1162:	0f be       	out	0x3f, r0	; 63
    1164:	cd bf       	out	0x3d, r28	; 61
    1166:	8a 83       	std	Y+2, r24	; 0x02
    1168:	6b 83       	std	Y+3, r22	; 0x03
    116a:	5d 83       	std	Y+5, r21	; 0x05
    116c:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorState = OK_STAT;
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	89 83       	std	Y+1, r24	; 0x01
	if ((copy_DIO_pin <= PIN7) && (copy_DIO_pValue != NULL))
    1172:	8b 81       	ldd	r24, Y+3	; 0x03
    1174:	88 30       	cpi	r24, 0x08	; 8
    1176:	08 f0       	brcs	.+2      	; 0x117a <DIO_ReadPinValue+0x28>
    1178:	78 c0       	rjmp	.+240    	; 0x126a <DIO_ReadPinValue+0x118>
    117a:	8c 81       	ldd	r24, Y+4	; 0x04
    117c:	9d 81       	ldd	r25, Y+5	; 0x05
    117e:	00 97       	sbiw	r24, 0x00	; 0
    1180:	09 f4       	brne	.+2      	; 0x1184 <DIO_ReadPinValue+0x32>
    1182:	73 c0       	rjmp	.+230    	; 0x126a <DIO_ReadPinValue+0x118>
	{
		switch (copy_DIO_port)
    1184:	8a 81       	ldd	r24, Y+2	; 0x02
    1186:	28 2f       	mov	r18, r24
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	3f 83       	std	Y+7, r19	; 0x07
    118c:	2e 83       	std	Y+6, r18	; 0x06
    118e:	4e 81       	ldd	r20, Y+6	; 0x06
    1190:	5f 81       	ldd	r21, Y+7	; 0x07
    1192:	41 30       	cpi	r20, 0x01	; 1
    1194:	51 05       	cpc	r21, r1
    1196:	59 f1       	breq	.+86     	; 0x11ee <DIO_ReadPinValue+0x9c>
    1198:	8e 81       	ldd	r24, Y+6	; 0x06
    119a:	9f 81       	ldd	r25, Y+7	; 0x07
    119c:	82 30       	cpi	r24, 0x02	; 2
    119e:	91 05       	cpc	r25, r1
    11a0:	34 f4       	brge	.+12     	; 0x11ae <DIO_ReadPinValue+0x5c>
    11a2:	2e 81       	ldd	r18, Y+6	; 0x06
    11a4:	3f 81       	ldd	r19, Y+7	; 0x07
    11a6:	21 15       	cp	r18, r1
    11a8:	31 05       	cpc	r19, r1
    11aa:	69 f0       	breq	.+26     	; 0x11c6 <DIO_ReadPinValue+0x74>
    11ac:	5c c0       	rjmp	.+184    	; 0x1266 <DIO_ReadPinValue+0x114>
    11ae:	4e 81       	ldd	r20, Y+6	; 0x06
    11b0:	5f 81       	ldd	r21, Y+7	; 0x07
    11b2:	42 30       	cpi	r20, 0x02	; 2
    11b4:	51 05       	cpc	r21, r1
    11b6:	79 f1       	breq	.+94     	; 0x1216 <DIO_ReadPinValue+0xc4>
    11b8:	8e 81       	ldd	r24, Y+6	; 0x06
    11ba:	9f 81       	ldd	r25, Y+7	; 0x07
    11bc:	83 30       	cpi	r24, 0x03	; 3
    11be:	91 05       	cpc	r25, r1
    11c0:	09 f4       	brne	.+2      	; 0x11c4 <DIO_ReadPinValue+0x72>
    11c2:	3d c0       	rjmp	.+122    	; 0x123e <DIO_ReadPinValue+0xec>
    11c4:	50 c0       	rjmp	.+160    	; 0x1266 <DIO_ReadPinValue+0x114>
		{
			case DIO_PORTA:
				*copy_DIO_pValue = GET_BIT(PINA,copy_DIO_pin);
    11c6:	e9 e3       	ldi	r30, 0x39	; 57
    11c8:	f0 e0       	ldi	r31, 0x00	; 0
    11ca:	80 81       	ld	r24, Z
    11cc:	28 2f       	mov	r18, r24
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	8b 81       	ldd	r24, Y+3	; 0x03
    11d2:	88 2f       	mov	r24, r24
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	a9 01       	movw	r20, r18
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <DIO_ReadPinValue+0x8c>
    11da:	55 95       	asr	r21
    11dc:	47 95       	ror	r20
    11de:	8a 95       	dec	r24
    11e0:	e2 f7       	brpl	.-8      	; 0x11da <DIO_ReadPinValue+0x88>
    11e2:	ca 01       	movw	r24, r20
    11e4:	81 70       	andi	r24, 0x01	; 1
    11e6:	ec 81       	ldd	r30, Y+4	; 0x04
    11e8:	fd 81       	ldd	r31, Y+5	; 0x05
    11ea:	80 83       	st	Z, r24
    11ec:	3f c0       	rjmp	.+126    	; 0x126c <DIO_ReadPinValue+0x11a>
				break;
			case DIO_PORTB:
				*copy_DIO_pValue = GET_BIT(PINB,copy_DIO_pin);
    11ee:	e6 e3       	ldi	r30, 0x36	; 54
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	80 81       	ld	r24, Z
    11f4:	28 2f       	mov	r18, r24
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	8b 81       	ldd	r24, Y+3	; 0x03
    11fa:	88 2f       	mov	r24, r24
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	a9 01       	movw	r20, r18
    1200:	02 c0       	rjmp	.+4      	; 0x1206 <DIO_ReadPinValue+0xb4>
    1202:	55 95       	asr	r21
    1204:	47 95       	ror	r20
    1206:	8a 95       	dec	r24
    1208:	e2 f7       	brpl	.-8      	; 0x1202 <DIO_ReadPinValue+0xb0>
    120a:	ca 01       	movw	r24, r20
    120c:	81 70       	andi	r24, 0x01	; 1
    120e:	ec 81       	ldd	r30, Y+4	; 0x04
    1210:	fd 81       	ldd	r31, Y+5	; 0x05
    1212:	80 83       	st	Z, r24
    1214:	2b c0       	rjmp	.+86     	; 0x126c <DIO_ReadPinValue+0x11a>
				break;
			case DIO_PORTC:
				*copy_DIO_pValue = GET_BIT(PINC,copy_DIO_pin);
    1216:	e3 e3       	ldi	r30, 0x33	; 51
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	80 81       	ld	r24, Z
    121c:	28 2f       	mov	r18, r24
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	8b 81       	ldd	r24, Y+3	; 0x03
    1222:	88 2f       	mov	r24, r24
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	a9 01       	movw	r20, r18
    1228:	02 c0       	rjmp	.+4      	; 0x122e <DIO_ReadPinValue+0xdc>
    122a:	55 95       	asr	r21
    122c:	47 95       	ror	r20
    122e:	8a 95       	dec	r24
    1230:	e2 f7       	brpl	.-8      	; 0x122a <DIO_ReadPinValue+0xd8>
    1232:	ca 01       	movw	r24, r20
    1234:	81 70       	andi	r24, 0x01	; 1
    1236:	ec 81       	ldd	r30, Y+4	; 0x04
    1238:	fd 81       	ldd	r31, Y+5	; 0x05
    123a:	80 83       	st	Z, r24
    123c:	17 c0       	rjmp	.+46     	; 0x126c <DIO_ReadPinValue+0x11a>
				break;
			case DIO_PORTD:
				*copy_DIO_pValue = GET_BIT(PIND,copy_DIO_pin);
    123e:	e0 e3       	ldi	r30, 0x30	; 48
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	80 81       	ld	r24, Z
    1244:	28 2f       	mov	r18, r24
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	8b 81       	ldd	r24, Y+3	; 0x03
    124a:	88 2f       	mov	r24, r24
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	a9 01       	movw	r20, r18
    1250:	02 c0       	rjmp	.+4      	; 0x1256 <DIO_ReadPinValue+0x104>
    1252:	55 95       	asr	r21
    1254:	47 95       	ror	r20
    1256:	8a 95       	dec	r24
    1258:	e2 f7       	brpl	.-8      	; 0x1252 <DIO_ReadPinValue+0x100>
    125a:	ca 01       	movw	r24, r20
    125c:	81 70       	andi	r24, 0x01	; 1
    125e:	ec 81       	ldd	r30, Y+4	; 0x04
    1260:	fd 81       	ldd	r31, Y+5	; 0x05
    1262:	80 83       	st	Z, r24
    1264:	03 c0       	rjmp	.+6      	; 0x126c <DIO_ReadPinValue+0x11a>
				break;
			default:
				local_errorState = NOT_OK_STAT;
    1266:	19 82       	std	Y+1, r1	; 0x01
    1268:	01 c0       	rjmp	.+2      	; 0x126c <DIO_ReadPinValue+0x11a>
				break;
		}
	}
	else
	{
		local_errorState = NOT_OK_STAT;
    126a:	19 82       	std	Y+1, r1	; 0x01
	}
	return local_errorState;
    126c:	89 81       	ldd	r24, Y+1	; 0x01
}
    126e:	27 96       	adiw	r28, 0x07	; 7
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	f8 94       	cli
    1274:	de bf       	out	0x3e, r29	; 62
    1276:	0f be       	out	0x3f, r0	; 63
    1278:	cd bf       	out	0x3d, r28	; 61
    127a:	cf 91       	pop	r28
    127c:	df 91       	pop	r29
    127e:	08 95       	ret

00001280 <DIO_setPortDirection>:

uint8 DIO_setPortDirection(uint8 copy_DIO_port,  uint8 copy_DIO_direction)
{
    1280:	df 93       	push	r29
    1282:	cf 93       	push	r28
    1284:	00 d0       	rcall	.+0      	; 0x1286 <DIO_setPortDirection+0x6>
    1286:	00 d0       	rcall	.+0      	; 0x1288 <DIO_setPortDirection+0x8>
    1288:	0f 92       	push	r0
    128a:	cd b7       	in	r28, 0x3d	; 61
    128c:	de b7       	in	r29, 0x3e	; 62
    128e:	8a 83       	std	Y+2, r24	; 0x02
    1290:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    1292:	81 e0       	ldi	r24, 0x01	; 1
    1294:	89 83       	std	Y+1, r24	; 0x01
	if ((copy_DIO_direction == PORT_OUTPUT) || (copy_DIO_direction == PORT_INPUT))
    1296:	8b 81       	ldd	r24, Y+3	; 0x03
    1298:	8f 3f       	cpi	r24, 0xFF	; 255
    129a:	19 f0       	breq	.+6      	; 0x12a2 <DIO_setPortDirection+0x22>
    129c:	8b 81       	ldd	r24, Y+3	; 0x03
    129e:	88 23       	and	r24, r24
    12a0:	a1 f5       	brne	.+104    	; 0x130a <DIO_setPortDirection+0x8a>
		{
			switch (copy_DIO_direction)
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	28 2f       	mov	r18, r24
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	3d 83       	std	Y+5, r19	; 0x05
    12aa:	2c 83       	std	Y+4, r18	; 0x04
    12ac:	8c 81       	ldd	r24, Y+4	; 0x04
    12ae:	9d 81       	ldd	r25, Y+5	; 0x05
    12b0:	81 30       	cpi	r24, 0x01	; 1
    12b2:	91 05       	cpc	r25, r1
    12b4:	d1 f0       	breq	.+52     	; 0x12ea <DIO_setPortDirection+0x6a>
    12b6:	2c 81       	ldd	r18, Y+4	; 0x04
    12b8:	3d 81       	ldd	r19, Y+5	; 0x05
    12ba:	22 30       	cpi	r18, 0x02	; 2
    12bc:	31 05       	cpc	r19, r1
    12be:	2c f4       	brge	.+10     	; 0x12ca <DIO_setPortDirection+0x4a>
    12c0:	8c 81       	ldd	r24, Y+4	; 0x04
    12c2:	9d 81       	ldd	r25, Y+5	; 0x05
    12c4:	00 97       	sbiw	r24, 0x00	; 0
    12c6:	61 f0       	breq	.+24     	; 0x12e0 <DIO_setPortDirection+0x60>
    12c8:	1f c0       	rjmp	.+62     	; 0x1308 <DIO_setPortDirection+0x88>
    12ca:	2c 81       	ldd	r18, Y+4	; 0x04
    12cc:	3d 81       	ldd	r19, Y+5	; 0x05
    12ce:	22 30       	cpi	r18, 0x02	; 2
    12d0:	31 05       	cpc	r19, r1
    12d2:	81 f0       	breq	.+32     	; 0x12f4 <DIO_setPortDirection+0x74>
    12d4:	8c 81       	ldd	r24, Y+4	; 0x04
    12d6:	9d 81       	ldd	r25, Y+5	; 0x05
    12d8:	83 30       	cpi	r24, 0x03	; 3
    12da:	91 05       	cpc	r25, r1
    12dc:	81 f0       	breq	.+32     	; 0x12fe <DIO_setPortDirection+0x7e>
    12de:	14 c0       	rjmp	.+40     	; 0x1308 <DIO_setPortDirection+0x88>
			{
				case DIO_PORTA:
					DDRA = copy_DIO_direction;
    12e0:	ea e3       	ldi	r30, 0x3A	; 58
    12e2:	f0 e0       	ldi	r31, 0x00	; 0
    12e4:	8b 81       	ldd	r24, Y+3	; 0x03
    12e6:	80 83       	st	Z, r24
    12e8:	10 c0       	rjmp	.+32     	; 0x130a <DIO_setPortDirection+0x8a>
					break;
				case DIO_PORTB:
					DDRB = copy_DIO_direction;
    12ea:	e7 e3       	ldi	r30, 0x37	; 55
    12ec:	f0 e0       	ldi	r31, 0x00	; 0
    12ee:	8b 81       	ldd	r24, Y+3	; 0x03
    12f0:	80 83       	st	Z, r24
    12f2:	0b c0       	rjmp	.+22     	; 0x130a <DIO_setPortDirection+0x8a>
					break;
				case DIO_PORTC:
					DDRC = copy_DIO_direction;
    12f4:	e4 e3       	ldi	r30, 0x34	; 52
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	8b 81       	ldd	r24, Y+3	; 0x03
    12fa:	80 83       	st	Z, r24
    12fc:	06 c0       	rjmp	.+12     	; 0x130a <DIO_setPortDirection+0x8a>
					break;
				case DIO_PORTD:
					DDRC = copy_DIO_direction;
    12fe:	e4 e3       	ldi	r30, 0x34	; 52
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	8b 81       	ldd	r24, Y+3	; 0x03
    1304:	80 83       	st	Z, r24
    1306:	01 c0       	rjmp	.+2      	; 0x130a <DIO_setPortDirection+0x8a>
					break;
				default:
					local_errorSignal = NOT_OK_STAT;
    1308:	19 82       	std	Y+1, r1	; 0x01
					break;
			}
		}
	return local_errorSignal;
    130a:	89 81       	ldd	r24, Y+1	; 0x01
}
    130c:	0f 90       	pop	r0
    130e:	0f 90       	pop	r0
    1310:	0f 90       	pop	r0
    1312:	0f 90       	pop	r0
    1314:	0f 90       	pop	r0
    1316:	cf 91       	pop	r28
    1318:	df 91       	pop	r29
    131a:	08 95       	ret

0000131c <DIO_setPortValue>:

uint8 DIO_setPortValue(uint8 copy_DIO_port, uint8 copy_DIO_value)
{
    131c:	df 93       	push	r29
    131e:	cf 93       	push	r28
    1320:	00 d0       	rcall	.+0      	; 0x1322 <DIO_setPortValue+0x6>
    1322:	00 d0       	rcall	.+0      	; 0x1324 <DIO_setPortValue+0x8>
    1324:	0f 92       	push	r0
    1326:	cd b7       	in	r28, 0x3d	; 61
    1328:	de b7       	in	r29, 0x3e	; 62
    132a:	8a 83       	std	Y+2, r24	; 0x02
    132c:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	89 83       	std	Y+1, r24	; 0x01

	switch (copy_DIO_port)
    1332:	8a 81       	ldd	r24, Y+2	; 0x02
    1334:	28 2f       	mov	r18, r24
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	3d 83       	std	Y+5, r19	; 0x05
    133a:	2c 83       	std	Y+4, r18	; 0x04
    133c:	8c 81       	ldd	r24, Y+4	; 0x04
    133e:	9d 81       	ldd	r25, Y+5	; 0x05
    1340:	81 30       	cpi	r24, 0x01	; 1
    1342:	91 05       	cpc	r25, r1
    1344:	d1 f0       	breq	.+52     	; 0x137a <DIO_setPortValue+0x5e>
    1346:	2c 81       	ldd	r18, Y+4	; 0x04
    1348:	3d 81       	ldd	r19, Y+5	; 0x05
    134a:	22 30       	cpi	r18, 0x02	; 2
    134c:	31 05       	cpc	r19, r1
    134e:	2c f4       	brge	.+10     	; 0x135a <DIO_setPortValue+0x3e>
    1350:	8c 81       	ldd	r24, Y+4	; 0x04
    1352:	9d 81       	ldd	r25, Y+5	; 0x05
    1354:	00 97       	sbiw	r24, 0x00	; 0
    1356:	61 f0       	breq	.+24     	; 0x1370 <DIO_setPortValue+0x54>
    1358:	1f c0       	rjmp	.+62     	; 0x1398 <DIO_setPortValue+0x7c>
    135a:	2c 81       	ldd	r18, Y+4	; 0x04
    135c:	3d 81       	ldd	r19, Y+5	; 0x05
    135e:	22 30       	cpi	r18, 0x02	; 2
    1360:	31 05       	cpc	r19, r1
    1362:	81 f0       	breq	.+32     	; 0x1384 <DIO_setPortValue+0x68>
    1364:	8c 81       	ldd	r24, Y+4	; 0x04
    1366:	9d 81       	ldd	r25, Y+5	; 0x05
    1368:	83 30       	cpi	r24, 0x03	; 3
    136a:	91 05       	cpc	r25, r1
    136c:	81 f0       	breq	.+32     	; 0x138e <DIO_setPortValue+0x72>
    136e:	14 c0       	rjmp	.+40     	; 0x1398 <DIO_setPortValue+0x7c>
	{
		case DIO_PORTA:
			PORTA = copy_DIO_value;
    1370:	eb e3       	ldi	r30, 0x3B	; 59
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	8b 81       	ldd	r24, Y+3	; 0x03
    1376:	80 83       	st	Z, r24
    1378:	10 c0       	rjmp	.+32     	; 0x139a <DIO_setPortValue+0x7e>
			break;
		case DIO_PORTB:
			PORTB = copy_DIO_value;
    137a:	e8 e3       	ldi	r30, 0x38	; 56
    137c:	f0 e0       	ldi	r31, 0x00	; 0
    137e:	8b 81       	ldd	r24, Y+3	; 0x03
    1380:	80 83       	st	Z, r24
    1382:	0b c0       	rjmp	.+22     	; 0x139a <DIO_setPortValue+0x7e>
			break;
		case DIO_PORTC:
			PORTC = copy_DIO_value;
    1384:	e5 e3       	ldi	r30, 0x35	; 53
    1386:	f0 e0       	ldi	r31, 0x00	; 0
    1388:	8b 81       	ldd	r24, Y+3	; 0x03
    138a:	80 83       	st	Z, r24
    138c:	06 c0       	rjmp	.+12     	; 0x139a <DIO_setPortValue+0x7e>
			break;
		case DIO_PORTD:
			PORTD = copy_DIO_value;
    138e:	e2 e3       	ldi	r30, 0x32	; 50
    1390:	f0 e0       	ldi	r31, 0x00	; 0
    1392:	8b 81       	ldd	r24, Y+3	; 0x03
    1394:	80 83       	st	Z, r24
    1396:	01 c0       	rjmp	.+2      	; 0x139a <DIO_setPortValue+0x7e>
			break;
		default:
			local_errorSignal = NOT_OK_STAT;
    1398:	19 82       	std	Y+1, r1	; 0x01
	}
	return local_errorSignal;
    139a:	89 81       	ldd	r24, Y+1	; 0x01
}
    139c:	0f 90       	pop	r0
    139e:	0f 90       	pop	r0
    13a0:	0f 90       	pop	r0
    13a2:	0f 90       	pop	r0
    13a4:	0f 90       	pop	r0
    13a6:	cf 91       	pop	r28
    13a8:	df 91       	pop	r29
    13aa:	08 95       	ret

000013ac <DIO_ReadPortValue>:

uint8 DIO_ReadPortValue(uint8 copy_DIO_port,  uint8 *copy_DIO_pValue)
{
    13ac:	df 93       	push	r29
    13ae:	cf 93       	push	r28
    13b0:	00 d0       	rcall	.+0      	; 0x13b2 <DIO_ReadPortValue+0x6>
    13b2:	00 d0       	rcall	.+0      	; 0x13b4 <DIO_ReadPortValue+0x8>
    13b4:	00 d0       	rcall	.+0      	; 0x13b6 <DIO_ReadPortValue+0xa>
    13b6:	cd b7       	in	r28, 0x3d	; 61
    13b8:	de b7       	in	r29, 0x3e	; 62
    13ba:	8a 83       	std	Y+2, r24	; 0x02
    13bc:	7c 83       	std	Y+4, r23	; 0x04
    13be:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	89 83       	std	Y+1, r24	; 0x01
	if ((copy_DIO_port <= DIO_PORTD) && (copy_DIO_pValue != NULL))
    13c4:	8a 81       	ldd	r24, Y+2	; 0x02
    13c6:	84 30       	cpi	r24, 0x04	; 4
    13c8:	08 f0       	brcs	.+2      	; 0x13cc <DIO_ReadPortValue+0x20>
    13ca:	40 c0       	rjmp	.+128    	; 0x144c <DIO_ReadPortValue+0xa0>
    13cc:	8b 81       	ldd	r24, Y+3	; 0x03
    13ce:	9c 81       	ldd	r25, Y+4	; 0x04
    13d0:	00 97       	sbiw	r24, 0x00	; 0
    13d2:	e1 f1       	breq	.+120    	; 0x144c <DIO_ReadPortValue+0xa0>
	{
		switch (copy_DIO_port)
    13d4:	8a 81       	ldd	r24, Y+2	; 0x02
    13d6:	28 2f       	mov	r18, r24
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	3e 83       	std	Y+6, r19	; 0x06
    13dc:	2d 83       	std	Y+5, r18	; 0x05
    13de:	8d 81       	ldd	r24, Y+5	; 0x05
    13e0:	9e 81       	ldd	r25, Y+6	; 0x06
    13e2:	81 30       	cpi	r24, 0x01	; 1
    13e4:	91 05       	cpc	r25, r1
    13e6:	e1 f0       	breq	.+56     	; 0x1420 <DIO_ReadPortValue+0x74>
    13e8:	2d 81       	ldd	r18, Y+5	; 0x05
    13ea:	3e 81       	ldd	r19, Y+6	; 0x06
    13ec:	22 30       	cpi	r18, 0x02	; 2
    13ee:	31 05       	cpc	r19, r1
    13f0:	2c f4       	brge	.+10     	; 0x13fc <DIO_ReadPortValue+0x50>
    13f2:	8d 81       	ldd	r24, Y+5	; 0x05
    13f4:	9e 81       	ldd	r25, Y+6	; 0x06
    13f6:	00 97       	sbiw	r24, 0x00	; 0
    13f8:	61 f0       	breq	.+24     	; 0x1412 <DIO_ReadPortValue+0x66>
    13fa:	27 c0       	rjmp	.+78     	; 0x144a <DIO_ReadPortValue+0x9e>
    13fc:	2d 81       	ldd	r18, Y+5	; 0x05
    13fe:	3e 81       	ldd	r19, Y+6	; 0x06
    1400:	22 30       	cpi	r18, 0x02	; 2
    1402:	31 05       	cpc	r19, r1
    1404:	a1 f0       	breq	.+40     	; 0x142e <DIO_ReadPortValue+0x82>
    1406:	8d 81       	ldd	r24, Y+5	; 0x05
    1408:	9e 81       	ldd	r25, Y+6	; 0x06
    140a:	83 30       	cpi	r24, 0x03	; 3
    140c:	91 05       	cpc	r25, r1
    140e:	b1 f0       	breq	.+44     	; 0x143c <DIO_ReadPortValue+0x90>
    1410:	1c c0       	rjmp	.+56     	; 0x144a <DIO_ReadPortValue+0x9e>
		{
			case DIO_PORTA:
				*copy_DIO_pValue = PINA;
    1412:	e9 e3       	ldi	r30, 0x39	; 57
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	80 81       	ld	r24, Z
    1418:	eb 81       	ldd	r30, Y+3	; 0x03
    141a:	fc 81       	ldd	r31, Y+4	; 0x04
    141c:	80 83       	st	Z, r24
    141e:	16 c0       	rjmp	.+44     	; 0x144c <DIO_ReadPortValue+0xa0>
				break;
			case DIO_PORTB:
				*copy_DIO_pValue = PINB;
    1420:	e6 e3       	ldi	r30, 0x36	; 54
    1422:	f0 e0       	ldi	r31, 0x00	; 0
    1424:	80 81       	ld	r24, Z
    1426:	eb 81       	ldd	r30, Y+3	; 0x03
    1428:	fc 81       	ldd	r31, Y+4	; 0x04
    142a:	80 83       	st	Z, r24
    142c:	0f c0       	rjmp	.+30     	; 0x144c <DIO_ReadPortValue+0xa0>
				break;
			case DIO_PORTC:
				*copy_DIO_pValue = PINC;
    142e:	e3 e3       	ldi	r30, 0x33	; 51
    1430:	f0 e0       	ldi	r31, 0x00	; 0
    1432:	80 81       	ld	r24, Z
    1434:	eb 81       	ldd	r30, Y+3	; 0x03
    1436:	fc 81       	ldd	r31, Y+4	; 0x04
    1438:	80 83       	st	Z, r24
    143a:	08 c0       	rjmp	.+16     	; 0x144c <DIO_ReadPortValue+0xa0>
				break;
			case DIO_PORTD:
				*copy_DIO_pValue = PIND;
    143c:	e0 e3       	ldi	r30, 0x30	; 48
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	80 81       	ld	r24, Z
    1442:	eb 81       	ldd	r30, Y+3	; 0x03
    1444:	fc 81       	ldd	r31, Y+4	; 0x04
    1446:	80 83       	st	Z, r24
    1448:	01 c0       	rjmp	.+2      	; 0x144c <DIO_ReadPortValue+0xa0>
				break;
			default:
				local_errorSignal = NOT_OK_STAT;
    144a:	19 82       	std	Y+1, r1	; 0x01
				break;
		}
	}

	return local_errorSignal;
    144c:	89 81       	ldd	r24, Y+1	; 0x01
}
    144e:	26 96       	adiw	r28, 0x06	; 6
    1450:	0f b6       	in	r0, 0x3f	; 63
    1452:	f8 94       	cli
    1454:	de bf       	out	0x3e, r29	; 62
    1456:	0f be       	out	0x3f, r0	; 63
    1458:	cd bf       	out	0x3d, r28	; 61
    145a:	cf 91       	pop	r28
    145c:	df 91       	pop	r29
    145e:	08 95       	ret

00001460 <DIO_setIntPullUpRes>:

uint8 DIO_setIntPullUpRes(uint8 copy_DIO_port, uint8 copy_DIO_pin)
{
    1460:	df 93       	push	r29
    1462:	cf 93       	push	r28
    1464:	00 d0       	rcall	.+0      	; 0x1466 <DIO_setIntPullUpRes+0x6>
    1466:	0f 92       	push	r0
    1468:	cd b7       	in	r28, 0x3d	; 61
    146a:	de b7       	in	r29, 0x3e	; 62
    146c:	8a 83       	std	Y+2, r24	; 0x02
    146e:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	89 83       	std	Y+1, r24	; 0x01
	local_errorSignal = DIO_setPinDirection(copy_DIO_port,copy_DIO_pin,INPUT);
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	6b 81       	ldd	r22, Y+3	; 0x03
    1478:	40 e0       	ldi	r20, 0x00	; 0
    147a:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>
    147e:	89 83       	std	Y+1, r24	; 0x01
	if (local_errorSignal == OK_STAT)
    1480:	89 81       	ldd	r24, Y+1	; 0x01
    1482:	81 30       	cpi	r24, 0x01	; 1
    1484:	31 f4       	brne	.+12     	; 0x1492 <DIO_setIntPullUpRes+0x32>
	{
		local_errorSignal = DIO_setPinValue(copy_DIO_port,copy_DIO_pin,HIGH);
    1486:	8a 81       	ldd	r24, Y+2	; 0x02
    1488:	6b 81       	ldd	r22, Y+3	; 0x03
    148a:	41 e0       	ldi	r20, 0x01	; 1
    148c:	0e 94 9a 07 	call	0xf34	; 0xf34 <DIO_setPinValue>
    1490:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_errorSignal;
    1492:	89 81       	ldd	r24, Y+1	; 0x01
}
    1494:	0f 90       	pop	r0
    1496:	0f 90       	pop	r0
    1498:	0f 90       	pop	r0
    149a:	cf 91       	pop	r28
    149c:	df 91       	pop	r29
    149e:	08 95       	ret

000014a0 <DIO_togglePin>:

uint8 DIO_togglePin(uint8 copy_DIO_port, uint8 copy_DIO_pin)
{
    14a0:	df 93       	push	r29
    14a2:	cf 93       	push	r28
    14a4:	00 d0       	rcall	.+0      	; 0x14a6 <DIO_togglePin+0x6>
    14a6:	00 d0       	rcall	.+0      	; 0x14a8 <DIO_togglePin+0x8>
    14a8:	0f 92       	push	r0
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	8a 83       	std	Y+2, r24	; 0x02
    14b0:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    14b2:	81 e0       	ldi	r24, 0x01	; 1
    14b4:	89 83       	std	Y+1, r24	; 0x01

	switch (copy_DIO_port)
    14b6:	8a 81       	ldd	r24, Y+2	; 0x02
    14b8:	28 2f       	mov	r18, r24
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	3d 83       	std	Y+5, r19	; 0x05
    14be:	2c 83       	std	Y+4, r18	; 0x04
    14c0:	8c 81       	ldd	r24, Y+4	; 0x04
    14c2:	9d 81       	ldd	r25, Y+5	; 0x05
    14c4:	81 30       	cpi	r24, 0x01	; 1
    14c6:	91 05       	cpc	r25, r1
    14c8:	49 f1       	breq	.+82     	; 0x151c <DIO_togglePin+0x7c>
    14ca:	2c 81       	ldd	r18, Y+4	; 0x04
    14cc:	3d 81       	ldd	r19, Y+5	; 0x05
    14ce:	22 30       	cpi	r18, 0x02	; 2
    14d0:	31 05       	cpc	r19, r1
    14d2:	2c f4       	brge	.+10     	; 0x14de <DIO_togglePin+0x3e>
    14d4:	8c 81       	ldd	r24, Y+4	; 0x04
    14d6:	9d 81       	ldd	r25, Y+5	; 0x05
    14d8:	00 97       	sbiw	r24, 0x00	; 0
    14da:	61 f0       	breq	.+24     	; 0x14f4 <DIO_togglePin+0x54>
    14dc:	5b c0       	rjmp	.+182    	; 0x1594 <DIO_togglePin+0xf4>
    14de:	2c 81       	ldd	r18, Y+4	; 0x04
    14e0:	3d 81       	ldd	r19, Y+5	; 0x05
    14e2:	22 30       	cpi	r18, 0x02	; 2
    14e4:	31 05       	cpc	r19, r1
    14e6:	71 f1       	breq	.+92     	; 0x1544 <DIO_togglePin+0xa4>
    14e8:	8c 81       	ldd	r24, Y+4	; 0x04
    14ea:	9d 81       	ldd	r25, Y+5	; 0x05
    14ec:	83 30       	cpi	r24, 0x03	; 3
    14ee:	91 05       	cpc	r25, r1
    14f0:	e9 f1       	breq	.+122    	; 0x156c <DIO_togglePin+0xcc>
    14f2:	50 c0       	rjmp	.+160    	; 0x1594 <DIO_togglePin+0xf4>
		{
			case DIO_PORTA:
				TOGGLE_BIT(PORTA,copy_DIO_pin);
    14f4:	ab e3       	ldi	r26, 0x3B	; 59
    14f6:	b0 e0       	ldi	r27, 0x00	; 0
    14f8:	eb e3       	ldi	r30, 0x3B	; 59
    14fa:	f0 e0       	ldi	r31, 0x00	; 0
    14fc:	80 81       	ld	r24, Z
    14fe:	48 2f       	mov	r20, r24
    1500:	8b 81       	ldd	r24, Y+3	; 0x03
    1502:	28 2f       	mov	r18, r24
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	02 2e       	mov	r0, r18
    150c:	02 c0       	rjmp	.+4      	; 0x1512 <DIO_togglePin+0x72>
    150e:	88 0f       	add	r24, r24
    1510:	99 1f       	adc	r25, r25
    1512:	0a 94       	dec	r0
    1514:	e2 f7       	brpl	.-8      	; 0x150e <DIO_togglePin+0x6e>
    1516:	84 27       	eor	r24, r20
    1518:	8c 93       	st	X, r24
    151a:	3d c0       	rjmp	.+122    	; 0x1596 <DIO_togglePin+0xf6>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(PORTB,copy_DIO_pin);
    151c:	a8 e3       	ldi	r26, 0x38	; 56
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	e8 e3       	ldi	r30, 0x38	; 56
    1522:	f0 e0       	ldi	r31, 0x00	; 0
    1524:	80 81       	ld	r24, Z
    1526:	48 2f       	mov	r20, r24
    1528:	8b 81       	ldd	r24, Y+3	; 0x03
    152a:	28 2f       	mov	r18, r24
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	02 2e       	mov	r0, r18
    1534:	02 c0       	rjmp	.+4      	; 0x153a <DIO_togglePin+0x9a>
    1536:	88 0f       	add	r24, r24
    1538:	99 1f       	adc	r25, r25
    153a:	0a 94       	dec	r0
    153c:	e2 f7       	brpl	.-8      	; 0x1536 <DIO_togglePin+0x96>
    153e:	84 27       	eor	r24, r20
    1540:	8c 93       	st	X, r24
    1542:	29 c0       	rjmp	.+82     	; 0x1596 <DIO_togglePin+0xf6>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(PORTC,copy_DIO_pin);
    1544:	a5 e3       	ldi	r26, 0x35	; 53
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	e5 e3       	ldi	r30, 0x35	; 53
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	80 81       	ld	r24, Z
    154e:	48 2f       	mov	r20, r24
    1550:	8b 81       	ldd	r24, Y+3	; 0x03
    1552:	28 2f       	mov	r18, r24
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	81 e0       	ldi	r24, 0x01	; 1
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	02 2e       	mov	r0, r18
    155c:	02 c0       	rjmp	.+4      	; 0x1562 <DIO_togglePin+0xc2>
    155e:	88 0f       	add	r24, r24
    1560:	99 1f       	adc	r25, r25
    1562:	0a 94       	dec	r0
    1564:	e2 f7       	brpl	.-8      	; 0x155e <DIO_togglePin+0xbe>
    1566:	84 27       	eor	r24, r20
    1568:	8c 93       	st	X, r24
    156a:	15 c0       	rjmp	.+42     	; 0x1596 <DIO_togglePin+0xf6>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(PORTD,copy_DIO_pin);
    156c:	a2 e3       	ldi	r26, 0x32	; 50
    156e:	b0 e0       	ldi	r27, 0x00	; 0
    1570:	e2 e3       	ldi	r30, 0x32	; 50
    1572:	f0 e0       	ldi	r31, 0x00	; 0
    1574:	80 81       	ld	r24, Z
    1576:	48 2f       	mov	r20, r24
    1578:	8b 81       	ldd	r24, Y+3	; 0x03
    157a:	28 2f       	mov	r18, r24
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	81 e0       	ldi	r24, 0x01	; 1
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	02 2e       	mov	r0, r18
    1584:	02 c0       	rjmp	.+4      	; 0x158a <DIO_togglePin+0xea>
    1586:	88 0f       	add	r24, r24
    1588:	99 1f       	adc	r25, r25
    158a:	0a 94       	dec	r0
    158c:	e2 f7       	brpl	.-8      	; 0x1586 <DIO_togglePin+0xe6>
    158e:	84 27       	eor	r24, r20
    1590:	8c 93       	st	X, r24
    1592:	01 c0       	rjmp	.+2      	; 0x1596 <DIO_togglePin+0xf6>
				break;
			default:
				local_errorSignal = NOT_OK_STAT;
    1594:	19 82       	std	Y+1, r1	; 0x01
				break;
		}
	return local_errorSignal;
    1596:	89 81       	ldd	r24, Y+1	; 0x01


}
    1598:	0f 90       	pop	r0
    159a:	0f 90       	pop	r0
    159c:	0f 90       	pop	r0
    159e:	0f 90       	pop	r0
    15a0:	0f 90       	pop	r0
    15a2:	cf 91       	pop	r28
    15a4:	df 91       	pop	r29
    15a6:	08 95       	ret

000015a8 <BUZZER_turnOn>:
#include "BUZZER_Private.h"
#include "BUZZER_cfg.h"
#include "BUZZER_Interface.h"

uint8 BUZZER_turnOn(uint8 BUZZER_port, uint8 BUZZER_pin)
{
    15a8:	df 93       	push	r29
    15aa:	cf 93       	push	r28
    15ac:	00 d0       	rcall	.+0      	; 0x15ae <BUZZER_turnOn+0x6>
    15ae:	0f 92       	push	r0
    15b0:	cd b7       	in	r28, 0x3d	; 61
    15b2:	de b7       	in	r29, 0x3e	; 62
    15b4:	8a 83       	std	Y+2, r24	; 0x02
    15b6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	89 83       	std	Y+1, r24	; 0x01
	local_errorSignal = DIO_setPinValue(BUZZER_port,BUZZER_pin,HIGH);
    15bc:	8a 81       	ldd	r24, Y+2	; 0x02
    15be:	6b 81       	ldd	r22, Y+3	; 0x03
    15c0:	41 e0       	ldi	r20, 0x01	; 1
    15c2:	0e 94 9a 07 	call	0xf34	; 0xf34 <DIO_setPinValue>
    15c6:	89 83       	std	Y+1, r24	; 0x01
	return local_errorSignal;
    15c8:	89 81       	ldd	r24, Y+1	; 0x01
}
    15ca:	0f 90       	pop	r0
    15cc:	0f 90       	pop	r0
    15ce:	0f 90       	pop	r0
    15d0:	cf 91       	pop	r28
    15d2:	df 91       	pop	r29
    15d4:	08 95       	ret

000015d6 <BUZZER_turnOff>:

uint8 BUZZER_turnOff(uint8 BUZZER_port, uint8 BUZZER_pin)
{
    15d6:	df 93       	push	r29
    15d8:	cf 93       	push	r28
    15da:	00 d0       	rcall	.+0      	; 0x15dc <BUZZER_turnOff+0x6>
    15dc:	0f 92       	push	r0
    15de:	cd b7       	in	r28, 0x3d	; 61
    15e0:	de b7       	in	r29, 0x3e	; 62
    15e2:	8a 83       	std	Y+2, r24	; 0x02
    15e4:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorSignal = OK_STAT;
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	89 83       	std	Y+1, r24	; 0x01
	local_errorSignal = DIO_setPinValue(BUZZER_port,BUZZER_pin,LOW);
    15ea:	8a 81       	ldd	r24, Y+2	; 0x02
    15ec:	6b 81       	ldd	r22, Y+3	; 0x03
    15ee:	40 e0       	ldi	r20, 0x00	; 0
    15f0:	0e 94 9a 07 	call	0xf34	; 0xf34 <DIO_setPinValue>
    15f4:	89 83       	std	Y+1, r24	; 0x01
	return local_errorSignal;
    15f6:	89 81       	ldd	r24, Y+1	; 0x01
}
    15f8:	0f 90       	pop	r0
    15fa:	0f 90       	pop	r0
    15fc:	0f 90       	pop	r0
    15fe:	cf 91       	pop	r28
    1600:	df 91       	pop	r29
    1602:	08 95       	ret

00001604 <BTN_readButtonState>:

#include "../DIO/DIO_Interface.h"


uint8 BTN_readButtonState(uint8 copy_BTN_port,uint8 copy_BTN_pin, uint8 *copy_BTN_state)
{
    1604:	df 93       	push	r29
    1606:	cf 93       	push	r28
    1608:	00 d0       	rcall	.+0      	; 0x160a <BTN_readButtonState+0x6>
    160a:	00 d0       	rcall	.+0      	; 0x160c <BTN_readButtonState+0x8>
    160c:	0f 92       	push	r0
    160e:	cd b7       	in	r28, 0x3d	; 61
    1610:	de b7       	in	r29, 0x3e	; 62
    1612:	8a 83       	std	Y+2, r24	; 0x02
    1614:	6b 83       	std	Y+3, r22	; 0x03
    1616:	5d 83       	std	Y+5, r21	; 0x05
    1618:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorStat = OK_STAT;
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	89 83       	std	Y+1, r24	; 0x01
	local_errorStat = DIO_ReadPinValue(copy_BTN_port,copy_BTN_pin,copy_BTN_state);
    161e:	2c 81       	ldd	r18, Y+4	; 0x04
    1620:	3d 81       	ldd	r19, Y+5	; 0x05
    1622:	8a 81       	ldd	r24, Y+2	; 0x02
    1624:	6b 81       	ldd	r22, Y+3	; 0x03
    1626:	a9 01       	movw	r20, r18
    1628:	0e 94 a9 08 	call	0x1152	; 0x1152 <DIO_ReadPinValue>
    162c:	89 83       	std	Y+1, r24	; 0x01
	return local_errorStat;
    162e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1630:	0f 90       	pop	r0
    1632:	0f 90       	pop	r0
    1634:	0f 90       	pop	r0
    1636:	0f 90       	pop	r0
    1638:	0f 90       	pop	r0
    163a:	cf 91       	pop	r28
    163c:	df 91       	pop	r29
    163e:	08 95       	ret

00001640 <main>:
#include "LED/LED_Interface.h"
#include "BUZZER/BUZZER_Interface.h"

#include "main.h"
int main(void)
{
    1640:	df 93       	push	r29
    1642:	cf 93       	push	r28
    1644:	cd b7       	in	r28, 0x3d	; 61
    1646:	de b7       	in	r29, 0x3e	; 62
    1648:	6b 97       	sbiw	r28, 0x1b	; 27
    164a:	0f b6       	in	r0, 0x3f	; 63
    164c:	f8 94       	cli
    164e:	de bf       	out	0x3e, r29	; 62
    1650:	0f be       	out	0x3f, r0	; 63
    1652:	cd bf       	out	0x3d, r28	; 61
	uint8 btnState1 = 0;
    1654:	19 8e       	std	Y+25, r1	; 0x19
	uint8 btnState2 = 0;
    1656:	1a 8e       	std	Y+26, r1	; 0x1a
	uint8 btnState3 = 0;
    1658:	1b 8e       	std	Y+27, r1	; 0x1b
	Initialize();
    165a:	0e 94 1e 0c 	call	0x183c	; 0x183c <Initialize>
	while (1)
	{
		BTN_readButtonState(DIO_PORTB,PIN0,&btnState1);
    165e:	9e 01       	movw	r18, r28
    1660:	27 5e       	subi	r18, 0xE7	; 231
    1662:	3f 4f       	sbci	r19, 0xFF	; 255
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	60 e0       	ldi	r22, 0x00	; 0
    1668:	a9 01       	movw	r20, r18
    166a:	0e 94 02 0b 	call	0x1604	; 0x1604 <BTN_readButtonState>
		BTN_readButtonState(DIO_PORTD,PIN6,&btnState2);
    166e:	9e 01       	movw	r18, r28
    1670:	26 5e       	subi	r18, 0xE6	; 230
    1672:	3f 4f       	sbci	r19, 0xFF	; 255
    1674:	83 e0       	ldi	r24, 0x03	; 3
    1676:	66 e0       	ldi	r22, 0x06	; 6
    1678:	a9 01       	movw	r20, r18
    167a:	0e 94 02 0b 	call	0x1604	; 0x1604 <BTN_readButtonState>
		BTN_readButtonState(DIO_PORTD,PIN2,&btnState3);
    167e:	9e 01       	movw	r18, r28
    1680:	25 5e       	subi	r18, 0xE5	; 229
    1682:	3f 4f       	sbci	r19, 0xFF	; 255
    1684:	83 e0       	ldi	r24, 0x03	; 3
    1686:	62 e0       	ldi	r22, 0x02	; 2
    1688:	a9 01       	movw	r20, r18
    168a:	0e 94 02 0b 	call	0x1604	; 0x1604 <BTN_readButtonState>
    168e:	80 e0       	ldi	r24, 0x00	; 0
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	a8 e4       	ldi	r26, 0x48	; 72
    1694:	b2 e4       	ldi	r27, 0x42	; 66
    1696:	8d 8b       	std	Y+21, r24	; 0x15
    1698:	9e 8b       	std	Y+22, r25	; 0x16
    169a:	af 8b       	std	Y+23, r26	; 0x17
    169c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    169e:	6d 89       	ldd	r22, Y+21	; 0x15
    16a0:	7e 89       	ldd	r23, Y+22	; 0x16
    16a2:	8f 89       	ldd	r24, Y+23	; 0x17
    16a4:	98 8d       	ldd	r25, Y+24	; 0x18
    16a6:	2b ea       	ldi	r18, 0xAB	; 171
    16a8:	3a ea       	ldi	r19, 0xAA	; 170
    16aa:	4a ea       	ldi	r20, 0xAA	; 170
    16ac:	5e e3       	ldi	r21, 0x3E	; 62
    16ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16b2:	dc 01       	movw	r26, r24
    16b4:	cb 01       	movw	r24, r22
    16b6:	89 8b       	std	Y+17, r24	; 0x11
    16b8:	9a 8b       	std	Y+18, r25	; 0x12
    16ba:	ab 8b       	std	Y+19, r26	; 0x13
    16bc:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    16be:	69 89       	ldd	r22, Y+17	; 0x11
    16c0:	7a 89       	ldd	r23, Y+18	; 0x12
    16c2:	8b 89       	ldd	r24, Y+19	; 0x13
    16c4:	9c 89       	ldd	r25, Y+20	; 0x14
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	40 e8       	ldi	r20, 0x80	; 128
    16cc:	5f e3       	ldi	r21, 0x3F	; 63
    16ce:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    16d2:	88 23       	and	r24, r24
    16d4:	1c f4       	brge	.+6      	; 0x16dc <main+0x9c>
		__ticks = 1;
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	88 8b       	std	Y+16, r24	; 0x10
    16da:	91 c0       	rjmp	.+290    	; 0x17fe <main+0x1be>
	else if (__tmp > 255)
    16dc:	69 89       	ldd	r22, Y+17	; 0x11
    16de:	7a 89       	ldd	r23, Y+18	; 0x12
    16e0:	8b 89       	ldd	r24, Y+19	; 0x13
    16e2:	9c 89       	ldd	r25, Y+20	; 0x14
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	4f e7       	ldi	r20, 0x7F	; 127
    16ea:	53 e4       	ldi	r21, 0x43	; 67
    16ec:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16f0:	18 16       	cp	r1, r24
    16f2:	0c f0       	brlt	.+2      	; 0x16f6 <main+0xb6>
    16f4:	7b c0       	rjmp	.+246    	; 0x17ec <main+0x1ac>
	{
		_delay_ms(__us / 1000.0);
    16f6:	6d 89       	ldd	r22, Y+21	; 0x15
    16f8:	7e 89       	ldd	r23, Y+22	; 0x16
    16fa:	8f 89       	ldd	r24, Y+23	; 0x17
    16fc:	98 8d       	ldd	r25, Y+24	; 0x18
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	4a e7       	ldi	r20, 0x7A	; 122
    1704:	54 e4       	ldi	r21, 0x44	; 68
    1706:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	8c 87       	std	Y+12, r24	; 0x0c
    1710:	9d 87       	std	Y+13, r25	; 0x0d
    1712:	ae 87       	std	Y+14, r26	; 0x0e
    1714:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1716:	6c 85       	ldd	r22, Y+12	; 0x0c
    1718:	7d 85       	ldd	r23, Y+13	; 0x0d
    171a:	8e 85       	ldd	r24, Y+14	; 0x0e
    171c:	9f 85       	ldd	r25, Y+15	; 0x0f
    171e:	20 e0       	ldi	r18, 0x00	; 0
    1720:	30 e0       	ldi	r19, 0x00	; 0
    1722:	4a e7       	ldi	r20, 0x7A	; 122
    1724:	53 e4       	ldi	r21, 0x43	; 67
    1726:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    172a:	dc 01       	movw	r26, r24
    172c:	cb 01       	movw	r24, r22
    172e:	88 87       	std	Y+8, r24	; 0x08
    1730:	99 87       	std	Y+9, r25	; 0x09
    1732:	aa 87       	std	Y+10, r26	; 0x0a
    1734:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1736:	68 85       	ldd	r22, Y+8	; 0x08
    1738:	79 85       	ldd	r23, Y+9	; 0x09
    173a:	8a 85       	ldd	r24, Y+10	; 0x0a
    173c:	9b 85       	ldd	r25, Y+11	; 0x0b
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	40 e8       	ldi	r20, 0x80	; 128
    1744:	5f e3       	ldi	r21, 0x3F	; 63
    1746:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    174a:	88 23       	and	r24, r24
    174c:	2c f4       	brge	.+10     	; 0x1758 <main+0x118>
		__ticks = 1;
    174e:	81 e0       	ldi	r24, 0x01	; 1
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	9f 83       	std	Y+7, r25	; 0x07
    1754:	8e 83       	std	Y+6, r24	; 0x06
    1756:	3f c0       	rjmp	.+126    	; 0x17d6 <main+0x196>
	else if (__tmp > 65535)
    1758:	68 85       	ldd	r22, Y+8	; 0x08
    175a:	79 85       	ldd	r23, Y+9	; 0x09
    175c:	8a 85       	ldd	r24, Y+10	; 0x0a
    175e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	3f ef       	ldi	r19, 0xFF	; 255
    1764:	4f e7       	ldi	r20, 0x7F	; 127
    1766:	57 e4       	ldi	r21, 0x47	; 71
    1768:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    176c:	18 16       	cp	r1, r24
    176e:	4c f5       	brge	.+82     	; 0x17c2 <main+0x182>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1770:	6c 85       	ldd	r22, Y+12	; 0x0c
    1772:	7d 85       	ldd	r23, Y+13	; 0x0d
    1774:	8e 85       	ldd	r24, Y+14	; 0x0e
    1776:	9f 85       	ldd	r25, Y+15	; 0x0f
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	40 e2       	ldi	r20, 0x20	; 32
    177e:	51 e4       	ldi	r21, 0x41	; 65
    1780:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1784:	dc 01       	movw	r26, r24
    1786:	cb 01       	movw	r24, r22
    1788:	bc 01       	movw	r22, r24
    178a:	cd 01       	movw	r24, r26
    178c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1790:	dc 01       	movw	r26, r24
    1792:	cb 01       	movw	r24, r22
    1794:	9f 83       	std	Y+7, r25	; 0x07
    1796:	8e 83       	std	Y+6, r24	; 0x06
    1798:	0f c0       	rjmp	.+30     	; 0x17b8 <main+0x178>
    179a:	89 e1       	ldi	r24, 0x19	; 25
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	9d 83       	std	Y+5, r25	; 0x05
    17a0:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    17a2:	8c 81       	ldd	r24, Y+4	; 0x04
    17a4:	9d 81       	ldd	r25, Y+5	; 0x05
    17a6:	01 97       	sbiw	r24, 0x01	; 1
    17a8:	f1 f7       	brne	.-4      	; 0x17a6 <main+0x166>
    17aa:	9d 83       	std	Y+5, r25	; 0x05
    17ac:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ae:	8e 81       	ldd	r24, Y+6	; 0x06
    17b0:	9f 81       	ldd	r25, Y+7	; 0x07
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	9f 83       	std	Y+7, r25	; 0x07
    17b6:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b8:	8e 81       	ldd	r24, Y+6	; 0x06
    17ba:	9f 81       	ldd	r25, Y+7	; 0x07
    17bc:	00 97       	sbiw	r24, 0x00	; 0
    17be:	69 f7       	brne	.-38     	; 0x179a <main+0x15a>
    17c0:	24 c0       	rjmp	.+72     	; 0x180a <main+0x1ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17c2:	68 85       	ldd	r22, Y+8	; 0x08
    17c4:	79 85       	ldd	r23, Y+9	; 0x09
    17c6:	8a 85       	ldd	r24, Y+10	; 0x0a
    17c8:	9b 85       	ldd	r25, Y+11	; 0x0b
    17ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	9f 83       	std	Y+7, r25	; 0x07
    17d4:	8e 83       	std	Y+6, r24	; 0x06
    17d6:	8e 81       	ldd	r24, Y+6	; 0x06
    17d8:	9f 81       	ldd	r25, Y+7	; 0x07
    17da:	9b 83       	std	Y+3, r25	; 0x03
    17dc:	8a 83       	std	Y+2, r24	; 0x02
    17de:	8a 81       	ldd	r24, Y+2	; 0x02
    17e0:	9b 81       	ldd	r25, Y+3	; 0x03
    17e2:	01 97       	sbiw	r24, 0x01	; 1
    17e4:	f1 f7       	brne	.-4      	; 0x17e2 <main+0x1a2>
    17e6:	9b 83       	std	Y+3, r25	; 0x03
    17e8:	8a 83       	std	Y+2, r24	; 0x02
    17ea:	0f c0       	rjmp	.+30     	; 0x180a <main+0x1ca>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    17ec:	69 89       	ldd	r22, Y+17	; 0x11
    17ee:	7a 89       	ldd	r23, Y+18	; 0x12
    17f0:	8b 89       	ldd	r24, Y+19	; 0x13
    17f2:	9c 89       	ldd	r25, Y+20	; 0x14
    17f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	88 8b       	std	Y+16, r24	; 0x10
    17fe:	88 89       	ldd	r24, Y+16	; 0x10
    1800:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1802:	89 81       	ldd	r24, Y+1	; 0x01
    1804:	8a 95       	dec	r24
    1806:	f1 f7       	brne	.-4      	; 0x1804 <main+0x1c4>
    1808:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(50);
		if (btnState1 == HIGH)
    180a:	89 8d       	ldd	r24, Y+25	; 0x19
    180c:	81 30       	cpi	r24, 0x01	; 1
    180e:	29 f4       	brne	.+10     	; 0x181a <main+0x1da>
		{
			btnState2 = LOW;
    1810:	1a 8e       	std	Y+26, r1	; 0x1a
			btnState3 = LOW;
    1812:	1b 8e       	std	Y+27, r1	; 0x1b
			ProgramOne();
    1814:	0e 94 48 0c 	call	0x1890	; 0x1890 <ProgramOne>
    1818:	22 cf       	rjmp	.-444    	; 0x165e <main+0x1e>
		}
		else if (btnState2 == HIGH)
    181a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    181c:	81 30       	cpi	r24, 0x01	; 1
    181e:	29 f4       	brne	.+10     	; 0x182a <main+0x1ea>
		{
			btnState1 = LOW;
    1820:	19 8e       	std	Y+25, r1	; 0x19
			btnState3 = LOW;
    1822:	1b 8e       	std	Y+27, r1	; 0x1b
			ProgramTwo();
    1824:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <ProgramTwo>
    1828:	1a cf       	rjmp	.-460    	; 0x165e <main+0x1e>
		}
		else if (btnState3 == HIGH)
    182a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    182c:	81 30       	cpi	r24, 0x01	; 1
    182e:	09 f0       	breq	.+2      	; 0x1832 <main+0x1f2>
    1830:	16 cf       	rjmp	.-468    	; 0x165e <main+0x1e>
		{
			btnState2 = LOW;
    1832:	1a 8e       	std	Y+26, r1	; 0x1a
			btnState1 = LOW;
    1834:	19 8e       	std	Y+25, r1	; 0x19
			ProgramThree();
    1836:	0e 94 bd 13 	call	0x277a	; 0x277a <ProgramThree>
    183a:	11 cf       	rjmp	.-478    	; 0x165e <main+0x1e>

0000183c <Initialize>:
		}
	}
}

void Initialize(void)
{
    183c:	df 93       	push	r29
    183e:	cf 93       	push	r28
    1840:	cd b7       	in	r28, 0x3d	; 61
    1842:	de b7       	in	r29, 0x3e	; 62
	DIO_setPinDirection(DIO_PORTB,PIN0,INPUT);
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	60 e0       	ldi	r22, 0x00	; 0
    1848:	40 e0       	ldi	r20, 0x00	; 0
    184a:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,PIN6,INPUT);
    184e:	83 e0       	ldi	r24, 0x03	; 3
    1850:	66 e0       	ldi	r22, 0x06	; 6
    1852:	40 e0       	ldi	r20, 0x00	; 0
    1854:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,PIN2,INPUT);
    1858:	83 e0       	ldi	r24, 0x03	; 3
    185a:	62 e0       	ldi	r22, 0x02	; 2
    185c:	40 e0       	ldi	r20, 0x00	; 0
    185e:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>

	DIO_setPinDirection(DIO_PORTC,PIN2,OUTPUT);
    1862:	82 e0       	ldi	r24, 0x02	; 2
    1864:	62 e0       	ldi	r22, 0x02	; 2
    1866:	41 e0       	ldi	r20, 0x01	; 1
    1868:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTC,PIN7,OUTPUT);
    186c:	82 e0       	ldi	r24, 0x02	; 2
    186e:	67 e0       	ldi	r22, 0x07	; 7
    1870:	41 e0       	ldi	r20, 0x01	; 1
    1872:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTD,PIN3,OUTPUT);
    1876:	83 e0       	ldi	r24, 0x03	; 3
    1878:	63 e0       	ldi	r22, 0x03	; 3
    187a:	41 e0       	ldi	r20, 0x01	; 1
    187c:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>

	DIO_setPinDirection(DIO_PORTA,PIN3,OUTPUT);
    1880:	80 e0       	ldi	r24, 0x00	; 0
    1882:	63 e0       	ldi	r22, 0x03	; 3
    1884:	41 e0       	ldi	r20, 0x01	; 1
    1886:	0e 94 8b 06 	call	0xd16	; 0xd16 <DIO_setPinDirection>
}
    188a:	cf 91       	pop	r28
    188c:	df 91       	pop	r29
    188e:	08 95       	ret

00001890 <ProgramOne>:

void ProgramOne(void)
{
    1890:	0f 93       	push	r16
    1892:	1f 93       	push	r17
    1894:	df 93       	push	r29
    1896:	cf 93       	push	r28
    1898:	cd b7       	in	r28, 0x3d	; 61
    189a:	de b7       	in	r29, 0x3e	; 62
    189c:	c4 55       	subi	r28, 0x54	; 84
    189e:	d0 40       	sbci	r29, 0x00	; 0
    18a0:	0f b6       	in	r0, 0x3f	; 63
    18a2:	f8 94       	cli
    18a4:	de bf       	out	0x3e, r29	; 62
    18a6:	0f be       	out	0x3f, r0	; 63
    18a8:	cd bf       	out	0x3d, r28	; 61
	 LED_turnOn(DIO_PORTC,PIN2);
    18aa:	82 e0       	ldi	r24, 0x02	; 2
    18ac:	62 e0       	ldi	r22, 0x02	; 2
    18ae:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	 BUZZER_turnOn(DIO_PORTA,PIN3);
    18b2:	80 e0       	ldi	r24, 0x00	; 0
    18b4:	63 e0       	ldi	r22, 0x03	; 3
    18b6:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <BUZZER_turnOn>
    18ba:	fe 01       	movw	r30, r28
    18bc:	ef 5a       	subi	r30, 0xAF	; 175
    18be:	ff 4f       	sbci	r31, 0xFF	; 255
    18c0:	80 e0       	ldi	r24, 0x00	; 0
    18c2:	90 e4       	ldi	r25, 0x40	; 64
    18c4:	ac e1       	ldi	r26, 0x1C	; 28
    18c6:	b6 e4       	ldi	r27, 0x46	; 70
    18c8:	80 83       	st	Z, r24
    18ca:	91 83       	std	Z+1, r25	; 0x01
    18cc:	a2 83       	std	Z+2, r26	; 0x02
    18ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d0:	8e 01       	movw	r16, r28
    18d2:	03 5b       	subi	r16, 0xB3	; 179
    18d4:	1f 4f       	sbci	r17, 0xFF	; 255
    18d6:	fe 01       	movw	r30, r28
    18d8:	ef 5a       	subi	r30, 0xAF	; 175
    18da:	ff 4f       	sbci	r31, 0xFF	; 255
    18dc:	60 81       	ld	r22, Z
    18de:	71 81       	ldd	r23, Z+1	; 0x01
    18e0:	82 81       	ldd	r24, Z+2	; 0x02
    18e2:	93 81       	ldd	r25, Z+3	; 0x03
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	4a e7       	ldi	r20, 0x7A	; 122
    18ea:	53 e4       	ldi	r21, 0x43	; 67
    18ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	f8 01       	movw	r30, r16
    18f6:	80 83       	st	Z, r24
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	a2 83       	std	Z+2, r26	; 0x02
    18fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18fe:	fe 01       	movw	r30, r28
    1900:	e3 5b       	subi	r30, 0xB3	; 179
    1902:	ff 4f       	sbci	r31, 0xFF	; 255
    1904:	60 81       	ld	r22, Z
    1906:	71 81       	ldd	r23, Z+1	; 0x01
    1908:	82 81       	ldd	r24, Z+2	; 0x02
    190a:	93 81       	ldd	r25, Z+3	; 0x03
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	40 e8       	ldi	r20, 0x80	; 128
    1912:	5f e3       	ldi	r21, 0x3F	; 63
    1914:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1918:	88 23       	and	r24, r24
    191a:	44 f4       	brge	.+16     	; 0x192c <ProgramOne+0x9c>
		__ticks = 1;
    191c:	fe 01       	movw	r30, r28
    191e:	e5 5b       	subi	r30, 0xB5	; 181
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	91 83       	std	Z+1, r25	; 0x01
    1928:	80 83       	st	Z, r24
    192a:	64 c0       	rjmp	.+200    	; 0x19f4 <ProgramOne+0x164>
	else if (__tmp > 65535)
    192c:	fe 01       	movw	r30, r28
    192e:	e3 5b       	subi	r30, 0xB3	; 179
    1930:	ff 4f       	sbci	r31, 0xFF	; 255
    1932:	60 81       	ld	r22, Z
    1934:	71 81       	ldd	r23, Z+1	; 0x01
    1936:	82 81       	ldd	r24, Z+2	; 0x02
    1938:	93 81       	ldd	r25, Z+3	; 0x03
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	3f ef       	ldi	r19, 0xFF	; 255
    193e:	4f e7       	ldi	r20, 0x7F	; 127
    1940:	57 e4       	ldi	r21, 0x47	; 71
    1942:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1946:	18 16       	cp	r1, r24
    1948:	0c f0       	brlt	.+2      	; 0x194c <ProgramOne+0xbc>
    194a:	43 c0       	rjmp	.+134    	; 0x19d2 <ProgramOne+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    194c:	fe 01       	movw	r30, r28
    194e:	ef 5a       	subi	r30, 0xAF	; 175
    1950:	ff 4f       	sbci	r31, 0xFF	; 255
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	40 e2       	ldi	r20, 0x20	; 32
    1960:	51 e4       	ldi	r21, 0x41	; 65
    1962:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22
    196a:	8e 01       	movw	r16, r28
    196c:	05 5b       	subi	r16, 0xB5	; 181
    196e:	1f 4f       	sbci	r17, 0xFF	; 255
    1970:	bc 01       	movw	r22, r24
    1972:	cd 01       	movw	r24, r26
    1974:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	f8 01       	movw	r30, r16
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	80 83       	st	Z, r24
    1982:	1f c0       	rjmp	.+62     	; 0x19c2 <ProgramOne+0x132>
    1984:	fe 01       	movw	r30, r28
    1986:	e7 5b       	subi	r30, 0xB7	; 183
    1988:	ff 4f       	sbci	r31, 0xFF	; 255
    198a:	89 e1       	ldi	r24, 0x19	; 25
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	91 83       	std	Z+1, r25	; 0x01
    1990:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1992:	fe 01       	movw	r30, r28
    1994:	e7 5b       	subi	r30, 0xB7	; 183
    1996:	ff 4f       	sbci	r31, 0xFF	; 255
    1998:	80 81       	ld	r24, Z
    199a:	91 81       	ldd	r25, Z+1	; 0x01
    199c:	01 97       	sbiw	r24, 0x01	; 1
    199e:	f1 f7       	brne	.-4      	; 0x199c <ProgramOne+0x10c>
    19a0:	fe 01       	movw	r30, r28
    19a2:	e7 5b       	subi	r30, 0xB7	; 183
    19a4:	ff 4f       	sbci	r31, 0xFF	; 255
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19aa:	de 01       	movw	r26, r28
    19ac:	a5 5b       	subi	r26, 0xB5	; 181
    19ae:	bf 4f       	sbci	r27, 0xFF	; 255
    19b0:	fe 01       	movw	r30, r28
    19b2:	e5 5b       	subi	r30, 0xB5	; 181
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	80 81       	ld	r24, Z
    19b8:	91 81       	ldd	r25, Z+1	; 0x01
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	11 96       	adiw	r26, 0x01	; 1
    19be:	9c 93       	st	X, r25
    19c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c2:	fe 01       	movw	r30, r28
    19c4:	e5 5b       	subi	r30, 0xB5	; 181
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	80 81       	ld	r24, Z
    19ca:	91 81       	ldd	r25, Z+1	; 0x01
    19cc:	00 97       	sbiw	r24, 0x00	; 0
    19ce:	d1 f6       	brne	.-76     	; 0x1984 <ProgramOne+0xf4>
    19d0:	27 c0       	rjmp	.+78     	; 0x1a20 <ProgramOne+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d2:	8e 01       	movw	r16, r28
    19d4:	05 5b       	subi	r16, 0xB5	; 181
    19d6:	1f 4f       	sbci	r17, 0xFF	; 255
    19d8:	fe 01       	movw	r30, r28
    19da:	e3 5b       	subi	r30, 0xB3	; 179
    19dc:	ff 4f       	sbci	r31, 0xFF	; 255
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19ea:	dc 01       	movw	r26, r24
    19ec:	cb 01       	movw	r24, r22
    19ee:	f8 01       	movw	r30, r16
    19f0:	91 83       	std	Z+1, r25	; 0x01
    19f2:	80 83       	st	Z, r24
    19f4:	de 01       	movw	r26, r28
    19f6:	a9 5b       	subi	r26, 0xB9	; 185
    19f8:	bf 4f       	sbci	r27, 0xFF	; 255
    19fa:	fe 01       	movw	r30, r28
    19fc:	e5 5b       	subi	r30, 0xB5	; 181
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	80 81       	ld	r24, Z
    1a02:	91 81       	ldd	r25, Z+1	; 0x01
    1a04:	8d 93       	st	X+, r24
    1a06:	9c 93       	st	X, r25
    1a08:	fe 01       	movw	r30, r28
    1a0a:	e9 5b       	subi	r30, 0xB9	; 185
    1a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0e:	80 81       	ld	r24, Z
    1a10:	91 81       	ldd	r25, Z+1	; 0x01
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <ProgramOne+0x182>
    1a16:	fe 01       	movw	r30, r28
    1a18:	e9 5b       	subi	r30, 0xB9	; 185
    1a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1c:	91 83       	std	Z+1, r25	; 0x01
    1a1e:	80 83       	st	Z, r24
	 _delay_ms(10000);
	 LED_turnOff(DIO_PORTC,PIN2);
    1a20:	82 e0       	ldi	r24, 0x02	; 2
    1a22:	62 e0       	ldi	r22, 0x02	; 2
    1a24:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	 BUZZER_turnOff(DIO_PORTA,PIN3);
    1a28:	80 e0       	ldi	r24, 0x00	; 0
    1a2a:	63 e0       	ldi	r22, 0x03	; 3
    1a2c:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <BUZZER_turnOff>
    1a30:	fe 01       	movw	r30, r28
    1a32:	ed 5b       	subi	r30, 0xBD	; 189
    1a34:	ff 4f       	sbci	r31, 0xFF	; 255
    1a36:	80 e0       	ldi	r24, 0x00	; 0
    1a38:	90 e4       	ldi	r25, 0x40	; 64
    1a3a:	ac e9       	ldi	r26, 0x9C	; 156
    1a3c:	b5 e4       	ldi	r27, 0x45	; 69
    1a3e:	80 83       	st	Z, r24
    1a40:	91 83       	std	Z+1, r25	; 0x01
    1a42:	a2 83       	std	Z+2, r26	; 0x02
    1a44:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a46:	8e 01       	movw	r16, r28
    1a48:	01 5c       	subi	r16, 0xC1	; 193
    1a4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	ed 5b       	subi	r30, 0xBD	; 189
    1a50:	ff 4f       	sbci	r31, 0xFF	; 255
    1a52:	60 81       	ld	r22, Z
    1a54:	71 81       	ldd	r23, Z+1	; 0x01
    1a56:	82 81       	ldd	r24, Z+2	; 0x02
    1a58:	93 81       	ldd	r25, Z+3	; 0x03
    1a5a:	20 e0       	ldi	r18, 0x00	; 0
    1a5c:	30 e0       	ldi	r19, 0x00	; 0
    1a5e:	4a e7       	ldi	r20, 0x7A	; 122
    1a60:	53 e4       	ldi	r21, 0x43	; 67
    1a62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a66:	dc 01       	movw	r26, r24
    1a68:	cb 01       	movw	r24, r22
    1a6a:	f8 01       	movw	r30, r16
    1a6c:	80 83       	st	Z, r24
    1a6e:	91 83       	std	Z+1, r25	; 0x01
    1a70:	a2 83       	std	Z+2, r26	; 0x02
    1a72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a74:	fe 01       	movw	r30, r28
    1a76:	ff 96       	adiw	r30, 0x3f	; 63
    1a78:	60 81       	ld	r22, Z
    1a7a:	71 81       	ldd	r23, Z+1	; 0x01
    1a7c:	82 81       	ldd	r24, Z+2	; 0x02
    1a7e:	93 81       	ldd	r25, Z+3	; 0x03
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	40 e8       	ldi	r20, 0x80	; 128
    1a86:	5f e3       	ldi	r21, 0x3F	; 63
    1a88:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a8c:	88 23       	and	r24, r24
    1a8e:	2c f4       	brge	.+10     	; 0x1a9a <ProgramOne+0x20a>
		__ticks = 1;
    1a90:	81 e0       	ldi	r24, 0x01	; 1
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	9e af       	std	Y+62, r25	; 0x3e
    1a96:	8d af       	std	Y+61, r24	; 0x3d
    1a98:	46 c0       	rjmp	.+140    	; 0x1b26 <ProgramOne+0x296>
	else if (__tmp > 65535)
    1a9a:	fe 01       	movw	r30, r28
    1a9c:	ff 96       	adiw	r30, 0x3f	; 63
    1a9e:	60 81       	ld	r22, Z
    1aa0:	71 81       	ldd	r23, Z+1	; 0x01
    1aa2:	82 81       	ldd	r24, Z+2	; 0x02
    1aa4:	93 81       	ldd	r25, Z+3	; 0x03
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	3f ef       	ldi	r19, 0xFF	; 255
    1aaa:	4f e7       	ldi	r20, 0x7F	; 127
    1aac:	57 e4       	ldi	r21, 0x47	; 71
    1aae:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1ab2:	18 16       	cp	r1, r24
    1ab4:	64 f5       	brge	.+88     	; 0x1b0e <ProgramOne+0x27e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ab6:	fe 01       	movw	r30, r28
    1ab8:	ed 5b       	subi	r30, 0xBD	; 189
    1aba:	ff 4f       	sbci	r31, 0xFF	; 255
    1abc:	60 81       	ld	r22, Z
    1abe:	71 81       	ldd	r23, Z+1	; 0x01
    1ac0:	82 81       	ldd	r24, Z+2	; 0x02
    1ac2:	93 81       	ldd	r25, Z+3	; 0x03
    1ac4:	20 e0       	ldi	r18, 0x00	; 0
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e2       	ldi	r20, 0x20	; 32
    1aca:	51 e4       	ldi	r21, 0x41	; 65
    1acc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	cb 01       	movw	r24, r22
    1ad4:	bc 01       	movw	r22, r24
    1ad6:	cd 01       	movw	r24, r26
    1ad8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1adc:	dc 01       	movw	r26, r24
    1ade:	cb 01       	movw	r24, r22
    1ae0:	9e af       	std	Y+62, r25	; 0x3e
    1ae2:	8d af       	std	Y+61, r24	; 0x3d
    1ae4:	0f c0       	rjmp	.+30     	; 0x1b04 <ProgramOne+0x274>
    1ae6:	89 e1       	ldi	r24, 0x19	; 25
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	9c af       	std	Y+60, r25	; 0x3c
    1aec:	8b af       	std	Y+59, r24	; 0x3b
    1aee:	8b ad       	ldd	r24, Y+59	; 0x3b
    1af0:	9c ad       	ldd	r25, Y+60	; 0x3c
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	f1 f7       	brne	.-4      	; 0x1af2 <ProgramOne+0x262>
    1af6:	9c af       	std	Y+60, r25	; 0x3c
    1af8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1afa:	8d ad       	ldd	r24, Y+61	; 0x3d
    1afc:	9e ad       	ldd	r25, Y+62	; 0x3e
    1afe:	01 97       	sbiw	r24, 0x01	; 1
    1b00:	9e af       	std	Y+62, r25	; 0x3e
    1b02:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b04:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b06:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b08:	00 97       	sbiw	r24, 0x00	; 0
    1b0a:	69 f7       	brne	.-38     	; 0x1ae6 <ProgramOne+0x256>
    1b0c:	16 c0       	rjmp	.+44     	; 0x1b3a <ProgramOne+0x2aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b0e:	fe 01       	movw	r30, r28
    1b10:	ff 96       	adiw	r30, 0x3f	; 63
    1b12:	60 81       	ld	r22, Z
    1b14:	71 81       	ldd	r23, Z+1	; 0x01
    1b16:	82 81       	ldd	r24, Z+2	; 0x02
    1b18:	93 81       	ldd	r25, Z+3	; 0x03
    1b1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b1e:	dc 01       	movw	r26, r24
    1b20:	cb 01       	movw	r24, r22
    1b22:	9e af       	std	Y+62, r25	; 0x3e
    1b24:	8d af       	std	Y+61, r24	; 0x3d
    1b26:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b28:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b2a:	9a af       	std	Y+58, r25	; 0x3a
    1b2c:	89 af       	std	Y+57, r24	; 0x39
    1b2e:	89 ad       	ldd	r24, Y+57	; 0x39
    1b30:	9a ad       	ldd	r25, Y+58	; 0x3a
    1b32:	01 97       	sbiw	r24, 0x01	; 1
    1b34:	f1 f7       	brne	.-4      	; 0x1b32 <ProgramOne+0x2a2>
    1b36:	9a af       	std	Y+58, r25	; 0x3a
    1b38:	89 af       	std	Y+57, r24	; 0x39
	 _delay_ms(5000);

	 LED_turnOn(DIO_PORTC,PIN7);
    1b3a:	82 e0       	ldi	r24, 0x02	; 2
    1b3c:	67 e0       	ldi	r22, 0x07	; 7
    1b3e:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	 BUZZER_turnOn(DIO_PORTA,PIN3);
    1b42:	80 e0       	ldi	r24, 0x00	; 0
    1b44:	63 e0       	ldi	r22, 0x03	; 3
    1b46:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <BUZZER_turnOn>
    1b4a:	80 e0       	ldi	r24, 0x00	; 0
    1b4c:	90 e4       	ldi	r25, 0x40	; 64
    1b4e:	ac e1       	ldi	r26, 0x1C	; 28
    1b50:	b6 e4       	ldi	r27, 0x46	; 70
    1b52:	8d ab       	std	Y+53, r24	; 0x35
    1b54:	9e ab       	std	Y+54, r25	; 0x36
    1b56:	af ab       	std	Y+55, r26	; 0x37
    1b58:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b5a:	6d a9       	ldd	r22, Y+53	; 0x35
    1b5c:	7e a9       	ldd	r23, Y+54	; 0x36
    1b5e:	8f a9       	ldd	r24, Y+55	; 0x37
    1b60:	98 ad       	ldd	r25, Y+56	; 0x38
    1b62:	20 e0       	ldi	r18, 0x00	; 0
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	4a e7       	ldi	r20, 0x7A	; 122
    1b68:	53 e4       	ldi	r21, 0x43	; 67
    1b6a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b6e:	dc 01       	movw	r26, r24
    1b70:	cb 01       	movw	r24, r22
    1b72:	89 ab       	std	Y+49, r24	; 0x31
    1b74:	9a ab       	std	Y+50, r25	; 0x32
    1b76:	ab ab       	std	Y+51, r26	; 0x33
    1b78:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1b7a:	69 a9       	ldd	r22, Y+49	; 0x31
    1b7c:	7a a9       	ldd	r23, Y+50	; 0x32
    1b7e:	8b a9       	ldd	r24, Y+51	; 0x33
    1b80:	9c a9       	ldd	r25, Y+52	; 0x34
    1b82:	20 e0       	ldi	r18, 0x00	; 0
    1b84:	30 e0       	ldi	r19, 0x00	; 0
    1b86:	40 e8       	ldi	r20, 0x80	; 128
    1b88:	5f e3       	ldi	r21, 0x3F	; 63
    1b8a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1b8e:	88 23       	and	r24, r24
    1b90:	2c f4       	brge	.+10     	; 0x1b9c <ProgramOne+0x30c>
		__ticks = 1;
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	98 ab       	std	Y+48, r25	; 0x30
    1b98:	8f a7       	std	Y+47, r24	; 0x2f
    1b9a:	3f c0       	rjmp	.+126    	; 0x1c1a <ProgramOne+0x38a>
	else if (__tmp > 65535)
    1b9c:	69 a9       	ldd	r22, Y+49	; 0x31
    1b9e:	7a a9       	ldd	r23, Y+50	; 0x32
    1ba0:	8b a9       	ldd	r24, Y+51	; 0x33
    1ba2:	9c a9       	ldd	r25, Y+52	; 0x34
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
    1ba6:	3f ef       	ldi	r19, 0xFF	; 255
    1ba8:	4f e7       	ldi	r20, 0x7F	; 127
    1baa:	57 e4       	ldi	r21, 0x47	; 71
    1bac:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1bb0:	18 16       	cp	r1, r24
    1bb2:	4c f5       	brge	.+82     	; 0x1c06 <ProgramOne+0x376>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bb4:	6d a9       	ldd	r22, Y+53	; 0x35
    1bb6:	7e a9       	ldd	r23, Y+54	; 0x36
    1bb8:	8f a9       	ldd	r24, Y+55	; 0x37
    1bba:	98 ad       	ldd	r25, Y+56	; 0x38
    1bbc:	20 e0       	ldi	r18, 0x00	; 0
    1bbe:	30 e0       	ldi	r19, 0x00	; 0
    1bc0:	40 e2       	ldi	r20, 0x20	; 32
    1bc2:	51 e4       	ldi	r21, 0x41	; 65
    1bc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bc8:	dc 01       	movw	r26, r24
    1bca:	cb 01       	movw	r24, r22
    1bcc:	bc 01       	movw	r22, r24
    1bce:	cd 01       	movw	r24, r26
    1bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bd4:	dc 01       	movw	r26, r24
    1bd6:	cb 01       	movw	r24, r22
    1bd8:	98 ab       	std	Y+48, r25	; 0x30
    1bda:	8f a7       	std	Y+47, r24	; 0x2f
    1bdc:	0f c0       	rjmp	.+30     	; 0x1bfc <ProgramOne+0x36c>
    1bde:	89 e1       	ldi	r24, 0x19	; 25
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	9e a7       	std	Y+46, r25	; 0x2e
    1be4:	8d a7       	std	Y+45, r24	; 0x2d
    1be6:	8d a5       	ldd	r24, Y+45	; 0x2d
    1be8:	9e a5       	ldd	r25, Y+46	; 0x2e
    1bea:	01 97       	sbiw	r24, 0x01	; 1
    1bec:	f1 f7       	brne	.-4      	; 0x1bea <ProgramOne+0x35a>
    1bee:	9e a7       	std	Y+46, r25	; 0x2e
    1bf0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bf2:	8f a5       	ldd	r24, Y+47	; 0x2f
    1bf4:	98 a9       	ldd	r25, Y+48	; 0x30
    1bf6:	01 97       	sbiw	r24, 0x01	; 1
    1bf8:	98 ab       	std	Y+48, r25	; 0x30
    1bfa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bfc:	8f a5       	ldd	r24, Y+47	; 0x2f
    1bfe:	98 a9       	ldd	r25, Y+48	; 0x30
    1c00:	00 97       	sbiw	r24, 0x00	; 0
    1c02:	69 f7       	brne	.-38     	; 0x1bde <ProgramOne+0x34e>
    1c04:	14 c0       	rjmp	.+40     	; 0x1c2e <ProgramOne+0x39e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c06:	69 a9       	ldd	r22, Y+49	; 0x31
    1c08:	7a a9       	ldd	r23, Y+50	; 0x32
    1c0a:	8b a9       	ldd	r24, Y+51	; 0x33
    1c0c:	9c a9       	ldd	r25, Y+52	; 0x34
    1c0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c12:	dc 01       	movw	r26, r24
    1c14:	cb 01       	movw	r24, r22
    1c16:	98 ab       	std	Y+48, r25	; 0x30
    1c18:	8f a7       	std	Y+47, r24	; 0x2f
    1c1a:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c1c:	98 a9       	ldd	r25, Y+48	; 0x30
    1c1e:	9c a7       	std	Y+44, r25	; 0x2c
    1c20:	8b a7       	std	Y+43, r24	; 0x2b
    1c22:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c24:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c26:	01 97       	sbiw	r24, 0x01	; 1
    1c28:	f1 f7       	brne	.-4      	; 0x1c26 <ProgramOne+0x396>
    1c2a:	9c a7       	std	Y+44, r25	; 0x2c
    1c2c:	8b a7       	std	Y+43, r24	; 0x2b
	 _delay_ms(10000);
	 LED_turnOff(DIO_PORTC,PIN7);
    1c2e:	82 e0       	ldi	r24, 0x02	; 2
    1c30:	67 e0       	ldi	r22, 0x07	; 7
    1c32:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	 BUZZER_turnOff(DIO_PORTA,PIN3);
    1c36:	80 e0       	ldi	r24, 0x00	; 0
    1c38:	63 e0       	ldi	r22, 0x03	; 3
    1c3a:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <BUZZER_turnOff>
    1c3e:	80 e0       	ldi	r24, 0x00	; 0
    1c40:	90 e4       	ldi	r25, 0x40	; 64
    1c42:	ac e9       	ldi	r26, 0x9C	; 156
    1c44:	b5 e4       	ldi	r27, 0x45	; 69
    1c46:	8f a3       	std	Y+39, r24	; 0x27
    1c48:	98 a7       	std	Y+40, r25	; 0x28
    1c4a:	a9 a7       	std	Y+41, r26	; 0x29
    1c4c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c4e:	6f a1       	ldd	r22, Y+39	; 0x27
    1c50:	78 a5       	ldd	r23, Y+40	; 0x28
    1c52:	89 a5       	ldd	r24, Y+41	; 0x29
    1c54:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c56:	20 e0       	ldi	r18, 0x00	; 0
    1c58:	30 e0       	ldi	r19, 0x00	; 0
    1c5a:	4a e7       	ldi	r20, 0x7A	; 122
    1c5c:	53 e4       	ldi	r21, 0x43	; 67
    1c5e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c62:	dc 01       	movw	r26, r24
    1c64:	cb 01       	movw	r24, r22
    1c66:	8b a3       	std	Y+35, r24	; 0x23
    1c68:	9c a3       	std	Y+36, r25	; 0x24
    1c6a:	ad a3       	std	Y+37, r26	; 0x25
    1c6c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1c6e:	6b a1       	ldd	r22, Y+35	; 0x23
    1c70:	7c a1       	ldd	r23, Y+36	; 0x24
    1c72:	8d a1       	ldd	r24, Y+37	; 0x25
    1c74:	9e a1       	ldd	r25, Y+38	; 0x26
    1c76:	20 e0       	ldi	r18, 0x00	; 0
    1c78:	30 e0       	ldi	r19, 0x00	; 0
    1c7a:	40 e8       	ldi	r20, 0x80	; 128
    1c7c:	5f e3       	ldi	r21, 0x3F	; 63
    1c7e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1c82:	88 23       	and	r24, r24
    1c84:	2c f4       	brge	.+10     	; 0x1c90 <ProgramOne+0x400>
		__ticks = 1;
    1c86:	81 e0       	ldi	r24, 0x01	; 1
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	9a a3       	std	Y+34, r25	; 0x22
    1c8c:	89 a3       	std	Y+33, r24	; 0x21
    1c8e:	3f c0       	rjmp	.+126    	; 0x1d0e <ProgramOne+0x47e>
	else if (__tmp > 65535)
    1c90:	6b a1       	ldd	r22, Y+35	; 0x23
    1c92:	7c a1       	ldd	r23, Y+36	; 0x24
    1c94:	8d a1       	ldd	r24, Y+37	; 0x25
    1c96:	9e a1       	ldd	r25, Y+38	; 0x26
    1c98:	20 e0       	ldi	r18, 0x00	; 0
    1c9a:	3f ef       	ldi	r19, 0xFF	; 255
    1c9c:	4f e7       	ldi	r20, 0x7F	; 127
    1c9e:	57 e4       	ldi	r21, 0x47	; 71
    1ca0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1ca4:	18 16       	cp	r1, r24
    1ca6:	4c f5       	brge	.+82     	; 0x1cfa <ProgramOne+0x46a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ca8:	6f a1       	ldd	r22, Y+39	; 0x27
    1caa:	78 a5       	ldd	r23, Y+40	; 0x28
    1cac:	89 a5       	ldd	r24, Y+41	; 0x29
    1cae:	9a a5       	ldd	r25, Y+42	; 0x2a
    1cb0:	20 e0       	ldi	r18, 0x00	; 0
    1cb2:	30 e0       	ldi	r19, 0x00	; 0
    1cb4:	40 e2       	ldi	r20, 0x20	; 32
    1cb6:	51 e4       	ldi	r21, 0x41	; 65
    1cb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cbc:	dc 01       	movw	r26, r24
    1cbe:	cb 01       	movw	r24, r22
    1cc0:	bc 01       	movw	r22, r24
    1cc2:	cd 01       	movw	r24, r26
    1cc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cc8:	dc 01       	movw	r26, r24
    1cca:	cb 01       	movw	r24, r22
    1ccc:	9a a3       	std	Y+34, r25	; 0x22
    1cce:	89 a3       	std	Y+33, r24	; 0x21
    1cd0:	0f c0       	rjmp	.+30     	; 0x1cf0 <ProgramOne+0x460>
    1cd2:	89 e1       	ldi	r24, 0x19	; 25
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	98 a3       	std	Y+32, r25	; 0x20
    1cd8:	8f 8f       	std	Y+31, r24	; 0x1f
    1cda:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1cdc:	98 a1       	ldd	r25, Y+32	; 0x20
    1cde:	01 97       	sbiw	r24, 0x01	; 1
    1ce0:	f1 f7       	brne	.-4      	; 0x1cde <ProgramOne+0x44e>
    1ce2:	98 a3       	std	Y+32, r25	; 0x20
    1ce4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ce6:	89 a1       	ldd	r24, Y+33	; 0x21
    1ce8:	9a a1       	ldd	r25, Y+34	; 0x22
    1cea:	01 97       	sbiw	r24, 0x01	; 1
    1cec:	9a a3       	std	Y+34, r25	; 0x22
    1cee:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cf0:	89 a1       	ldd	r24, Y+33	; 0x21
    1cf2:	9a a1       	ldd	r25, Y+34	; 0x22
    1cf4:	00 97       	sbiw	r24, 0x00	; 0
    1cf6:	69 f7       	brne	.-38     	; 0x1cd2 <ProgramOne+0x442>
    1cf8:	14 c0       	rjmp	.+40     	; 0x1d22 <ProgramOne+0x492>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cfa:	6b a1       	ldd	r22, Y+35	; 0x23
    1cfc:	7c a1       	ldd	r23, Y+36	; 0x24
    1cfe:	8d a1       	ldd	r24, Y+37	; 0x25
    1d00:	9e a1       	ldd	r25, Y+38	; 0x26
    1d02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	9a a3       	std	Y+34, r25	; 0x22
    1d0c:	89 a3       	std	Y+33, r24	; 0x21
    1d0e:	89 a1       	ldd	r24, Y+33	; 0x21
    1d10:	9a a1       	ldd	r25, Y+34	; 0x22
    1d12:	9e 8f       	std	Y+30, r25	; 0x1e
    1d14:	8d 8f       	std	Y+29, r24	; 0x1d
    1d16:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d18:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d1a:	01 97       	sbiw	r24, 0x01	; 1
    1d1c:	f1 f7       	brne	.-4      	; 0x1d1a <ProgramOne+0x48a>
    1d1e:	9e 8f       	std	Y+30, r25	; 0x1e
    1d20:	8d 8f       	std	Y+29, r24	; 0x1d
	 _delay_ms(5000);

	 LED_turnOn(DIO_PORTD,PIN3);
    1d22:	83 e0       	ldi	r24, 0x03	; 3
    1d24:	63 e0       	ldi	r22, 0x03	; 3
    1d26:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	 BUZZER_turnOn(DIO_PORTA,PIN3);
    1d2a:	80 e0       	ldi	r24, 0x00	; 0
    1d2c:	63 e0       	ldi	r22, 0x03	; 3
    1d2e:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <BUZZER_turnOn>
    1d32:	80 e0       	ldi	r24, 0x00	; 0
    1d34:	90 e4       	ldi	r25, 0x40	; 64
    1d36:	ac e1       	ldi	r26, 0x1C	; 28
    1d38:	b6 e4       	ldi	r27, 0x46	; 70
    1d3a:	89 8f       	std	Y+25, r24	; 0x19
    1d3c:	9a 8f       	std	Y+26, r25	; 0x1a
    1d3e:	ab 8f       	std	Y+27, r26	; 0x1b
    1d40:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d42:	69 8d       	ldd	r22, Y+25	; 0x19
    1d44:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d46:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d48:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d4a:	20 e0       	ldi	r18, 0x00	; 0
    1d4c:	30 e0       	ldi	r19, 0x00	; 0
    1d4e:	4a e7       	ldi	r20, 0x7A	; 122
    1d50:	53 e4       	ldi	r21, 0x43	; 67
    1d52:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d56:	dc 01       	movw	r26, r24
    1d58:	cb 01       	movw	r24, r22
    1d5a:	8d 8b       	std	Y+21, r24	; 0x15
    1d5c:	9e 8b       	std	Y+22, r25	; 0x16
    1d5e:	af 8b       	std	Y+23, r26	; 0x17
    1d60:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1d62:	6d 89       	ldd	r22, Y+21	; 0x15
    1d64:	7e 89       	ldd	r23, Y+22	; 0x16
    1d66:	8f 89       	ldd	r24, Y+23	; 0x17
    1d68:	98 8d       	ldd	r25, Y+24	; 0x18
    1d6a:	20 e0       	ldi	r18, 0x00	; 0
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	40 e8       	ldi	r20, 0x80	; 128
    1d70:	5f e3       	ldi	r21, 0x3F	; 63
    1d72:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d76:	88 23       	and	r24, r24
    1d78:	2c f4       	brge	.+10     	; 0x1d84 <ProgramOne+0x4f4>
		__ticks = 1;
    1d7a:	81 e0       	ldi	r24, 0x01	; 1
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	9c 8b       	std	Y+20, r25	; 0x14
    1d80:	8b 8b       	std	Y+19, r24	; 0x13
    1d82:	3f c0       	rjmp	.+126    	; 0x1e02 <ProgramOne+0x572>
	else if (__tmp > 65535)
    1d84:	6d 89       	ldd	r22, Y+21	; 0x15
    1d86:	7e 89       	ldd	r23, Y+22	; 0x16
    1d88:	8f 89       	ldd	r24, Y+23	; 0x17
    1d8a:	98 8d       	ldd	r25, Y+24	; 0x18
    1d8c:	20 e0       	ldi	r18, 0x00	; 0
    1d8e:	3f ef       	ldi	r19, 0xFF	; 255
    1d90:	4f e7       	ldi	r20, 0x7F	; 127
    1d92:	57 e4       	ldi	r21, 0x47	; 71
    1d94:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1d98:	18 16       	cp	r1, r24
    1d9a:	4c f5       	brge	.+82     	; 0x1dee <ProgramOne+0x55e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d9c:	69 8d       	ldd	r22, Y+25	; 0x19
    1d9e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1da0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1da2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1da4:	20 e0       	ldi	r18, 0x00	; 0
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	40 e2       	ldi	r20, 0x20	; 32
    1daa:	51 e4       	ldi	r21, 0x41	; 65
    1dac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1db0:	dc 01       	movw	r26, r24
    1db2:	cb 01       	movw	r24, r22
    1db4:	bc 01       	movw	r22, r24
    1db6:	cd 01       	movw	r24, r26
    1db8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dbc:	dc 01       	movw	r26, r24
    1dbe:	cb 01       	movw	r24, r22
    1dc0:	9c 8b       	std	Y+20, r25	; 0x14
    1dc2:	8b 8b       	std	Y+19, r24	; 0x13
    1dc4:	0f c0       	rjmp	.+30     	; 0x1de4 <ProgramOne+0x554>
    1dc6:	89 e1       	ldi	r24, 0x19	; 25
    1dc8:	90 e0       	ldi	r25, 0x00	; 0
    1dca:	9a 8b       	std	Y+18, r25	; 0x12
    1dcc:	89 8b       	std	Y+17, r24	; 0x11
    1dce:	89 89       	ldd	r24, Y+17	; 0x11
    1dd0:	9a 89       	ldd	r25, Y+18	; 0x12
    1dd2:	01 97       	sbiw	r24, 0x01	; 1
    1dd4:	f1 f7       	brne	.-4      	; 0x1dd2 <ProgramOne+0x542>
    1dd6:	9a 8b       	std	Y+18, r25	; 0x12
    1dd8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dda:	8b 89       	ldd	r24, Y+19	; 0x13
    1ddc:	9c 89       	ldd	r25, Y+20	; 0x14
    1dde:	01 97       	sbiw	r24, 0x01	; 1
    1de0:	9c 8b       	std	Y+20, r25	; 0x14
    1de2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1de4:	8b 89       	ldd	r24, Y+19	; 0x13
    1de6:	9c 89       	ldd	r25, Y+20	; 0x14
    1de8:	00 97       	sbiw	r24, 0x00	; 0
    1dea:	69 f7       	brne	.-38     	; 0x1dc6 <ProgramOne+0x536>
    1dec:	14 c0       	rjmp	.+40     	; 0x1e16 <ProgramOne+0x586>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dee:	6d 89       	ldd	r22, Y+21	; 0x15
    1df0:	7e 89       	ldd	r23, Y+22	; 0x16
    1df2:	8f 89       	ldd	r24, Y+23	; 0x17
    1df4:	98 8d       	ldd	r25, Y+24	; 0x18
    1df6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	cb 01       	movw	r24, r22
    1dfe:	9c 8b       	std	Y+20, r25	; 0x14
    1e00:	8b 8b       	std	Y+19, r24	; 0x13
    1e02:	8b 89       	ldd	r24, Y+19	; 0x13
    1e04:	9c 89       	ldd	r25, Y+20	; 0x14
    1e06:	98 8b       	std	Y+16, r25	; 0x10
    1e08:	8f 87       	std	Y+15, r24	; 0x0f
    1e0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e0c:	98 89       	ldd	r25, Y+16	; 0x10
    1e0e:	01 97       	sbiw	r24, 0x01	; 1
    1e10:	f1 f7       	brne	.-4      	; 0x1e0e <ProgramOne+0x57e>
    1e12:	98 8b       	std	Y+16, r25	; 0x10
    1e14:	8f 87       	std	Y+15, r24	; 0x0f
	 _delay_ms(10000);
	 LED_turnOff(DIO_PORTD,PIN3);
    1e16:	83 e0       	ldi	r24, 0x03	; 3
    1e18:	63 e0       	ldi	r22, 0x03	; 3
    1e1a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	 BUZZER_turnOff(DIO_PORTA,PIN3);
    1e1e:	80 e0       	ldi	r24, 0x00	; 0
    1e20:	63 e0       	ldi	r22, 0x03	; 3
    1e22:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <BUZZER_turnOff>
    1e26:	80 e0       	ldi	r24, 0x00	; 0
    1e28:	90 e4       	ldi	r25, 0x40	; 64
    1e2a:	ac e9       	ldi	r26, 0x9C	; 156
    1e2c:	b5 e4       	ldi	r27, 0x45	; 69
    1e2e:	8b 87       	std	Y+11, r24	; 0x0b
    1e30:	9c 87       	std	Y+12, r25	; 0x0c
    1e32:	ad 87       	std	Y+13, r26	; 0x0d
    1e34:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e36:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e38:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e3a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e3c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e3e:	20 e0       	ldi	r18, 0x00	; 0
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	4a e7       	ldi	r20, 0x7A	; 122
    1e44:	53 e4       	ldi	r21, 0x43	; 67
    1e46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e4a:	dc 01       	movw	r26, r24
    1e4c:	cb 01       	movw	r24, r22
    1e4e:	8f 83       	std	Y+7, r24	; 0x07
    1e50:	98 87       	std	Y+8, r25	; 0x08
    1e52:	a9 87       	std	Y+9, r26	; 0x09
    1e54:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e56:	6f 81       	ldd	r22, Y+7	; 0x07
    1e58:	78 85       	ldd	r23, Y+8	; 0x08
    1e5a:	89 85       	ldd	r24, Y+9	; 0x09
    1e5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e5e:	20 e0       	ldi	r18, 0x00	; 0
    1e60:	30 e0       	ldi	r19, 0x00	; 0
    1e62:	40 e8       	ldi	r20, 0x80	; 128
    1e64:	5f e3       	ldi	r21, 0x3F	; 63
    1e66:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e6a:	88 23       	and	r24, r24
    1e6c:	2c f4       	brge	.+10     	; 0x1e78 <ProgramOne+0x5e8>
		__ticks = 1;
    1e6e:	81 e0       	ldi	r24, 0x01	; 1
    1e70:	90 e0       	ldi	r25, 0x00	; 0
    1e72:	9e 83       	std	Y+6, r25	; 0x06
    1e74:	8d 83       	std	Y+5, r24	; 0x05
    1e76:	3f c0       	rjmp	.+126    	; 0x1ef6 <ProgramOne+0x666>
	else if (__tmp > 65535)
    1e78:	6f 81       	ldd	r22, Y+7	; 0x07
    1e7a:	78 85       	ldd	r23, Y+8	; 0x08
    1e7c:	89 85       	ldd	r24, Y+9	; 0x09
    1e7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	3f ef       	ldi	r19, 0xFF	; 255
    1e84:	4f e7       	ldi	r20, 0x7F	; 127
    1e86:	57 e4       	ldi	r21, 0x47	; 71
    1e88:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e8c:	18 16       	cp	r1, r24
    1e8e:	4c f5       	brge	.+82     	; 0x1ee2 <ProgramOne+0x652>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e90:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e92:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e94:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e96:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e98:	20 e0       	ldi	r18, 0x00	; 0
    1e9a:	30 e0       	ldi	r19, 0x00	; 0
    1e9c:	40 e2       	ldi	r20, 0x20	; 32
    1e9e:	51 e4       	ldi	r21, 0x41	; 65
    1ea0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea4:	dc 01       	movw	r26, r24
    1ea6:	cb 01       	movw	r24, r22
    1ea8:	bc 01       	movw	r22, r24
    1eaa:	cd 01       	movw	r24, r26
    1eac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eb0:	dc 01       	movw	r26, r24
    1eb2:	cb 01       	movw	r24, r22
    1eb4:	9e 83       	std	Y+6, r25	; 0x06
    1eb6:	8d 83       	std	Y+5, r24	; 0x05
    1eb8:	0f c0       	rjmp	.+30     	; 0x1ed8 <ProgramOne+0x648>
    1eba:	89 e1       	ldi	r24, 0x19	; 25
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	9c 83       	std	Y+4, r25	; 0x04
    1ec0:	8b 83       	std	Y+3, r24	; 0x03
    1ec2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ec4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ec6:	01 97       	sbiw	r24, 0x01	; 1
    1ec8:	f1 f7       	brne	.-4      	; 0x1ec6 <ProgramOne+0x636>
    1eca:	9c 83       	std	Y+4, r25	; 0x04
    1ecc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ece:	8d 81       	ldd	r24, Y+5	; 0x05
    1ed0:	9e 81       	ldd	r25, Y+6	; 0x06
    1ed2:	01 97       	sbiw	r24, 0x01	; 1
    1ed4:	9e 83       	std	Y+6, r25	; 0x06
    1ed6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ed8:	8d 81       	ldd	r24, Y+5	; 0x05
    1eda:	9e 81       	ldd	r25, Y+6	; 0x06
    1edc:	00 97       	sbiw	r24, 0x00	; 0
    1ede:	69 f7       	brne	.-38     	; 0x1eba <ProgramOne+0x62a>
    1ee0:	14 c0       	rjmp	.+40     	; 0x1f0a <ProgramOne+0x67a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ee2:	6f 81       	ldd	r22, Y+7	; 0x07
    1ee4:	78 85       	ldd	r23, Y+8	; 0x08
    1ee6:	89 85       	ldd	r24, Y+9	; 0x09
    1ee8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eee:	dc 01       	movw	r26, r24
    1ef0:	cb 01       	movw	r24, r22
    1ef2:	9e 83       	std	Y+6, r25	; 0x06
    1ef4:	8d 83       	std	Y+5, r24	; 0x05
    1ef6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ef8:	9e 81       	ldd	r25, Y+6	; 0x06
    1efa:	9a 83       	std	Y+2, r25	; 0x02
    1efc:	89 83       	std	Y+1, r24	; 0x01
    1efe:	89 81       	ldd	r24, Y+1	; 0x01
    1f00:	9a 81       	ldd	r25, Y+2	; 0x02
    1f02:	01 97       	sbiw	r24, 0x01	; 1
    1f04:	f1 f7       	brne	.-4      	; 0x1f02 <ProgramOne+0x672>
    1f06:	9a 83       	std	Y+2, r25	; 0x02
    1f08:	89 83       	std	Y+1, r24	; 0x01
	 _delay_ms(5000);

}
    1f0a:	cc 5a       	subi	r28, 0xAC	; 172
    1f0c:	df 4f       	sbci	r29, 0xFF	; 255
    1f0e:	0f b6       	in	r0, 0x3f	; 63
    1f10:	f8 94       	cli
    1f12:	de bf       	out	0x3e, r29	; 62
    1f14:	0f be       	out	0x3f, r0	; 63
    1f16:	cd bf       	out	0x3d, r28	; 61
    1f18:	cf 91       	pop	r28
    1f1a:	df 91       	pop	r29
    1f1c:	1f 91       	pop	r17
    1f1e:	0f 91       	pop	r16
    1f20:	08 95       	ret

00001f22 <ProgramTwo>:

void ProgramTwo(void)
{
    1f22:	0f 93       	push	r16
    1f24:	1f 93       	push	r17
    1f26:	df 93       	push	r29
    1f28:	cf 93       	push	r28
    1f2a:	cd b7       	in	r28, 0x3d	; 61
    1f2c:	de b7       	in	r29, 0x3e	; 62
    1f2e:	c2 56       	subi	r28, 0x62	; 98
    1f30:	d0 40       	sbci	r29, 0x00	; 0
    1f32:	0f b6       	in	r0, 0x3f	; 63
    1f34:	f8 94       	cli
    1f36:	de bf       	out	0x3e, r29	; 62
    1f38:	0f be       	out	0x3f, r0	; 63
    1f3a:	cd bf       	out	0x3d, r28	; 61

	LED_turnOn(DIO_PORTC,PIN2);
    1f3c:	82 e0       	ldi	r24, 0x02	; 2
    1f3e:	62 e0       	ldi	r22, 0x02	; 2
    1f40:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOff(DIO_PORTC,PIN7);
    1f44:	82 e0       	ldi	r24, 0x02	; 2
    1f46:	67 e0       	ldi	r22, 0x07	; 7
    1f48:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOff(DIO_PORTD,PIN3);
    1f4c:	83 e0       	ldi	r24, 0x03	; 3
    1f4e:	63 e0       	ldi	r22, 0x03	; 3
    1f50:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    1f54:	fe 01       	movw	r30, r28
    1f56:	e1 5a       	subi	r30, 0xA1	; 161
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	80 e0       	ldi	r24, 0x00	; 0
    1f5c:	90 e4       	ldi	r25, 0x40	; 64
    1f5e:	ac e1       	ldi	r26, 0x1C	; 28
    1f60:	b6 e4       	ldi	r27, 0x46	; 70
    1f62:	80 83       	st	Z, r24
    1f64:	91 83       	std	Z+1, r25	; 0x01
    1f66:	a2 83       	std	Z+2, r26	; 0x02
    1f68:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f6a:	8e 01       	movw	r16, r28
    1f6c:	05 5a       	subi	r16, 0xA5	; 165
    1f6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f70:	fe 01       	movw	r30, r28
    1f72:	e1 5a       	subi	r30, 0xA1	; 161
    1f74:	ff 4f       	sbci	r31, 0xFF	; 255
    1f76:	60 81       	ld	r22, Z
    1f78:	71 81       	ldd	r23, Z+1	; 0x01
    1f7a:	82 81       	ldd	r24, Z+2	; 0x02
    1f7c:	93 81       	ldd	r25, Z+3	; 0x03
    1f7e:	20 e0       	ldi	r18, 0x00	; 0
    1f80:	30 e0       	ldi	r19, 0x00	; 0
    1f82:	4a e7       	ldi	r20, 0x7A	; 122
    1f84:	53 e4       	ldi	r21, 0x43	; 67
    1f86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	f8 01       	movw	r30, r16
    1f90:	80 83       	st	Z, r24
    1f92:	91 83       	std	Z+1, r25	; 0x01
    1f94:	a2 83       	std	Z+2, r26	; 0x02
    1f96:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f98:	fe 01       	movw	r30, r28
    1f9a:	e5 5a       	subi	r30, 0xA5	; 165
    1f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9e:	60 81       	ld	r22, Z
    1fa0:	71 81       	ldd	r23, Z+1	; 0x01
    1fa2:	82 81       	ldd	r24, Z+2	; 0x02
    1fa4:	93 81       	ldd	r25, Z+3	; 0x03
    1fa6:	20 e0       	ldi	r18, 0x00	; 0
    1fa8:	30 e0       	ldi	r19, 0x00	; 0
    1faa:	40 e8       	ldi	r20, 0x80	; 128
    1fac:	5f e3       	ldi	r21, 0x3F	; 63
    1fae:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1fb2:	88 23       	and	r24, r24
    1fb4:	44 f4       	brge	.+16     	; 0x1fc6 <ProgramTwo+0xa4>
		__ticks = 1;
    1fb6:	fe 01       	movw	r30, r28
    1fb8:	e7 5a       	subi	r30, 0xA7	; 167
    1fba:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbc:	81 e0       	ldi	r24, 0x01	; 1
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	91 83       	std	Z+1, r25	; 0x01
    1fc2:	80 83       	st	Z, r24
    1fc4:	64 c0       	rjmp	.+200    	; 0x208e <ProgramTwo+0x16c>
	else if (__tmp > 65535)
    1fc6:	fe 01       	movw	r30, r28
    1fc8:	e5 5a       	subi	r30, 0xA5	; 165
    1fca:	ff 4f       	sbci	r31, 0xFF	; 255
    1fcc:	60 81       	ld	r22, Z
    1fce:	71 81       	ldd	r23, Z+1	; 0x01
    1fd0:	82 81       	ldd	r24, Z+2	; 0x02
    1fd2:	93 81       	ldd	r25, Z+3	; 0x03
    1fd4:	20 e0       	ldi	r18, 0x00	; 0
    1fd6:	3f ef       	ldi	r19, 0xFF	; 255
    1fd8:	4f e7       	ldi	r20, 0x7F	; 127
    1fda:	57 e4       	ldi	r21, 0x47	; 71
    1fdc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1fe0:	18 16       	cp	r1, r24
    1fe2:	0c f0       	brlt	.+2      	; 0x1fe6 <ProgramTwo+0xc4>
    1fe4:	43 c0       	rjmp	.+134    	; 0x206c <ProgramTwo+0x14a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e1 5a       	subi	r30, 0xA1	; 161
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	60 81       	ld	r22, Z
    1fee:	71 81       	ldd	r23, Z+1	; 0x01
    1ff0:	82 81       	ldd	r24, Z+2	; 0x02
    1ff2:	93 81       	ldd	r25, Z+3	; 0x03
    1ff4:	20 e0       	ldi	r18, 0x00	; 0
    1ff6:	30 e0       	ldi	r19, 0x00	; 0
    1ff8:	40 e2       	ldi	r20, 0x20	; 32
    1ffa:	51 e4       	ldi	r21, 0x41	; 65
    1ffc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2000:	dc 01       	movw	r26, r24
    2002:	cb 01       	movw	r24, r22
    2004:	8e 01       	movw	r16, r28
    2006:	07 5a       	subi	r16, 0xA7	; 167
    2008:	1f 4f       	sbci	r17, 0xFF	; 255
    200a:	bc 01       	movw	r22, r24
    200c:	cd 01       	movw	r24, r26
    200e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2012:	dc 01       	movw	r26, r24
    2014:	cb 01       	movw	r24, r22
    2016:	f8 01       	movw	r30, r16
    2018:	91 83       	std	Z+1, r25	; 0x01
    201a:	80 83       	st	Z, r24
    201c:	1f c0       	rjmp	.+62     	; 0x205c <ProgramTwo+0x13a>
    201e:	fe 01       	movw	r30, r28
    2020:	e9 5a       	subi	r30, 0xA9	; 169
    2022:	ff 4f       	sbci	r31, 0xFF	; 255
    2024:	89 e1       	ldi	r24, 0x19	; 25
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	91 83       	std	Z+1, r25	; 0x01
    202a:	80 83       	st	Z, r24
    202c:	fe 01       	movw	r30, r28
    202e:	e9 5a       	subi	r30, 0xA9	; 169
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	80 81       	ld	r24, Z
    2034:	91 81       	ldd	r25, Z+1	; 0x01
    2036:	01 97       	sbiw	r24, 0x01	; 1
    2038:	f1 f7       	brne	.-4      	; 0x2036 <ProgramTwo+0x114>
    203a:	fe 01       	movw	r30, r28
    203c:	e9 5a       	subi	r30, 0xA9	; 169
    203e:	ff 4f       	sbci	r31, 0xFF	; 255
    2040:	91 83       	std	Z+1, r25	; 0x01
    2042:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2044:	de 01       	movw	r26, r28
    2046:	a7 5a       	subi	r26, 0xA7	; 167
    2048:	bf 4f       	sbci	r27, 0xFF	; 255
    204a:	fe 01       	movw	r30, r28
    204c:	e7 5a       	subi	r30, 0xA7	; 167
    204e:	ff 4f       	sbci	r31, 0xFF	; 255
    2050:	80 81       	ld	r24, Z
    2052:	91 81       	ldd	r25, Z+1	; 0x01
    2054:	01 97       	sbiw	r24, 0x01	; 1
    2056:	11 96       	adiw	r26, 0x01	; 1
    2058:	9c 93       	st	X, r25
    205a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    205c:	fe 01       	movw	r30, r28
    205e:	e7 5a       	subi	r30, 0xA7	; 167
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	80 81       	ld	r24, Z
    2064:	91 81       	ldd	r25, Z+1	; 0x01
    2066:	00 97       	sbiw	r24, 0x00	; 0
    2068:	d1 f6       	brne	.-76     	; 0x201e <ProgramTwo+0xfc>
    206a:	27 c0       	rjmp	.+78     	; 0x20ba <ProgramTwo+0x198>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    206c:	8e 01       	movw	r16, r28
    206e:	07 5a       	subi	r16, 0xA7	; 167
    2070:	1f 4f       	sbci	r17, 0xFF	; 255
    2072:	fe 01       	movw	r30, r28
    2074:	e5 5a       	subi	r30, 0xA5	; 165
    2076:	ff 4f       	sbci	r31, 0xFF	; 255
    2078:	60 81       	ld	r22, Z
    207a:	71 81       	ldd	r23, Z+1	; 0x01
    207c:	82 81       	ldd	r24, Z+2	; 0x02
    207e:	93 81       	ldd	r25, Z+3	; 0x03
    2080:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2084:	dc 01       	movw	r26, r24
    2086:	cb 01       	movw	r24, r22
    2088:	f8 01       	movw	r30, r16
    208a:	91 83       	std	Z+1, r25	; 0x01
    208c:	80 83       	st	Z, r24
    208e:	de 01       	movw	r26, r28
    2090:	ab 5a       	subi	r26, 0xAB	; 171
    2092:	bf 4f       	sbci	r27, 0xFF	; 255
    2094:	fe 01       	movw	r30, r28
    2096:	e7 5a       	subi	r30, 0xA7	; 167
    2098:	ff 4f       	sbci	r31, 0xFF	; 255
    209a:	80 81       	ld	r24, Z
    209c:	91 81       	ldd	r25, Z+1	; 0x01
    209e:	8d 93       	st	X+, r24
    20a0:	9c 93       	st	X, r25
    20a2:	fe 01       	movw	r30, r28
    20a4:	eb 5a       	subi	r30, 0xAB	; 171
    20a6:	ff 4f       	sbci	r31, 0xFF	; 255
    20a8:	80 81       	ld	r24, Z
    20aa:	91 81       	ldd	r25, Z+1	; 0x01
    20ac:	01 97       	sbiw	r24, 0x01	; 1
    20ae:	f1 f7       	brne	.-4      	; 0x20ac <ProgramTwo+0x18a>
    20b0:	fe 01       	movw	r30, r28
    20b2:	eb 5a       	subi	r30, 0xAB	; 171
    20b4:	ff 4f       	sbci	r31, 0xFF	; 255
    20b6:	91 83       	std	Z+1, r25	; 0x01
    20b8:	80 83       	st	Z, r24
	_delay_ms(10000);

	LED_turnOff(DIO_PORTC,PIN2);
    20ba:	82 e0       	ldi	r24, 0x02	; 2
    20bc:	62 e0       	ldi	r22, 0x02	; 2
    20be:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOn(DIO_PORTC,PIN7);
    20c2:	82 e0       	ldi	r24, 0x02	; 2
    20c4:	67 e0       	ldi	r22, 0x07	; 7
    20c6:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOff(DIO_PORTD,PIN3);
    20ca:	83 e0       	ldi	r24, 0x03	; 3
    20cc:	63 e0       	ldi	r22, 0x03	; 3
    20ce:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    20d2:	fe 01       	movw	r30, r28
    20d4:	ef 5a       	subi	r30, 0xAF	; 175
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	80 e0       	ldi	r24, 0x00	; 0
    20da:	90 e4       	ldi	r25, 0x40	; 64
    20dc:	ac e1       	ldi	r26, 0x1C	; 28
    20de:	b6 e4       	ldi	r27, 0x46	; 70
    20e0:	80 83       	st	Z, r24
    20e2:	91 83       	std	Z+1, r25	; 0x01
    20e4:	a2 83       	std	Z+2, r26	; 0x02
    20e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20e8:	8e 01       	movw	r16, r28
    20ea:	03 5b       	subi	r16, 0xB3	; 179
    20ec:	1f 4f       	sbci	r17, 0xFF	; 255
    20ee:	fe 01       	movw	r30, r28
    20f0:	ef 5a       	subi	r30, 0xAF	; 175
    20f2:	ff 4f       	sbci	r31, 0xFF	; 255
    20f4:	60 81       	ld	r22, Z
    20f6:	71 81       	ldd	r23, Z+1	; 0x01
    20f8:	82 81       	ldd	r24, Z+2	; 0x02
    20fa:	93 81       	ldd	r25, Z+3	; 0x03
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	4a e7       	ldi	r20, 0x7A	; 122
    2102:	53 e4       	ldi	r21, 0x43	; 67
    2104:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2108:	dc 01       	movw	r26, r24
    210a:	cb 01       	movw	r24, r22
    210c:	f8 01       	movw	r30, r16
    210e:	80 83       	st	Z, r24
    2110:	91 83       	std	Z+1, r25	; 0x01
    2112:	a2 83       	std	Z+2, r26	; 0x02
    2114:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2116:	fe 01       	movw	r30, r28
    2118:	e3 5b       	subi	r30, 0xB3	; 179
    211a:	ff 4f       	sbci	r31, 0xFF	; 255
    211c:	60 81       	ld	r22, Z
    211e:	71 81       	ldd	r23, Z+1	; 0x01
    2120:	82 81       	ldd	r24, Z+2	; 0x02
    2122:	93 81       	ldd	r25, Z+3	; 0x03
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	40 e8       	ldi	r20, 0x80	; 128
    212a:	5f e3       	ldi	r21, 0x3F	; 63
    212c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2130:	88 23       	and	r24, r24
    2132:	44 f4       	brge	.+16     	; 0x2144 <ProgramTwo+0x222>
		__ticks = 1;
    2134:	fe 01       	movw	r30, r28
    2136:	e5 5b       	subi	r30, 0xB5	; 181
    2138:	ff 4f       	sbci	r31, 0xFF	; 255
    213a:	81 e0       	ldi	r24, 0x01	; 1
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	91 83       	std	Z+1, r25	; 0x01
    2140:	80 83       	st	Z, r24
    2142:	64 c0       	rjmp	.+200    	; 0x220c <ProgramTwo+0x2ea>
	else if (__tmp > 65535)
    2144:	fe 01       	movw	r30, r28
    2146:	e3 5b       	subi	r30, 0xB3	; 179
    2148:	ff 4f       	sbci	r31, 0xFF	; 255
    214a:	60 81       	ld	r22, Z
    214c:	71 81       	ldd	r23, Z+1	; 0x01
    214e:	82 81       	ldd	r24, Z+2	; 0x02
    2150:	93 81       	ldd	r25, Z+3	; 0x03
    2152:	20 e0       	ldi	r18, 0x00	; 0
    2154:	3f ef       	ldi	r19, 0xFF	; 255
    2156:	4f e7       	ldi	r20, 0x7F	; 127
    2158:	57 e4       	ldi	r21, 0x47	; 71
    215a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    215e:	18 16       	cp	r1, r24
    2160:	0c f0       	brlt	.+2      	; 0x2164 <ProgramTwo+0x242>
    2162:	43 c0       	rjmp	.+134    	; 0x21ea <ProgramTwo+0x2c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2164:	fe 01       	movw	r30, r28
    2166:	ef 5a       	subi	r30, 0xAF	; 175
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	60 81       	ld	r22, Z
    216c:	71 81       	ldd	r23, Z+1	; 0x01
    216e:	82 81       	ldd	r24, Z+2	; 0x02
    2170:	93 81       	ldd	r25, Z+3	; 0x03
    2172:	20 e0       	ldi	r18, 0x00	; 0
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	40 e2       	ldi	r20, 0x20	; 32
    2178:	51 e4       	ldi	r21, 0x41	; 65
    217a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    217e:	dc 01       	movw	r26, r24
    2180:	cb 01       	movw	r24, r22
    2182:	8e 01       	movw	r16, r28
    2184:	05 5b       	subi	r16, 0xB5	; 181
    2186:	1f 4f       	sbci	r17, 0xFF	; 255
    2188:	bc 01       	movw	r22, r24
    218a:	cd 01       	movw	r24, r26
    218c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2190:	dc 01       	movw	r26, r24
    2192:	cb 01       	movw	r24, r22
    2194:	f8 01       	movw	r30, r16
    2196:	91 83       	std	Z+1, r25	; 0x01
    2198:	80 83       	st	Z, r24
    219a:	1f c0       	rjmp	.+62     	; 0x21da <ProgramTwo+0x2b8>
    219c:	fe 01       	movw	r30, r28
    219e:	e7 5b       	subi	r30, 0xB7	; 183
    21a0:	ff 4f       	sbci	r31, 0xFF	; 255
    21a2:	89 e1       	ldi	r24, 0x19	; 25
    21a4:	90 e0       	ldi	r25, 0x00	; 0
    21a6:	91 83       	std	Z+1, r25	; 0x01
    21a8:	80 83       	st	Z, r24
    21aa:	fe 01       	movw	r30, r28
    21ac:	e7 5b       	subi	r30, 0xB7	; 183
    21ae:	ff 4f       	sbci	r31, 0xFF	; 255
    21b0:	80 81       	ld	r24, Z
    21b2:	91 81       	ldd	r25, Z+1	; 0x01
    21b4:	01 97       	sbiw	r24, 0x01	; 1
    21b6:	f1 f7       	brne	.-4      	; 0x21b4 <ProgramTwo+0x292>
    21b8:	fe 01       	movw	r30, r28
    21ba:	e7 5b       	subi	r30, 0xB7	; 183
    21bc:	ff 4f       	sbci	r31, 0xFF	; 255
    21be:	91 83       	std	Z+1, r25	; 0x01
    21c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21c2:	de 01       	movw	r26, r28
    21c4:	a5 5b       	subi	r26, 0xB5	; 181
    21c6:	bf 4f       	sbci	r27, 0xFF	; 255
    21c8:	fe 01       	movw	r30, r28
    21ca:	e5 5b       	subi	r30, 0xB5	; 181
    21cc:	ff 4f       	sbci	r31, 0xFF	; 255
    21ce:	80 81       	ld	r24, Z
    21d0:	91 81       	ldd	r25, Z+1	; 0x01
    21d2:	01 97       	sbiw	r24, 0x01	; 1
    21d4:	11 96       	adiw	r26, 0x01	; 1
    21d6:	9c 93       	st	X, r25
    21d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21da:	fe 01       	movw	r30, r28
    21dc:	e5 5b       	subi	r30, 0xB5	; 181
    21de:	ff 4f       	sbci	r31, 0xFF	; 255
    21e0:	80 81       	ld	r24, Z
    21e2:	91 81       	ldd	r25, Z+1	; 0x01
    21e4:	00 97       	sbiw	r24, 0x00	; 0
    21e6:	d1 f6       	brne	.-76     	; 0x219c <ProgramTwo+0x27a>
    21e8:	27 c0       	rjmp	.+78     	; 0x2238 <ProgramTwo+0x316>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ea:	8e 01       	movw	r16, r28
    21ec:	05 5b       	subi	r16, 0xB5	; 181
    21ee:	1f 4f       	sbci	r17, 0xFF	; 255
    21f0:	fe 01       	movw	r30, r28
    21f2:	e3 5b       	subi	r30, 0xB3	; 179
    21f4:	ff 4f       	sbci	r31, 0xFF	; 255
    21f6:	60 81       	ld	r22, Z
    21f8:	71 81       	ldd	r23, Z+1	; 0x01
    21fa:	82 81       	ldd	r24, Z+2	; 0x02
    21fc:	93 81       	ldd	r25, Z+3	; 0x03
    21fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2202:	dc 01       	movw	r26, r24
    2204:	cb 01       	movw	r24, r22
    2206:	f8 01       	movw	r30, r16
    2208:	91 83       	std	Z+1, r25	; 0x01
    220a:	80 83       	st	Z, r24
    220c:	de 01       	movw	r26, r28
    220e:	a9 5b       	subi	r26, 0xB9	; 185
    2210:	bf 4f       	sbci	r27, 0xFF	; 255
    2212:	fe 01       	movw	r30, r28
    2214:	e5 5b       	subi	r30, 0xB5	; 181
    2216:	ff 4f       	sbci	r31, 0xFF	; 255
    2218:	80 81       	ld	r24, Z
    221a:	91 81       	ldd	r25, Z+1	; 0x01
    221c:	8d 93       	st	X+, r24
    221e:	9c 93       	st	X, r25
    2220:	fe 01       	movw	r30, r28
    2222:	e9 5b       	subi	r30, 0xB9	; 185
    2224:	ff 4f       	sbci	r31, 0xFF	; 255
    2226:	80 81       	ld	r24, Z
    2228:	91 81       	ldd	r25, Z+1	; 0x01
    222a:	01 97       	sbiw	r24, 0x01	; 1
    222c:	f1 f7       	brne	.-4      	; 0x222a <ProgramTwo+0x308>
    222e:	fe 01       	movw	r30, r28
    2230:	e9 5b       	subi	r30, 0xB9	; 185
    2232:	ff 4f       	sbci	r31, 0xFF	; 255
    2234:	91 83       	std	Z+1, r25	; 0x01
    2236:	80 83       	st	Z, r24
	_delay_ms(10000);

	LED_turnOn(DIO_PORTC,PIN2);
    2238:	82 e0       	ldi	r24, 0x02	; 2
    223a:	62 e0       	ldi	r22, 0x02	; 2
    223c:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOn(DIO_PORTC,PIN7);
    2240:	82 e0       	ldi	r24, 0x02	; 2
    2242:	67 e0       	ldi	r22, 0x07	; 7
    2244:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOff(DIO_PORTD,PIN3);
    2248:	83 e0       	ldi	r24, 0x03	; 3
    224a:	63 e0       	ldi	r22, 0x03	; 3
    224c:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    2250:	fe 01       	movw	r30, r28
    2252:	ed 5b       	subi	r30, 0xBD	; 189
    2254:	ff 4f       	sbci	r31, 0xFF	; 255
    2256:	80 e0       	ldi	r24, 0x00	; 0
    2258:	90 e4       	ldi	r25, 0x40	; 64
    225a:	ac e1       	ldi	r26, 0x1C	; 28
    225c:	b6 e4       	ldi	r27, 0x46	; 70
    225e:	80 83       	st	Z, r24
    2260:	91 83       	std	Z+1, r25	; 0x01
    2262:	a2 83       	std	Z+2, r26	; 0x02
    2264:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2266:	8e 01       	movw	r16, r28
    2268:	01 5c       	subi	r16, 0xC1	; 193
    226a:	1f 4f       	sbci	r17, 0xFF	; 255
    226c:	fe 01       	movw	r30, r28
    226e:	ed 5b       	subi	r30, 0xBD	; 189
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	60 81       	ld	r22, Z
    2274:	71 81       	ldd	r23, Z+1	; 0x01
    2276:	82 81       	ldd	r24, Z+2	; 0x02
    2278:	93 81       	ldd	r25, Z+3	; 0x03
    227a:	20 e0       	ldi	r18, 0x00	; 0
    227c:	30 e0       	ldi	r19, 0x00	; 0
    227e:	4a e7       	ldi	r20, 0x7A	; 122
    2280:	53 e4       	ldi	r21, 0x43	; 67
    2282:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2286:	dc 01       	movw	r26, r24
    2288:	cb 01       	movw	r24, r22
    228a:	f8 01       	movw	r30, r16
    228c:	80 83       	st	Z, r24
    228e:	91 83       	std	Z+1, r25	; 0x01
    2290:	a2 83       	std	Z+2, r26	; 0x02
    2292:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2294:	fe 01       	movw	r30, r28
    2296:	ff 96       	adiw	r30, 0x3f	; 63
    2298:	60 81       	ld	r22, Z
    229a:	71 81       	ldd	r23, Z+1	; 0x01
    229c:	82 81       	ldd	r24, Z+2	; 0x02
    229e:	93 81       	ldd	r25, Z+3	; 0x03
    22a0:	20 e0       	ldi	r18, 0x00	; 0
    22a2:	30 e0       	ldi	r19, 0x00	; 0
    22a4:	40 e8       	ldi	r20, 0x80	; 128
    22a6:	5f e3       	ldi	r21, 0x3F	; 63
    22a8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    22ac:	88 23       	and	r24, r24
    22ae:	2c f4       	brge	.+10     	; 0x22ba <ProgramTwo+0x398>
		__ticks = 1;
    22b0:	81 e0       	ldi	r24, 0x01	; 1
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	9e af       	std	Y+62, r25	; 0x3e
    22b6:	8d af       	std	Y+61, r24	; 0x3d
    22b8:	46 c0       	rjmp	.+140    	; 0x2346 <ProgramTwo+0x424>
	else if (__tmp > 65535)
    22ba:	fe 01       	movw	r30, r28
    22bc:	ff 96       	adiw	r30, 0x3f	; 63
    22be:	60 81       	ld	r22, Z
    22c0:	71 81       	ldd	r23, Z+1	; 0x01
    22c2:	82 81       	ldd	r24, Z+2	; 0x02
    22c4:	93 81       	ldd	r25, Z+3	; 0x03
    22c6:	20 e0       	ldi	r18, 0x00	; 0
    22c8:	3f ef       	ldi	r19, 0xFF	; 255
    22ca:	4f e7       	ldi	r20, 0x7F	; 127
    22cc:	57 e4       	ldi	r21, 0x47	; 71
    22ce:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    22d2:	18 16       	cp	r1, r24
    22d4:	64 f5       	brge	.+88     	; 0x232e <ProgramTwo+0x40c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22d6:	fe 01       	movw	r30, r28
    22d8:	ed 5b       	subi	r30, 0xBD	; 189
    22da:	ff 4f       	sbci	r31, 0xFF	; 255
    22dc:	60 81       	ld	r22, Z
    22de:	71 81       	ldd	r23, Z+1	; 0x01
    22e0:	82 81       	ldd	r24, Z+2	; 0x02
    22e2:	93 81       	ldd	r25, Z+3	; 0x03
    22e4:	20 e0       	ldi	r18, 0x00	; 0
    22e6:	30 e0       	ldi	r19, 0x00	; 0
    22e8:	40 e2       	ldi	r20, 0x20	; 32
    22ea:	51 e4       	ldi	r21, 0x41	; 65
    22ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22f0:	dc 01       	movw	r26, r24
    22f2:	cb 01       	movw	r24, r22
    22f4:	bc 01       	movw	r22, r24
    22f6:	cd 01       	movw	r24, r26
    22f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22fc:	dc 01       	movw	r26, r24
    22fe:	cb 01       	movw	r24, r22
    2300:	9e af       	std	Y+62, r25	; 0x3e
    2302:	8d af       	std	Y+61, r24	; 0x3d
    2304:	0f c0       	rjmp	.+30     	; 0x2324 <ProgramTwo+0x402>
    2306:	89 e1       	ldi	r24, 0x19	; 25
    2308:	90 e0       	ldi	r25, 0x00	; 0
    230a:	9c af       	std	Y+60, r25	; 0x3c
    230c:	8b af       	std	Y+59, r24	; 0x3b
    230e:	8b ad       	ldd	r24, Y+59	; 0x3b
    2310:	9c ad       	ldd	r25, Y+60	; 0x3c
    2312:	01 97       	sbiw	r24, 0x01	; 1
    2314:	f1 f7       	brne	.-4      	; 0x2312 <ProgramTwo+0x3f0>
    2316:	9c af       	std	Y+60, r25	; 0x3c
    2318:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    231a:	8d ad       	ldd	r24, Y+61	; 0x3d
    231c:	9e ad       	ldd	r25, Y+62	; 0x3e
    231e:	01 97       	sbiw	r24, 0x01	; 1
    2320:	9e af       	std	Y+62, r25	; 0x3e
    2322:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2324:	8d ad       	ldd	r24, Y+61	; 0x3d
    2326:	9e ad       	ldd	r25, Y+62	; 0x3e
    2328:	00 97       	sbiw	r24, 0x00	; 0
    232a:	69 f7       	brne	.-38     	; 0x2306 <ProgramTwo+0x3e4>
    232c:	16 c0       	rjmp	.+44     	; 0x235a <ProgramTwo+0x438>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    232e:	fe 01       	movw	r30, r28
    2330:	ff 96       	adiw	r30, 0x3f	; 63
    2332:	60 81       	ld	r22, Z
    2334:	71 81       	ldd	r23, Z+1	; 0x01
    2336:	82 81       	ldd	r24, Z+2	; 0x02
    2338:	93 81       	ldd	r25, Z+3	; 0x03
    233a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    233e:	dc 01       	movw	r26, r24
    2340:	cb 01       	movw	r24, r22
    2342:	9e af       	std	Y+62, r25	; 0x3e
    2344:	8d af       	std	Y+61, r24	; 0x3d
    2346:	8d ad       	ldd	r24, Y+61	; 0x3d
    2348:	9e ad       	ldd	r25, Y+62	; 0x3e
    234a:	9a af       	std	Y+58, r25	; 0x3a
    234c:	89 af       	std	Y+57, r24	; 0x39
    234e:	89 ad       	ldd	r24, Y+57	; 0x39
    2350:	9a ad       	ldd	r25, Y+58	; 0x3a
    2352:	01 97       	sbiw	r24, 0x01	; 1
    2354:	f1 f7       	brne	.-4      	; 0x2352 <ProgramTwo+0x430>
    2356:	9a af       	std	Y+58, r25	; 0x3a
    2358:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(10000);

	LED_turnOff(DIO_PORTC,PIN2);
    235a:	82 e0       	ldi	r24, 0x02	; 2
    235c:	62 e0       	ldi	r22, 0x02	; 2
    235e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOff(DIO_PORTC,PIN7);
    2362:	82 e0       	ldi	r24, 0x02	; 2
    2364:	67 e0       	ldi	r22, 0x07	; 7
    2366:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOn(DIO_PORTD,PIN3);
    236a:	83 e0       	ldi	r24, 0x03	; 3
    236c:	63 e0       	ldi	r22, 0x03	; 3
    236e:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    2372:	80 e0       	ldi	r24, 0x00	; 0
    2374:	90 e4       	ldi	r25, 0x40	; 64
    2376:	ac e1       	ldi	r26, 0x1C	; 28
    2378:	b6 e4       	ldi	r27, 0x46	; 70
    237a:	8d ab       	std	Y+53, r24	; 0x35
    237c:	9e ab       	std	Y+54, r25	; 0x36
    237e:	af ab       	std	Y+55, r26	; 0x37
    2380:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2382:	6d a9       	ldd	r22, Y+53	; 0x35
    2384:	7e a9       	ldd	r23, Y+54	; 0x36
    2386:	8f a9       	ldd	r24, Y+55	; 0x37
    2388:	98 ad       	ldd	r25, Y+56	; 0x38
    238a:	20 e0       	ldi	r18, 0x00	; 0
    238c:	30 e0       	ldi	r19, 0x00	; 0
    238e:	4a e7       	ldi	r20, 0x7A	; 122
    2390:	53 e4       	ldi	r21, 0x43	; 67
    2392:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2396:	dc 01       	movw	r26, r24
    2398:	cb 01       	movw	r24, r22
    239a:	89 ab       	std	Y+49, r24	; 0x31
    239c:	9a ab       	std	Y+50, r25	; 0x32
    239e:	ab ab       	std	Y+51, r26	; 0x33
    23a0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    23a2:	69 a9       	ldd	r22, Y+49	; 0x31
    23a4:	7a a9       	ldd	r23, Y+50	; 0x32
    23a6:	8b a9       	ldd	r24, Y+51	; 0x33
    23a8:	9c a9       	ldd	r25, Y+52	; 0x34
    23aa:	20 e0       	ldi	r18, 0x00	; 0
    23ac:	30 e0       	ldi	r19, 0x00	; 0
    23ae:	40 e8       	ldi	r20, 0x80	; 128
    23b0:	5f e3       	ldi	r21, 0x3F	; 63
    23b2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    23b6:	88 23       	and	r24, r24
    23b8:	2c f4       	brge	.+10     	; 0x23c4 <ProgramTwo+0x4a2>
		__ticks = 1;
    23ba:	81 e0       	ldi	r24, 0x01	; 1
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	98 ab       	std	Y+48, r25	; 0x30
    23c0:	8f a7       	std	Y+47, r24	; 0x2f
    23c2:	3f c0       	rjmp	.+126    	; 0x2442 <ProgramTwo+0x520>
	else if (__tmp > 65535)
    23c4:	69 a9       	ldd	r22, Y+49	; 0x31
    23c6:	7a a9       	ldd	r23, Y+50	; 0x32
    23c8:	8b a9       	ldd	r24, Y+51	; 0x33
    23ca:	9c a9       	ldd	r25, Y+52	; 0x34
    23cc:	20 e0       	ldi	r18, 0x00	; 0
    23ce:	3f ef       	ldi	r19, 0xFF	; 255
    23d0:	4f e7       	ldi	r20, 0x7F	; 127
    23d2:	57 e4       	ldi	r21, 0x47	; 71
    23d4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    23d8:	18 16       	cp	r1, r24
    23da:	4c f5       	brge	.+82     	; 0x242e <ProgramTwo+0x50c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23dc:	6d a9       	ldd	r22, Y+53	; 0x35
    23de:	7e a9       	ldd	r23, Y+54	; 0x36
    23e0:	8f a9       	ldd	r24, Y+55	; 0x37
    23e2:	98 ad       	ldd	r25, Y+56	; 0x38
    23e4:	20 e0       	ldi	r18, 0x00	; 0
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	40 e2       	ldi	r20, 0x20	; 32
    23ea:	51 e4       	ldi	r21, 0x41	; 65
    23ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23f0:	dc 01       	movw	r26, r24
    23f2:	cb 01       	movw	r24, r22
    23f4:	bc 01       	movw	r22, r24
    23f6:	cd 01       	movw	r24, r26
    23f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	98 ab       	std	Y+48, r25	; 0x30
    2402:	8f a7       	std	Y+47, r24	; 0x2f
    2404:	0f c0       	rjmp	.+30     	; 0x2424 <ProgramTwo+0x502>
    2406:	89 e1       	ldi	r24, 0x19	; 25
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	9e a7       	std	Y+46, r25	; 0x2e
    240c:	8d a7       	std	Y+45, r24	; 0x2d
    240e:	8d a5       	ldd	r24, Y+45	; 0x2d
    2410:	9e a5       	ldd	r25, Y+46	; 0x2e
    2412:	01 97       	sbiw	r24, 0x01	; 1
    2414:	f1 f7       	brne	.-4      	; 0x2412 <ProgramTwo+0x4f0>
    2416:	9e a7       	std	Y+46, r25	; 0x2e
    2418:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    241a:	8f a5       	ldd	r24, Y+47	; 0x2f
    241c:	98 a9       	ldd	r25, Y+48	; 0x30
    241e:	01 97       	sbiw	r24, 0x01	; 1
    2420:	98 ab       	std	Y+48, r25	; 0x30
    2422:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2424:	8f a5       	ldd	r24, Y+47	; 0x2f
    2426:	98 a9       	ldd	r25, Y+48	; 0x30
    2428:	00 97       	sbiw	r24, 0x00	; 0
    242a:	69 f7       	brne	.-38     	; 0x2406 <ProgramTwo+0x4e4>
    242c:	14 c0       	rjmp	.+40     	; 0x2456 <ProgramTwo+0x534>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    242e:	69 a9       	ldd	r22, Y+49	; 0x31
    2430:	7a a9       	ldd	r23, Y+50	; 0x32
    2432:	8b a9       	ldd	r24, Y+51	; 0x33
    2434:	9c a9       	ldd	r25, Y+52	; 0x34
    2436:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    243a:	dc 01       	movw	r26, r24
    243c:	cb 01       	movw	r24, r22
    243e:	98 ab       	std	Y+48, r25	; 0x30
    2440:	8f a7       	std	Y+47, r24	; 0x2f
    2442:	8f a5       	ldd	r24, Y+47	; 0x2f
    2444:	98 a9       	ldd	r25, Y+48	; 0x30
    2446:	9c a7       	std	Y+44, r25	; 0x2c
    2448:	8b a7       	std	Y+43, r24	; 0x2b
    244a:	8b a5       	ldd	r24, Y+43	; 0x2b
    244c:	9c a5       	ldd	r25, Y+44	; 0x2c
    244e:	01 97       	sbiw	r24, 0x01	; 1
    2450:	f1 f7       	brne	.-4      	; 0x244e <ProgramTwo+0x52c>
    2452:	9c a7       	std	Y+44, r25	; 0x2c
    2454:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10000);

	LED_turnOn(DIO_PORTC,PIN2);
    2456:	82 e0       	ldi	r24, 0x02	; 2
    2458:	62 e0       	ldi	r22, 0x02	; 2
    245a:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOff(DIO_PORTC,PIN7);
    245e:	82 e0       	ldi	r24, 0x02	; 2
    2460:	67 e0       	ldi	r22, 0x07	; 7
    2462:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOn(DIO_PORTD,PIN3);
    2466:	83 e0       	ldi	r24, 0x03	; 3
    2468:	63 e0       	ldi	r22, 0x03	; 3
    246a:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    246e:	80 e0       	ldi	r24, 0x00	; 0
    2470:	90 e4       	ldi	r25, 0x40	; 64
    2472:	ac e1       	ldi	r26, 0x1C	; 28
    2474:	b6 e4       	ldi	r27, 0x46	; 70
    2476:	8f a3       	std	Y+39, r24	; 0x27
    2478:	98 a7       	std	Y+40, r25	; 0x28
    247a:	a9 a7       	std	Y+41, r26	; 0x29
    247c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    247e:	6f a1       	ldd	r22, Y+39	; 0x27
    2480:	78 a5       	ldd	r23, Y+40	; 0x28
    2482:	89 a5       	ldd	r24, Y+41	; 0x29
    2484:	9a a5       	ldd	r25, Y+42	; 0x2a
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	4a e7       	ldi	r20, 0x7A	; 122
    248c:	53 e4       	ldi	r21, 0x43	; 67
    248e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2492:	dc 01       	movw	r26, r24
    2494:	cb 01       	movw	r24, r22
    2496:	8b a3       	std	Y+35, r24	; 0x23
    2498:	9c a3       	std	Y+36, r25	; 0x24
    249a:	ad a3       	std	Y+37, r26	; 0x25
    249c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    249e:	6b a1       	ldd	r22, Y+35	; 0x23
    24a0:	7c a1       	ldd	r23, Y+36	; 0x24
    24a2:	8d a1       	ldd	r24, Y+37	; 0x25
    24a4:	9e a1       	ldd	r25, Y+38	; 0x26
    24a6:	20 e0       	ldi	r18, 0x00	; 0
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	40 e8       	ldi	r20, 0x80	; 128
    24ac:	5f e3       	ldi	r21, 0x3F	; 63
    24ae:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    24b2:	88 23       	and	r24, r24
    24b4:	2c f4       	brge	.+10     	; 0x24c0 <ProgramTwo+0x59e>
		__ticks = 1;
    24b6:	81 e0       	ldi	r24, 0x01	; 1
    24b8:	90 e0       	ldi	r25, 0x00	; 0
    24ba:	9a a3       	std	Y+34, r25	; 0x22
    24bc:	89 a3       	std	Y+33, r24	; 0x21
    24be:	3f c0       	rjmp	.+126    	; 0x253e <ProgramTwo+0x61c>
	else if (__tmp > 65535)
    24c0:	6b a1       	ldd	r22, Y+35	; 0x23
    24c2:	7c a1       	ldd	r23, Y+36	; 0x24
    24c4:	8d a1       	ldd	r24, Y+37	; 0x25
    24c6:	9e a1       	ldd	r25, Y+38	; 0x26
    24c8:	20 e0       	ldi	r18, 0x00	; 0
    24ca:	3f ef       	ldi	r19, 0xFF	; 255
    24cc:	4f e7       	ldi	r20, 0x7F	; 127
    24ce:	57 e4       	ldi	r21, 0x47	; 71
    24d0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    24d4:	18 16       	cp	r1, r24
    24d6:	4c f5       	brge	.+82     	; 0x252a <ProgramTwo+0x608>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24d8:	6f a1       	ldd	r22, Y+39	; 0x27
    24da:	78 a5       	ldd	r23, Y+40	; 0x28
    24dc:	89 a5       	ldd	r24, Y+41	; 0x29
    24de:	9a a5       	ldd	r25, Y+42	; 0x2a
    24e0:	20 e0       	ldi	r18, 0x00	; 0
    24e2:	30 e0       	ldi	r19, 0x00	; 0
    24e4:	40 e2       	ldi	r20, 0x20	; 32
    24e6:	51 e4       	ldi	r21, 0x41	; 65
    24e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24ec:	dc 01       	movw	r26, r24
    24ee:	cb 01       	movw	r24, r22
    24f0:	bc 01       	movw	r22, r24
    24f2:	cd 01       	movw	r24, r26
    24f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	9a a3       	std	Y+34, r25	; 0x22
    24fe:	89 a3       	std	Y+33, r24	; 0x21
    2500:	0f c0       	rjmp	.+30     	; 0x2520 <ProgramTwo+0x5fe>
    2502:	89 e1       	ldi	r24, 0x19	; 25
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	98 a3       	std	Y+32, r25	; 0x20
    2508:	8f 8f       	std	Y+31, r24	; 0x1f
    250a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    250c:	98 a1       	ldd	r25, Y+32	; 0x20
    250e:	01 97       	sbiw	r24, 0x01	; 1
    2510:	f1 f7       	brne	.-4      	; 0x250e <ProgramTwo+0x5ec>
    2512:	98 a3       	std	Y+32, r25	; 0x20
    2514:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2516:	89 a1       	ldd	r24, Y+33	; 0x21
    2518:	9a a1       	ldd	r25, Y+34	; 0x22
    251a:	01 97       	sbiw	r24, 0x01	; 1
    251c:	9a a3       	std	Y+34, r25	; 0x22
    251e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2520:	89 a1       	ldd	r24, Y+33	; 0x21
    2522:	9a a1       	ldd	r25, Y+34	; 0x22
    2524:	00 97       	sbiw	r24, 0x00	; 0
    2526:	69 f7       	brne	.-38     	; 0x2502 <ProgramTwo+0x5e0>
    2528:	14 c0       	rjmp	.+40     	; 0x2552 <ProgramTwo+0x630>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    252a:	6b a1       	ldd	r22, Y+35	; 0x23
    252c:	7c a1       	ldd	r23, Y+36	; 0x24
    252e:	8d a1       	ldd	r24, Y+37	; 0x25
    2530:	9e a1       	ldd	r25, Y+38	; 0x26
    2532:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2536:	dc 01       	movw	r26, r24
    2538:	cb 01       	movw	r24, r22
    253a:	9a a3       	std	Y+34, r25	; 0x22
    253c:	89 a3       	std	Y+33, r24	; 0x21
    253e:	89 a1       	ldd	r24, Y+33	; 0x21
    2540:	9a a1       	ldd	r25, Y+34	; 0x22
    2542:	9e 8f       	std	Y+30, r25	; 0x1e
    2544:	8d 8f       	std	Y+29, r24	; 0x1d
    2546:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2548:	9e 8d       	ldd	r25, Y+30	; 0x1e
    254a:	01 97       	sbiw	r24, 0x01	; 1
    254c:	f1 f7       	brne	.-4      	; 0x254a <ProgramTwo+0x628>
    254e:	9e 8f       	std	Y+30, r25	; 0x1e
    2550:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10000);

	LED_turnOff(DIO_PORTC,PIN2);
    2552:	82 e0       	ldi	r24, 0x02	; 2
    2554:	62 e0       	ldi	r22, 0x02	; 2
    2556:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOn(DIO_PORTC,PIN7);
    255a:	82 e0       	ldi	r24, 0x02	; 2
    255c:	67 e0       	ldi	r22, 0x07	; 7
    255e:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOn(DIO_PORTD,PIN3);
    2562:	83 e0       	ldi	r24, 0x03	; 3
    2564:	63 e0       	ldi	r22, 0x03	; 3
    2566:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    256a:	80 e0       	ldi	r24, 0x00	; 0
    256c:	90 e4       	ldi	r25, 0x40	; 64
    256e:	ac e1       	ldi	r26, 0x1C	; 28
    2570:	b6 e4       	ldi	r27, 0x46	; 70
    2572:	89 8f       	std	Y+25, r24	; 0x19
    2574:	9a 8f       	std	Y+26, r25	; 0x1a
    2576:	ab 8f       	std	Y+27, r26	; 0x1b
    2578:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    257a:	69 8d       	ldd	r22, Y+25	; 0x19
    257c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    257e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2580:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2582:	20 e0       	ldi	r18, 0x00	; 0
    2584:	30 e0       	ldi	r19, 0x00	; 0
    2586:	4a e7       	ldi	r20, 0x7A	; 122
    2588:	53 e4       	ldi	r21, 0x43	; 67
    258a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    258e:	dc 01       	movw	r26, r24
    2590:	cb 01       	movw	r24, r22
    2592:	8d 8b       	std	Y+21, r24	; 0x15
    2594:	9e 8b       	std	Y+22, r25	; 0x16
    2596:	af 8b       	std	Y+23, r26	; 0x17
    2598:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    259a:	6d 89       	ldd	r22, Y+21	; 0x15
    259c:	7e 89       	ldd	r23, Y+22	; 0x16
    259e:	8f 89       	ldd	r24, Y+23	; 0x17
    25a0:	98 8d       	ldd	r25, Y+24	; 0x18
    25a2:	20 e0       	ldi	r18, 0x00	; 0
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	40 e8       	ldi	r20, 0x80	; 128
    25a8:	5f e3       	ldi	r21, 0x3F	; 63
    25aa:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    25ae:	88 23       	and	r24, r24
    25b0:	2c f4       	brge	.+10     	; 0x25bc <ProgramTwo+0x69a>
		__ticks = 1;
    25b2:	81 e0       	ldi	r24, 0x01	; 1
    25b4:	90 e0       	ldi	r25, 0x00	; 0
    25b6:	9c 8b       	std	Y+20, r25	; 0x14
    25b8:	8b 8b       	std	Y+19, r24	; 0x13
    25ba:	3f c0       	rjmp	.+126    	; 0x263a <ProgramTwo+0x718>
	else if (__tmp > 65535)
    25bc:	6d 89       	ldd	r22, Y+21	; 0x15
    25be:	7e 89       	ldd	r23, Y+22	; 0x16
    25c0:	8f 89       	ldd	r24, Y+23	; 0x17
    25c2:	98 8d       	ldd	r25, Y+24	; 0x18
    25c4:	20 e0       	ldi	r18, 0x00	; 0
    25c6:	3f ef       	ldi	r19, 0xFF	; 255
    25c8:	4f e7       	ldi	r20, 0x7F	; 127
    25ca:	57 e4       	ldi	r21, 0x47	; 71
    25cc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    25d0:	18 16       	cp	r1, r24
    25d2:	4c f5       	brge	.+82     	; 0x2626 <ProgramTwo+0x704>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25d4:	69 8d       	ldd	r22, Y+25	; 0x19
    25d6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    25d8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    25da:	9c 8d       	ldd	r25, Y+28	; 0x1c
    25dc:	20 e0       	ldi	r18, 0x00	; 0
    25de:	30 e0       	ldi	r19, 0x00	; 0
    25e0:	40 e2       	ldi	r20, 0x20	; 32
    25e2:	51 e4       	ldi	r21, 0x41	; 65
    25e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25e8:	dc 01       	movw	r26, r24
    25ea:	cb 01       	movw	r24, r22
    25ec:	bc 01       	movw	r22, r24
    25ee:	cd 01       	movw	r24, r26
    25f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f4:	dc 01       	movw	r26, r24
    25f6:	cb 01       	movw	r24, r22
    25f8:	9c 8b       	std	Y+20, r25	; 0x14
    25fa:	8b 8b       	std	Y+19, r24	; 0x13
    25fc:	0f c0       	rjmp	.+30     	; 0x261c <ProgramTwo+0x6fa>
    25fe:	89 e1       	ldi	r24, 0x19	; 25
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	9a 8b       	std	Y+18, r25	; 0x12
    2604:	89 8b       	std	Y+17, r24	; 0x11
    2606:	89 89       	ldd	r24, Y+17	; 0x11
    2608:	9a 89       	ldd	r25, Y+18	; 0x12
    260a:	01 97       	sbiw	r24, 0x01	; 1
    260c:	f1 f7       	brne	.-4      	; 0x260a <ProgramTwo+0x6e8>
    260e:	9a 8b       	std	Y+18, r25	; 0x12
    2610:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2612:	8b 89       	ldd	r24, Y+19	; 0x13
    2614:	9c 89       	ldd	r25, Y+20	; 0x14
    2616:	01 97       	sbiw	r24, 0x01	; 1
    2618:	9c 8b       	std	Y+20, r25	; 0x14
    261a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    261c:	8b 89       	ldd	r24, Y+19	; 0x13
    261e:	9c 89       	ldd	r25, Y+20	; 0x14
    2620:	00 97       	sbiw	r24, 0x00	; 0
    2622:	69 f7       	brne	.-38     	; 0x25fe <ProgramTwo+0x6dc>
    2624:	14 c0       	rjmp	.+40     	; 0x264e <ProgramTwo+0x72c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2626:	6d 89       	ldd	r22, Y+21	; 0x15
    2628:	7e 89       	ldd	r23, Y+22	; 0x16
    262a:	8f 89       	ldd	r24, Y+23	; 0x17
    262c:	98 8d       	ldd	r25, Y+24	; 0x18
    262e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2632:	dc 01       	movw	r26, r24
    2634:	cb 01       	movw	r24, r22
    2636:	9c 8b       	std	Y+20, r25	; 0x14
    2638:	8b 8b       	std	Y+19, r24	; 0x13
    263a:	8b 89       	ldd	r24, Y+19	; 0x13
    263c:	9c 89       	ldd	r25, Y+20	; 0x14
    263e:	98 8b       	std	Y+16, r25	; 0x10
    2640:	8f 87       	std	Y+15, r24	; 0x0f
    2642:	8f 85       	ldd	r24, Y+15	; 0x0f
    2644:	98 89       	ldd	r25, Y+16	; 0x10
    2646:	01 97       	sbiw	r24, 0x01	; 1
    2648:	f1 f7       	brne	.-4      	; 0x2646 <ProgramTwo+0x724>
    264a:	98 8b       	std	Y+16, r25	; 0x10
    264c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10000);

	LED_turnOn(DIO_PORTC,PIN2);
    264e:	82 e0       	ldi	r24, 0x02	; 2
    2650:	62 e0       	ldi	r22, 0x02	; 2
    2652:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOn(DIO_PORTC,PIN7);
    2656:	82 e0       	ldi	r24, 0x02	; 2
    2658:	67 e0       	ldi	r22, 0x07	; 7
    265a:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
	LED_turnOn(DIO_PORTD,PIN3);
    265e:	83 e0       	ldi	r24, 0x03	; 3
    2660:	63 e0       	ldi	r22, 0x03	; 3
    2662:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    2666:	80 e0       	ldi	r24, 0x00	; 0
    2668:	90 e4       	ldi	r25, 0x40	; 64
    266a:	ac e1       	ldi	r26, 0x1C	; 28
    266c:	b6 e4       	ldi	r27, 0x46	; 70
    266e:	8b 87       	std	Y+11, r24	; 0x0b
    2670:	9c 87       	std	Y+12, r25	; 0x0c
    2672:	ad 87       	std	Y+13, r26	; 0x0d
    2674:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2676:	6b 85       	ldd	r22, Y+11	; 0x0b
    2678:	7c 85       	ldd	r23, Y+12	; 0x0c
    267a:	8d 85       	ldd	r24, Y+13	; 0x0d
    267c:	9e 85       	ldd	r25, Y+14	; 0x0e
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	4a e7       	ldi	r20, 0x7A	; 122
    2684:	53 e4       	ldi	r21, 0x43	; 67
    2686:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    268a:	dc 01       	movw	r26, r24
    268c:	cb 01       	movw	r24, r22
    268e:	8f 83       	std	Y+7, r24	; 0x07
    2690:	98 87       	std	Y+8, r25	; 0x08
    2692:	a9 87       	std	Y+9, r26	; 0x09
    2694:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2696:	6f 81       	ldd	r22, Y+7	; 0x07
    2698:	78 85       	ldd	r23, Y+8	; 0x08
    269a:	89 85       	ldd	r24, Y+9	; 0x09
    269c:	9a 85       	ldd	r25, Y+10	; 0x0a
    269e:	20 e0       	ldi	r18, 0x00	; 0
    26a0:	30 e0       	ldi	r19, 0x00	; 0
    26a2:	40 e8       	ldi	r20, 0x80	; 128
    26a4:	5f e3       	ldi	r21, 0x3F	; 63
    26a6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    26aa:	88 23       	and	r24, r24
    26ac:	2c f4       	brge	.+10     	; 0x26b8 <ProgramTwo+0x796>
		__ticks = 1;
    26ae:	81 e0       	ldi	r24, 0x01	; 1
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	9e 83       	std	Y+6, r25	; 0x06
    26b4:	8d 83       	std	Y+5, r24	; 0x05
    26b6:	3f c0       	rjmp	.+126    	; 0x2736 <ProgramTwo+0x814>
	else if (__tmp > 65535)
    26b8:	6f 81       	ldd	r22, Y+7	; 0x07
    26ba:	78 85       	ldd	r23, Y+8	; 0x08
    26bc:	89 85       	ldd	r24, Y+9	; 0x09
    26be:	9a 85       	ldd	r25, Y+10	; 0x0a
    26c0:	20 e0       	ldi	r18, 0x00	; 0
    26c2:	3f ef       	ldi	r19, 0xFF	; 255
    26c4:	4f e7       	ldi	r20, 0x7F	; 127
    26c6:	57 e4       	ldi	r21, 0x47	; 71
    26c8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    26cc:	18 16       	cp	r1, r24
    26ce:	4c f5       	brge	.+82     	; 0x2722 <ProgramTwo+0x800>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    26d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    26d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    26d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	40 e2       	ldi	r20, 0x20	; 32
    26de:	51 e4       	ldi	r21, 0x41	; 65
    26e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	bc 01       	movw	r22, r24
    26ea:	cd 01       	movw	r24, r26
    26ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26f0:	dc 01       	movw	r26, r24
    26f2:	cb 01       	movw	r24, r22
    26f4:	9e 83       	std	Y+6, r25	; 0x06
    26f6:	8d 83       	std	Y+5, r24	; 0x05
    26f8:	0f c0       	rjmp	.+30     	; 0x2718 <ProgramTwo+0x7f6>
    26fa:	89 e1       	ldi	r24, 0x19	; 25
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	9c 83       	std	Y+4, r25	; 0x04
    2700:	8b 83       	std	Y+3, r24	; 0x03
    2702:	8b 81       	ldd	r24, Y+3	; 0x03
    2704:	9c 81       	ldd	r25, Y+4	; 0x04
    2706:	01 97       	sbiw	r24, 0x01	; 1
    2708:	f1 f7       	brne	.-4      	; 0x2706 <ProgramTwo+0x7e4>
    270a:	9c 83       	std	Y+4, r25	; 0x04
    270c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    270e:	8d 81       	ldd	r24, Y+5	; 0x05
    2710:	9e 81       	ldd	r25, Y+6	; 0x06
    2712:	01 97       	sbiw	r24, 0x01	; 1
    2714:	9e 83       	std	Y+6, r25	; 0x06
    2716:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2718:	8d 81       	ldd	r24, Y+5	; 0x05
    271a:	9e 81       	ldd	r25, Y+6	; 0x06
    271c:	00 97       	sbiw	r24, 0x00	; 0
    271e:	69 f7       	brne	.-38     	; 0x26fa <ProgramTwo+0x7d8>
    2720:	14 c0       	rjmp	.+40     	; 0x274a <ProgramTwo+0x828>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2722:	6f 81       	ldd	r22, Y+7	; 0x07
    2724:	78 85       	ldd	r23, Y+8	; 0x08
    2726:	89 85       	ldd	r24, Y+9	; 0x09
    2728:	9a 85       	ldd	r25, Y+10	; 0x0a
    272a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    272e:	dc 01       	movw	r26, r24
    2730:	cb 01       	movw	r24, r22
    2732:	9e 83       	std	Y+6, r25	; 0x06
    2734:	8d 83       	std	Y+5, r24	; 0x05
    2736:	8d 81       	ldd	r24, Y+5	; 0x05
    2738:	9e 81       	ldd	r25, Y+6	; 0x06
    273a:	9a 83       	std	Y+2, r25	; 0x02
    273c:	89 83       	std	Y+1, r24	; 0x01
    273e:	89 81       	ldd	r24, Y+1	; 0x01
    2740:	9a 81       	ldd	r25, Y+2	; 0x02
    2742:	01 97       	sbiw	r24, 0x01	; 1
    2744:	f1 f7       	brne	.-4      	; 0x2742 <ProgramTwo+0x820>
    2746:	9a 83       	std	Y+2, r25	; 0x02
    2748:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10000);

	LED_turnOff(DIO_PORTC,PIN2);
    274a:	82 e0       	ldi	r24, 0x02	; 2
    274c:	62 e0       	ldi	r22, 0x02	; 2
    274e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOff(DIO_PORTC,PIN7);
    2752:	82 e0       	ldi	r24, 0x02	; 2
    2754:	67 e0       	ldi	r22, 0x07	; 7
    2756:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
	LED_turnOff(DIO_PORTD,PIN3);
    275a:	83 e0       	ldi	r24, 0x03	; 3
    275c:	63 e0       	ldi	r22, 0x03	; 3
    275e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
}
    2762:	ce 59       	subi	r28, 0x9E	; 158
    2764:	df 4f       	sbci	r29, 0xFF	; 255
    2766:	0f b6       	in	r0, 0x3f	; 63
    2768:	f8 94       	cli
    276a:	de bf       	out	0x3e, r29	; 62
    276c:	0f be       	out	0x3f, r0	; 63
    276e:	cd bf       	out	0x3d, r28	; 61
    2770:	cf 91       	pop	r28
    2772:	df 91       	pop	r29
    2774:	1f 91       	pop	r17
    2776:	0f 91       	pop	r16
    2778:	08 95       	ret

0000277a <ProgramThree>:

void ProgramThree(void)
{
    277a:	0f 93       	push	r16
    277c:	1f 93       	push	r17
    277e:	df 93       	push	r29
    2780:	cf 93       	push	r28
    2782:	cd b7       	in	r28, 0x3d	; 61
    2784:	de b7       	in	r29, 0x3e	; 62
    2786:	c8 5a       	subi	r28, 0xA8	; 168
    2788:	d0 40       	sbci	r29, 0x00	; 0
    278a:	0f b6       	in	r0, 0x3f	; 63
    278c:	f8 94       	cli
    278e:	de bf       	out	0x3e, r29	; 62
    2790:	0f be       	out	0x3f, r0	; 63
    2792:	cd bf       	out	0x3d, r28	; 61
	 LED_turnOn(DIO_PORTC,PIN2);
    2794:	82 e0       	ldi	r24, 0x02	; 2
    2796:	62 e0       	ldi	r22, 0x02	; 2
    2798:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    279c:	fe 01       	movw	r30, r28
    279e:	eb 55       	subi	r30, 0x5B	; 91
    27a0:	ff 4f       	sbci	r31, 0xFF	; 255
    27a2:	80 e0       	ldi	r24, 0x00	; 0
    27a4:	90 e4       	ldi	r25, 0x40	; 64
    27a6:	ac e1       	ldi	r26, 0x1C	; 28
    27a8:	b6 e4       	ldi	r27, 0x46	; 70
    27aa:	80 83       	st	Z, r24
    27ac:	91 83       	std	Z+1, r25	; 0x01
    27ae:	a2 83       	std	Z+2, r26	; 0x02
    27b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27b2:	8e 01       	movw	r16, r28
    27b4:	0f 55       	subi	r16, 0x5F	; 95
    27b6:	1f 4f       	sbci	r17, 0xFF	; 255
    27b8:	fe 01       	movw	r30, r28
    27ba:	eb 55       	subi	r30, 0x5B	; 91
    27bc:	ff 4f       	sbci	r31, 0xFF	; 255
    27be:	60 81       	ld	r22, Z
    27c0:	71 81       	ldd	r23, Z+1	; 0x01
    27c2:	82 81       	ldd	r24, Z+2	; 0x02
    27c4:	93 81       	ldd	r25, Z+3	; 0x03
    27c6:	20 e0       	ldi	r18, 0x00	; 0
    27c8:	30 e0       	ldi	r19, 0x00	; 0
    27ca:	4a e7       	ldi	r20, 0x7A	; 122
    27cc:	53 e4       	ldi	r21, 0x43	; 67
    27ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27d2:	dc 01       	movw	r26, r24
    27d4:	cb 01       	movw	r24, r22
    27d6:	f8 01       	movw	r30, r16
    27d8:	80 83       	st	Z, r24
    27da:	91 83       	std	Z+1, r25	; 0x01
    27dc:	a2 83       	std	Z+2, r26	; 0x02
    27de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27e0:	fe 01       	movw	r30, r28
    27e2:	ef 55       	subi	r30, 0x5F	; 95
    27e4:	ff 4f       	sbci	r31, 0xFF	; 255
    27e6:	60 81       	ld	r22, Z
    27e8:	71 81       	ldd	r23, Z+1	; 0x01
    27ea:	82 81       	ldd	r24, Z+2	; 0x02
    27ec:	93 81       	ldd	r25, Z+3	; 0x03
    27ee:	20 e0       	ldi	r18, 0x00	; 0
    27f0:	30 e0       	ldi	r19, 0x00	; 0
    27f2:	40 e8       	ldi	r20, 0x80	; 128
    27f4:	5f e3       	ldi	r21, 0x3F	; 63
    27f6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    27fa:	88 23       	and	r24, r24
    27fc:	44 f4       	brge	.+16     	; 0x280e <ProgramThree+0x94>
		__ticks = 1;
    27fe:	fe 01       	movw	r30, r28
    2800:	e1 56       	subi	r30, 0x61	; 97
    2802:	ff 4f       	sbci	r31, 0xFF	; 255
    2804:	81 e0       	ldi	r24, 0x01	; 1
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	91 83       	std	Z+1, r25	; 0x01
    280a:	80 83       	st	Z, r24
    280c:	64 c0       	rjmp	.+200    	; 0x28d6 <ProgramThree+0x15c>
	else if (__tmp > 65535)
    280e:	fe 01       	movw	r30, r28
    2810:	ef 55       	subi	r30, 0x5F	; 95
    2812:	ff 4f       	sbci	r31, 0xFF	; 255
    2814:	60 81       	ld	r22, Z
    2816:	71 81       	ldd	r23, Z+1	; 0x01
    2818:	82 81       	ldd	r24, Z+2	; 0x02
    281a:	93 81       	ldd	r25, Z+3	; 0x03
    281c:	20 e0       	ldi	r18, 0x00	; 0
    281e:	3f ef       	ldi	r19, 0xFF	; 255
    2820:	4f e7       	ldi	r20, 0x7F	; 127
    2822:	57 e4       	ldi	r21, 0x47	; 71
    2824:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2828:	18 16       	cp	r1, r24
    282a:	0c f0       	brlt	.+2      	; 0x282e <ProgramThree+0xb4>
    282c:	43 c0       	rjmp	.+134    	; 0x28b4 <ProgramThree+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    282e:	fe 01       	movw	r30, r28
    2830:	eb 55       	subi	r30, 0x5B	; 91
    2832:	ff 4f       	sbci	r31, 0xFF	; 255
    2834:	60 81       	ld	r22, Z
    2836:	71 81       	ldd	r23, Z+1	; 0x01
    2838:	82 81       	ldd	r24, Z+2	; 0x02
    283a:	93 81       	ldd	r25, Z+3	; 0x03
    283c:	20 e0       	ldi	r18, 0x00	; 0
    283e:	30 e0       	ldi	r19, 0x00	; 0
    2840:	40 e2       	ldi	r20, 0x20	; 32
    2842:	51 e4       	ldi	r21, 0x41	; 65
    2844:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2848:	dc 01       	movw	r26, r24
    284a:	cb 01       	movw	r24, r22
    284c:	8e 01       	movw	r16, r28
    284e:	01 56       	subi	r16, 0x61	; 97
    2850:	1f 4f       	sbci	r17, 0xFF	; 255
    2852:	bc 01       	movw	r22, r24
    2854:	cd 01       	movw	r24, r26
    2856:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    285a:	dc 01       	movw	r26, r24
    285c:	cb 01       	movw	r24, r22
    285e:	f8 01       	movw	r30, r16
    2860:	91 83       	std	Z+1, r25	; 0x01
    2862:	80 83       	st	Z, r24
    2864:	1f c0       	rjmp	.+62     	; 0x28a4 <ProgramThree+0x12a>
    2866:	fe 01       	movw	r30, r28
    2868:	e3 56       	subi	r30, 0x63	; 99
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	89 e1       	ldi	r24, 0x19	; 25
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	91 83       	std	Z+1, r25	; 0x01
    2872:	80 83       	st	Z, r24
    2874:	fe 01       	movw	r30, r28
    2876:	e3 56       	subi	r30, 0x63	; 99
    2878:	ff 4f       	sbci	r31, 0xFF	; 255
    287a:	80 81       	ld	r24, Z
    287c:	91 81       	ldd	r25, Z+1	; 0x01
    287e:	01 97       	sbiw	r24, 0x01	; 1
    2880:	f1 f7       	brne	.-4      	; 0x287e <ProgramThree+0x104>
    2882:	fe 01       	movw	r30, r28
    2884:	e3 56       	subi	r30, 0x63	; 99
    2886:	ff 4f       	sbci	r31, 0xFF	; 255
    2888:	91 83       	std	Z+1, r25	; 0x01
    288a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    288c:	de 01       	movw	r26, r28
    288e:	a1 56       	subi	r26, 0x61	; 97
    2890:	bf 4f       	sbci	r27, 0xFF	; 255
    2892:	fe 01       	movw	r30, r28
    2894:	e1 56       	subi	r30, 0x61	; 97
    2896:	ff 4f       	sbci	r31, 0xFF	; 255
    2898:	80 81       	ld	r24, Z
    289a:	91 81       	ldd	r25, Z+1	; 0x01
    289c:	01 97       	sbiw	r24, 0x01	; 1
    289e:	11 96       	adiw	r26, 0x01	; 1
    28a0:	9c 93       	st	X, r25
    28a2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28a4:	fe 01       	movw	r30, r28
    28a6:	e1 56       	subi	r30, 0x61	; 97
    28a8:	ff 4f       	sbci	r31, 0xFF	; 255
    28aa:	80 81       	ld	r24, Z
    28ac:	91 81       	ldd	r25, Z+1	; 0x01
    28ae:	00 97       	sbiw	r24, 0x00	; 0
    28b0:	d1 f6       	brne	.-76     	; 0x2866 <ProgramThree+0xec>
    28b2:	27 c0       	rjmp	.+78     	; 0x2902 <ProgramThree+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28b4:	8e 01       	movw	r16, r28
    28b6:	01 56       	subi	r16, 0x61	; 97
    28b8:	1f 4f       	sbci	r17, 0xFF	; 255
    28ba:	fe 01       	movw	r30, r28
    28bc:	ef 55       	subi	r30, 0x5F	; 95
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	60 81       	ld	r22, Z
    28c2:	71 81       	ldd	r23, Z+1	; 0x01
    28c4:	82 81       	ldd	r24, Z+2	; 0x02
    28c6:	93 81       	ldd	r25, Z+3	; 0x03
    28c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28cc:	dc 01       	movw	r26, r24
    28ce:	cb 01       	movw	r24, r22
    28d0:	f8 01       	movw	r30, r16
    28d2:	91 83       	std	Z+1, r25	; 0x01
    28d4:	80 83       	st	Z, r24
    28d6:	de 01       	movw	r26, r28
    28d8:	a5 56       	subi	r26, 0x65	; 101
    28da:	bf 4f       	sbci	r27, 0xFF	; 255
    28dc:	fe 01       	movw	r30, r28
    28de:	e1 56       	subi	r30, 0x61	; 97
    28e0:	ff 4f       	sbci	r31, 0xFF	; 255
    28e2:	80 81       	ld	r24, Z
    28e4:	91 81       	ldd	r25, Z+1	; 0x01
    28e6:	8d 93       	st	X+, r24
    28e8:	9c 93       	st	X, r25
    28ea:	fe 01       	movw	r30, r28
    28ec:	e5 56       	subi	r30, 0x65	; 101
    28ee:	ff 4f       	sbci	r31, 0xFF	; 255
    28f0:	80 81       	ld	r24, Z
    28f2:	91 81       	ldd	r25, Z+1	; 0x01
    28f4:	01 97       	sbiw	r24, 0x01	; 1
    28f6:	f1 f7       	brne	.-4      	; 0x28f4 <ProgramThree+0x17a>
    28f8:	fe 01       	movw	r30, r28
    28fa:	e5 56       	subi	r30, 0x65	; 101
    28fc:	ff 4f       	sbci	r31, 0xFF	; 255
    28fe:	91 83       	std	Z+1, r25	; 0x01
    2900:	80 83       	st	Z, r24
	_delay_ms(10000);
	LED_turnOn(DIO_PORTC,PIN7);
    2902:	82 e0       	ldi	r24, 0x02	; 2
    2904:	67 e0       	ldi	r22, 0x07	; 7
    2906:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    290a:	fe 01       	movw	r30, r28
    290c:	e9 56       	subi	r30, 0x69	; 105
    290e:	ff 4f       	sbci	r31, 0xFF	; 255
    2910:	80 e0       	ldi	r24, 0x00	; 0
    2912:	90 e4       	ldi	r25, 0x40	; 64
    2914:	ac e1       	ldi	r26, 0x1C	; 28
    2916:	b6 e4       	ldi	r27, 0x46	; 70
    2918:	80 83       	st	Z, r24
    291a:	91 83       	std	Z+1, r25	; 0x01
    291c:	a2 83       	std	Z+2, r26	; 0x02
    291e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2920:	8e 01       	movw	r16, r28
    2922:	0d 56       	subi	r16, 0x6D	; 109
    2924:	1f 4f       	sbci	r17, 0xFF	; 255
    2926:	fe 01       	movw	r30, r28
    2928:	e9 56       	subi	r30, 0x69	; 105
    292a:	ff 4f       	sbci	r31, 0xFF	; 255
    292c:	60 81       	ld	r22, Z
    292e:	71 81       	ldd	r23, Z+1	; 0x01
    2930:	82 81       	ldd	r24, Z+2	; 0x02
    2932:	93 81       	ldd	r25, Z+3	; 0x03
    2934:	20 e0       	ldi	r18, 0x00	; 0
    2936:	30 e0       	ldi	r19, 0x00	; 0
    2938:	4a e7       	ldi	r20, 0x7A	; 122
    293a:	53 e4       	ldi	r21, 0x43	; 67
    293c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2940:	dc 01       	movw	r26, r24
    2942:	cb 01       	movw	r24, r22
    2944:	f8 01       	movw	r30, r16
    2946:	80 83       	st	Z, r24
    2948:	91 83       	std	Z+1, r25	; 0x01
    294a:	a2 83       	std	Z+2, r26	; 0x02
    294c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    294e:	fe 01       	movw	r30, r28
    2950:	ed 56       	subi	r30, 0x6D	; 109
    2952:	ff 4f       	sbci	r31, 0xFF	; 255
    2954:	60 81       	ld	r22, Z
    2956:	71 81       	ldd	r23, Z+1	; 0x01
    2958:	82 81       	ldd	r24, Z+2	; 0x02
    295a:	93 81       	ldd	r25, Z+3	; 0x03
    295c:	20 e0       	ldi	r18, 0x00	; 0
    295e:	30 e0       	ldi	r19, 0x00	; 0
    2960:	40 e8       	ldi	r20, 0x80	; 128
    2962:	5f e3       	ldi	r21, 0x3F	; 63
    2964:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2968:	88 23       	and	r24, r24
    296a:	44 f4       	brge	.+16     	; 0x297c <ProgramThree+0x202>
		__ticks = 1;
    296c:	fe 01       	movw	r30, r28
    296e:	ef 56       	subi	r30, 0x6F	; 111
    2970:	ff 4f       	sbci	r31, 0xFF	; 255
    2972:	81 e0       	ldi	r24, 0x01	; 1
    2974:	90 e0       	ldi	r25, 0x00	; 0
    2976:	91 83       	std	Z+1, r25	; 0x01
    2978:	80 83       	st	Z, r24
    297a:	64 c0       	rjmp	.+200    	; 0x2a44 <ProgramThree+0x2ca>
	else if (__tmp > 65535)
    297c:	fe 01       	movw	r30, r28
    297e:	ed 56       	subi	r30, 0x6D	; 109
    2980:	ff 4f       	sbci	r31, 0xFF	; 255
    2982:	60 81       	ld	r22, Z
    2984:	71 81       	ldd	r23, Z+1	; 0x01
    2986:	82 81       	ldd	r24, Z+2	; 0x02
    2988:	93 81       	ldd	r25, Z+3	; 0x03
    298a:	20 e0       	ldi	r18, 0x00	; 0
    298c:	3f ef       	ldi	r19, 0xFF	; 255
    298e:	4f e7       	ldi	r20, 0x7F	; 127
    2990:	57 e4       	ldi	r21, 0x47	; 71
    2992:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2996:	18 16       	cp	r1, r24
    2998:	0c f0       	brlt	.+2      	; 0x299c <ProgramThree+0x222>
    299a:	43 c0       	rjmp	.+134    	; 0x2a22 <ProgramThree+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    299c:	fe 01       	movw	r30, r28
    299e:	e9 56       	subi	r30, 0x69	; 105
    29a0:	ff 4f       	sbci	r31, 0xFF	; 255
    29a2:	60 81       	ld	r22, Z
    29a4:	71 81       	ldd	r23, Z+1	; 0x01
    29a6:	82 81       	ldd	r24, Z+2	; 0x02
    29a8:	93 81       	ldd	r25, Z+3	; 0x03
    29aa:	20 e0       	ldi	r18, 0x00	; 0
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	40 e2       	ldi	r20, 0x20	; 32
    29b0:	51 e4       	ldi	r21, 0x41	; 65
    29b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29b6:	dc 01       	movw	r26, r24
    29b8:	cb 01       	movw	r24, r22
    29ba:	8e 01       	movw	r16, r28
    29bc:	0f 56       	subi	r16, 0x6F	; 111
    29be:	1f 4f       	sbci	r17, 0xFF	; 255
    29c0:	bc 01       	movw	r22, r24
    29c2:	cd 01       	movw	r24, r26
    29c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29c8:	dc 01       	movw	r26, r24
    29ca:	cb 01       	movw	r24, r22
    29cc:	f8 01       	movw	r30, r16
    29ce:	91 83       	std	Z+1, r25	; 0x01
    29d0:	80 83       	st	Z, r24
    29d2:	1f c0       	rjmp	.+62     	; 0x2a12 <ProgramThree+0x298>
    29d4:	fe 01       	movw	r30, r28
    29d6:	e1 57       	subi	r30, 0x71	; 113
    29d8:	ff 4f       	sbci	r31, 0xFF	; 255
    29da:	89 e1       	ldi	r24, 0x19	; 25
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	91 83       	std	Z+1, r25	; 0x01
    29e0:	80 83       	st	Z, r24
    29e2:	fe 01       	movw	r30, r28
    29e4:	e1 57       	subi	r30, 0x71	; 113
    29e6:	ff 4f       	sbci	r31, 0xFF	; 255
    29e8:	80 81       	ld	r24, Z
    29ea:	91 81       	ldd	r25, Z+1	; 0x01
    29ec:	01 97       	sbiw	r24, 0x01	; 1
    29ee:	f1 f7       	brne	.-4      	; 0x29ec <ProgramThree+0x272>
    29f0:	fe 01       	movw	r30, r28
    29f2:	e1 57       	subi	r30, 0x71	; 113
    29f4:	ff 4f       	sbci	r31, 0xFF	; 255
    29f6:	91 83       	std	Z+1, r25	; 0x01
    29f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29fa:	de 01       	movw	r26, r28
    29fc:	af 56       	subi	r26, 0x6F	; 111
    29fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2a00:	fe 01       	movw	r30, r28
    2a02:	ef 56       	subi	r30, 0x6F	; 111
    2a04:	ff 4f       	sbci	r31, 0xFF	; 255
    2a06:	80 81       	ld	r24, Z
    2a08:	91 81       	ldd	r25, Z+1	; 0x01
    2a0a:	01 97       	sbiw	r24, 0x01	; 1
    2a0c:	11 96       	adiw	r26, 0x01	; 1
    2a0e:	9c 93       	st	X, r25
    2a10:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a12:	fe 01       	movw	r30, r28
    2a14:	ef 56       	subi	r30, 0x6F	; 111
    2a16:	ff 4f       	sbci	r31, 0xFF	; 255
    2a18:	80 81       	ld	r24, Z
    2a1a:	91 81       	ldd	r25, Z+1	; 0x01
    2a1c:	00 97       	sbiw	r24, 0x00	; 0
    2a1e:	d1 f6       	brne	.-76     	; 0x29d4 <ProgramThree+0x25a>
    2a20:	27 c0       	rjmp	.+78     	; 0x2a70 <ProgramThree+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a22:	8e 01       	movw	r16, r28
    2a24:	0f 56       	subi	r16, 0x6F	; 111
    2a26:	1f 4f       	sbci	r17, 0xFF	; 255
    2a28:	fe 01       	movw	r30, r28
    2a2a:	ed 56       	subi	r30, 0x6D	; 109
    2a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2e:	60 81       	ld	r22, Z
    2a30:	71 81       	ldd	r23, Z+1	; 0x01
    2a32:	82 81       	ldd	r24, Z+2	; 0x02
    2a34:	93 81       	ldd	r25, Z+3	; 0x03
    2a36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a3a:	dc 01       	movw	r26, r24
    2a3c:	cb 01       	movw	r24, r22
    2a3e:	f8 01       	movw	r30, r16
    2a40:	91 83       	std	Z+1, r25	; 0x01
    2a42:	80 83       	st	Z, r24
    2a44:	de 01       	movw	r26, r28
    2a46:	a3 57       	subi	r26, 0x73	; 115
    2a48:	bf 4f       	sbci	r27, 0xFF	; 255
    2a4a:	fe 01       	movw	r30, r28
    2a4c:	ef 56       	subi	r30, 0x6F	; 111
    2a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a50:	80 81       	ld	r24, Z
    2a52:	91 81       	ldd	r25, Z+1	; 0x01
    2a54:	8d 93       	st	X+, r24
    2a56:	9c 93       	st	X, r25
    2a58:	fe 01       	movw	r30, r28
    2a5a:	e3 57       	subi	r30, 0x73	; 115
    2a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5e:	80 81       	ld	r24, Z
    2a60:	91 81       	ldd	r25, Z+1	; 0x01
    2a62:	01 97       	sbiw	r24, 0x01	; 1
    2a64:	f1 f7       	brne	.-4      	; 0x2a62 <ProgramThree+0x2e8>
    2a66:	fe 01       	movw	r30, r28
    2a68:	e3 57       	subi	r30, 0x73	; 115
    2a6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6c:	91 83       	std	Z+1, r25	; 0x01
    2a6e:	80 83       	st	Z, r24
	_delay_ms(10000);
	LED_turnOn(DIO_PORTD,PIN3);
    2a70:	83 e0       	ldi	r24, 0x03	; 3
    2a72:	63 e0       	ldi	r22, 0x03	; 3
    2a74:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    2a78:	fe 01       	movw	r30, r28
    2a7a:	e7 57       	subi	r30, 0x77	; 119
    2a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7e:	80 e0       	ldi	r24, 0x00	; 0
    2a80:	90 e4       	ldi	r25, 0x40	; 64
    2a82:	ac e1       	ldi	r26, 0x1C	; 28
    2a84:	b6 e4       	ldi	r27, 0x46	; 70
    2a86:	80 83       	st	Z, r24
    2a88:	91 83       	std	Z+1, r25	; 0x01
    2a8a:	a2 83       	std	Z+2, r26	; 0x02
    2a8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a8e:	8e 01       	movw	r16, r28
    2a90:	0b 57       	subi	r16, 0x7B	; 123
    2a92:	1f 4f       	sbci	r17, 0xFF	; 255
    2a94:	fe 01       	movw	r30, r28
    2a96:	e7 57       	subi	r30, 0x77	; 119
    2a98:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9a:	60 81       	ld	r22, Z
    2a9c:	71 81       	ldd	r23, Z+1	; 0x01
    2a9e:	82 81       	ldd	r24, Z+2	; 0x02
    2aa0:	93 81       	ldd	r25, Z+3	; 0x03
    2aa2:	20 e0       	ldi	r18, 0x00	; 0
    2aa4:	30 e0       	ldi	r19, 0x00	; 0
    2aa6:	4a e7       	ldi	r20, 0x7A	; 122
    2aa8:	53 e4       	ldi	r21, 0x43	; 67
    2aaa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2aae:	dc 01       	movw	r26, r24
    2ab0:	cb 01       	movw	r24, r22
    2ab2:	f8 01       	movw	r30, r16
    2ab4:	80 83       	st	Z, r24
    2ab6:	91 83       	std	Z+1, r25	; 0x01
    2ab8:	a2 83       	std	Z+2, r26	; 0x02
    2aba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2abc:	fe 01       	movw	r30, r28
    2abe:	eb 57       	subi	r30, 0x7B	; 123
    2ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac2:	60 81       	ld	r22, Z
    2ac4:	71 81       	ldd	r23, Z+1	; 0x01
    2ac6:	82 81       	ldd	r24, Z+2	; 0x02
    2ac8:	93 81       	ldd	r25, Z+3	; 0x03
    2aca:	20 e0       	ldi	r18, 0x00	; 0
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	40 e8       	ldi	r20, 0x80	; 128
    2ad0:	5f e3       	ldi	r21, 0x3F	; 63
    2ad2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2ad6:	88 23       	and	r24, r24
    2ad8:	44 f4       	brge	.+16     	; 0x2aea <ProgramThree+0x370>
		__ticks = 1;
    2ada:	fe 01       	movw	r30, r28
    2adc:	ed 57       	subi	r30, 0x7D	; 125
    2ade:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae0:	81 e0       	ldi	r24, 0x01	; 1
    2ae2:	90 e0       	ldi	r25, 0x00	; 0
    2ae4:	91 83       	std	Z+1, r25	; 0x01
    2ae6:	80 83       	st	Z, r24
    2ae8:	64 c0       	rjmp	.+200    	; 0x2bb2 <ProgramThree+0x438>
	else if (__tmp > 65535)
    2aea:	fe 01       	movw	r30, r28
    2aec:	eb 57       	subi	r30, 0x7B	; 123
    2aee:	ff 4f       	sbci	r31, 0xFF	; 255
    2af0:	60 81       	ld	r22, Z
    2af2:	71 81       	ldd	r23, Z+1	; 0x01
    2af4:	82 81       	ldd	r24, Z+2	; 0x02
    2af6:	93 81       	ldd	r25, Z+3	; 0x03
    2af8:	20 e0       	ldi	r18, 0x00	; 0
    2afa:	3f ef       	ldi	r19, 0xFF	; 255
    2afc:	4f e7       	ldi	r20, 0x7F	; 127
    2afe:	57 e4       	ldi	r21, 0x47	; 71
    2b00:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2b04:	18 16       	cp	r1, r24
    2b06:	0c f0       	brlt	.+2      	; 0x2b0a <ProgramThree+0x390>
    2b08:	43 c0       	rjmp	.+134    	; 0x2b90 <ProgramThree+0x416>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b0a:	fe 01       	movw	r30, r28
    2b0c:	e7 57       	subi	r30, 0x77	; 119
    2b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b10:	60 81       	ld	r22, Z
    2b12:	71 81       	ldd	r23, Z+1	; 0x01
    2b14:	82 81       	ldd	r24, Z+2	; 0x02
    2b16:	93 81       	ldd	r25, Z+3	; 0x03
    2b18:	20 e0       	ldi	r18, 0x00	; 0
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	40 e2       	ldi	r20, 0x20	; 32
    2b1e:	51 e4       	ldi	r21, 0x41	; 65
    2b20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b24:	dc 01       	movw	r26, r24
    2b26:	cb 01       	movw	r24, r22
    2b28:	8e 01       	movw	r16, r28
    2b2a:	0d 57       	subi	r16, 0x7D	; 125
    2b2c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b2e:	bc 01       	movw	r22, r24
    2b30:	cd 01       	movw	r24, r26
    2b32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b36:	dc 01       	movw	r26, r24
    2b38:	cb 01       	movw	r24, r22
    2b3a:	f8 01       	movw	r30, r16
    2b3c:	91 83       	std	Z+1, r25	; 0x01
    2b3e:	80 83       	st	Z, r24
    2b40:	1f c0       	rjmp	.+62     	; 0x2b80 <ProgramThree+0x406>
    2b42:	fe 01       	movw	r30, r28
    2b44:	ef 57       	subi	r30, 0x7F	; 127
    2b46:	ff 4f       	sbci	r31, 0xFF	; 255
    2b48:	89 e1       	ldi	r24, 0x19	; 25
    2b4a:	90 e0       	ldi	r25, 0x00	; 0
    2b4c:	91 83       	std	Z+1, r25	; 0x01
    2b4e:	80 83       	st	Z, r24
    2b50:	fe 01       	movw	r30, r28
    2b52:	ef 57       	subi	r30, 0x7F	; 127
    2b54:	ff 4f       	sbci	r31, 0xFF	; 255
    2b56:	80 81       	ld	r24, Z
    2b58:	91 81       	ldd	r25, Z+1	; 0x01
    2b5a:	01 97       	sbiw	r24, 0x01	; 1
    2b5c:	f1 f7       	brne	.-4      	; 0x2b5a <ProgramThree+0x3e0>
    2b5e:	fe 01       	movw	r30, r28
    2b60:	ef 57       	subi	r30, 0x7F	; 127
    2b62:	ff 4f       	sbci	r31, 0xFF	; 255
    2b64:	91 83       	std	Z+1, r25	; 0x01
    2b66:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b68:	de 01       	movw	r26, r28
    2b6a:	ad 57       	subi	r26, 0x7D	; 125
    2b6c:	bf 4f       	sbci	r27, 0xFF	; 255
    2b6e:	fe 01       	movw	r30, r28
    2b70:	ed 57       	subi	r30, 0x7D	; 125
    2b72:	ff 4f       	sbci	r31, 0xFF	; 255
    2b74:	80 81       	ld	r24, Z
    2b76:	91 81       	ldd	r25, Z+1	; 0x01
    2b78:	01 97       	sbiw	r24, 0x01	; 1
    2b7a:	11 96       	adiw	r26, 0x01	; 1
    2b7c:	9c 93       	st	X, r25
    2b7e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b80:	fe 01       	movw	r30, r28
    2b82:	ed 57       	subi	r30, 0x7D	; 125
    2b84:	ff 4f       	sbci	r31, 0xFF	; 255
    2b86:	80 81       	ld	r24, Z
    2b88:	91 81       	ldd	r25, Z+1	; 0x01
    2b8a:	00 97       	sbiw	r24, 0x00	; 0
    2b8c:	d1 f6       	brne	.-76     	; 0x2b42 <ProgramThree+0x3c8>
    2b8e:	27 c0       	rjmp	.+78     	; 0x2bde <ProgramThree+0x464>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b90:	8e 01       	movw	r16, r28
    2b92:	0d 57       	subi	r16, 0x7D	; 125
    2b94:	1f 4f       	sbci	r17, 0xFF	; 255
    2b96:	fe 01       	movw	r30, r28
    2b98:	eb 57       	subi	r30, 0x7B	; 123
    2b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9c:	60 81       	ld	r22, Z
    2b9e:	71 81       	ldd	r23, Z+1	; 0x01
    2ba0:	82 81       	ldd	r24, Z+2	; 0x02
    2ba2:	93 81       	ldd	r25, Z+3	; 0x03
    2ba4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ba8:	dc 01       	movw	r26, r24
    2baa:	cb 01       	movw	r24, r22
    2bac:	f8 01       	movw	r30, r16
    2bae:	91 83       	std	Z+1, r25	; 0x01
    2bb0:	80 83       	st	Z, r24
    2bb2:	de 01       	movw	r26, r28
    2bb4:	a1 58       	subi	r26, 0x81	; 129
    2bb6:	bf 4f       	sbci	r27, 0xFF	; 255
    2bb8:	fe 01       	movw	r30, r28
    2bba:	ed 57       	subi	r30, 0x7D	; 125
    2bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbe:	80 81       	ld	r24, Z
    2bc0:	91 81       	ldd	r25, Z+1	; 0x01
    2bc2:	8d 93       	st	X+, r24
    2bc4:	9c 93       	st	X, r25
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	e1 58       	subi	r30, 0x81	; 129
    2bca:	ff 4f       	sbci	r31, 0xFF	; 255
    2bcc:	80 81       	ld	r24, Z
    2bce:	91 81       	ldd	r25, Z+1	; 0x01
    2bd0:	01 97       	sbiw	r24, 0x01	; 1
    2bd2:	f1 f7       	brne	.-4      	; 0x2bd0 <ProgramThree+0x456>
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	e1 58       	subi	r30, 0x81	; 129
    2bd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bda:	91 83       	std	Z+1, r25	; 0x01
    2bdc:	80 83       	st	Z, r24
	_delay_ms(10000);
	LED_turnOff(DIO_PORTC,PIN2);
    2bde:	82 e0       	ldi	r24, 0x02	; 2
    2be0:	62 e0       	ldi	r22, 0x02	; 2
    2be2:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    2be6:	fe 01       	movw	r30, r28
    2be8:	e5 58       	subi	r30, 0x85	; 133
    2bea:	ff 4f       	sbci	r31, 0xFF	; 255
    2bec:	80 e0       	ldi	r24, 0x00	; 0
    2bee:	90 e4       	ldi	r25, 0x40	; 64
    2bf0:	ac e1       	ldi	r26, 0x1C	; 28
    2bf2:	b6 e4       	ldi	r27, 0x46	; 70
    2bf4:	80 83       	st	Z, r24
    2bf6:	91 83       	std	Z+1, r25	; 0x01
    2bf8:	a2 83       	std	Z+2, r26	; 0x02
    2bfa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bfc:	8e 01       	movw	r16, r28
    2bfe:	09 58       	subi	r16, 0x89	; 137
    2c00:	1f 4f       	sbci	r17, 0xFF	; 255
    2c02:	fe 01       	movw	r30, r28
    2c04:	e5 58       	subi	r30, 0x85	; 133
    2c06:	ff 4f       	sbci	r31, 0xFF	; 255
    2c08:	60 81       	ld	r22, Z
    2c0a:	71 81       	ldd	r23, Z+1	; 0x01
    2c0c:	82 81       	ldd	r24, Z+2	; 0x02
    2c0e:	93 81       	ldd	r25, Z+3	; 0x03
    2c10:	20 e0       	ldi	r18, 0x00	; 0
    2c12:	30 e0       	ldi	r19, 0x00	; 0
    2c14:	4a e7       	ldi	r20, 0x7A	; 122
    2c16:	53 e4       	ldi	r21, 0x43	; 67
    2c18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c1c:	dc 01       	movw	r26, r24
    2c1e:	cb 01       	movw	r24, r22
    2c20:	f8 01       	movw	r30, r16
    2c22:	80 83       	st	Z, r24
    2c24:	91 83       	std	Z+1, r25	; 0x01
    2c26:	a2 83       	std	Z+2, r26	; 0x02
    2c28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c2a:	fe 01       	movw	r30, r28
    2c2c:	e9 58       	subi	r30, 0x89	; 137
    2c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c30:	60 81       	ld	r22, Z
    2c32:	71 81       	ldd	r23, Z+1	; 0x01
    2c34:	82 81       	ldd	r24, Z+2	; 0x02
    2c36:	93 81       	ldd	r25, Z+3	; 0x03
    2c38:	20 e0       	ldi	r18, 0x00	; 0
    2c3a:	30 e0       	ldi	r19, 0x00	; 0
    2c3c:	40 e8       	ldi	r20, 0x80	; 128
    2c3e:	5f e3       	ldi	r21, 0x3F	; 63
    2c40:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2c44:	88 23       	and	r24, r24
    2c46:	44 f4       	brge	.+16     	; 0x2c58 <ProgramThree+0x4de>
		__ticks = 1;
    2c48:	fe 01       	movw	r30, r28
    2c4a:	eb 58       	subi	r30, 0x8B	; 139
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	81 e0       	ldi	r24, 0x01	; 1
    2c50:	90 e0       	ldi	r25, 0x00	; 0
    2c52:	91 83       	std	Z+1, r25	; 0x01
    2c54:	80 83       	st	Z, r24
    2c56:	64 c0       	rjmp	.+200    	; 0x2d20 <ProgramThree+0x5a6>
	else if (__tmp > 65535)
    2c58:	fe 01       	movw	r30, r28
    2c5a:	e9 58       	subi	r30, 0x89	; 137
    2c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5e:	60 81       	ld	r22, Z
    2c60:	71 81       	ldd	r23, Z+1	; 0x01
    2c62:	82 81       	ldd	r24, Z+2	; 0x02
    2c64:	93 81       	ldd	r25, Z+3	; 0x03
    2c66:	20 e0       	ldi	r18, 0x00	; 0
    2c68:	3f ef       	ldi	r19, 0xFF	; 255
    2c6a:	4f e7       	ldi	r20, 0x7F	; 127
    2c6c:	57 e4       	ldi	r21, 0x47	; 71
    2c6e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2c72:	18 16       	cp	r1, r24
    2c74:	0c f0       	brlt	.+2      	; 0x2c78 <ProgramThree+0x4fe>
    2c76:	43 c0       	rjmp	.+134    	; 0x2cfe <ProgramThree+0x584>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c78:	fe 01       	movw	r30, r28
    2c7a:	e5 58       	subi	r30, 0x85	; 133
    2c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7e:	60 81       	ld	r22, Z
    2c80:	71 81       	ldd	r23, Z+1	; 0x01
    2c82:	82 81       	ldd	r24, Z+2	; 0x02
    2c84:	93 81       	ldd	r25, Z+3	; 0x03
    2c86:	20 e0       	ldi	r18, 0x00	; 0
    2c88:	30 e0       	ldi	r19, 0x00	; 0
    2c8a:	40 e2       	ldi	r20, 0x20	; 32
    2c8c:	51 e4       	ldi	r21, 0x41	; 65
    2c8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c92:	dc 01       	movw	r26, r24
    2c94:	cb 01       	movw	r24, r22
    2c96:	8e 01       	movw	r16, r28
    2c98:	0b 58       	subi	r16, 0x8B	; 139
    2c9a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c9c:	bc 01       	movw	r22, r24
    2c9e:	cd 01       	movw	r24, r26
    2ca0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	cb 01       	movw	r24, r22
    2ca8:	f8 01       	movw	r30, r16
    2caa:	91 83       	std	Z+1, r25	; 0x01
    2cac:	80 83       	st	Z, r24
    2cae:	1f c0       	rjmp	.+62     	; 0x2cee <ProgramThree+0x574>
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	ed 58       	subi	r30, 0x8D	; 141
    2cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb6:	89 e1       	ldi	r24, 0x19	; 25
    2cb8:	90 e0       	ldi	r25, 0x00	; 0
    2cba:	91 83       	std	Z+1, r25	; 0x01
    2cbc:	80 83       	st	Z, r24
    2cbe:	fe 01       	movw	r30, r28
    2cc0:	ed 58       	subi	r30, 0x8D	; 141
    2cc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc4:	80 81       	ld	r24, Z
    2cc6:	91 81       	ldd	r25, Z+1	; 0x01
    2cc8:	01 97       	sbiw	r24, 0x01	; 1
    2cca:	f1 f7       	brne	.-4      	; 0x2cc8 <ProgramThree+0x54e>
    2ccc:	fe 01       	movw	r30, r28
    2cce:	ed 58       	subi	r30, 0x8D	; 141
    2cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd2:	91 83       	std	Z+1, r25	; 0x01
    2cd4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cd6:	de 01       	movw	r26, r28
    2cd8:	ab 58       	subi	r26, 0x8B	; 139
    2cda:	bf 4f       	sbci	r27, 0xFF	; 255
    2cdc:	fe 01       	movw	r30, r28
    2cde:	eb 58       	subi	r30, 0x8B	; 139
    2ce0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce2:	80 81       	ld	r24, Z
    2ce4:	91 81       	ldd	r25, Z+1	; 0x01
    2ce6:	01 97       	sbiw	r24, 0x01	; 1
    2ce8:	11 96       	adiw	r26, 0x01	; 1
    2cea:	9c 93       	st	X, r25
    2cec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cee:	fe 01       	movw	r30, r28
    2cf0:	eb 58       	subi	r30, 0x8B	; 139
    2cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf4:	80 81       	ld	r24, Z
    2cf6:	91 81       	ldd	r25, Z+1	; 0x01
    2cf8:	00 97       	sbiw	r24, 0x00	; 0
    2cfa:	d1 f6       	brne	.-76     	; 0x2cb0 <ProgramThree+0x536>
    2cfc:	27 c0       	rjmp	.+78     	; 0x2d4c <ProgramThree+0x5d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cfe:	8e 01       	movw	r16, r28
    2d00:	0b 58       	subi	r16, 0x8B	; 139
    2d02:	1f 4f       	sbci	r17, 0xFF	; 255
    2d04:	fe 01       	movw	r30, r28
    2d06:	e9 58       	subi	r30, 0x89	; 137
    2d08:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0a:	60 81       	ld	r22, Z
    2d0c:	71 81       	ldd	r23, Z+1	; 0x01
    2d0e:	82 81       	ldd	r24, Z+2	; 0x02
    2d10:	93 81       	ldd	r25, Z+3	; 0x03
    2d12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d16:	dc 01       	movw	r26, r24
    2d18:	cb 01       	movw	r24, r22
    2d1a:	f8 01       	movw	r30, r16
    2d1c:	91 83       	std	Z+1, r25	; 0x01
    2d1e:	80 83       	st	Z, r24
    2d20:	de 01       	movw	r26, r28
    2d22:	af 58       	subi	r26, 0x8F	; 143
    2d24:	bf 4f       	sbci	r27, 0xFF	; 255
    2d26:	fe 01       	movw	r30, r28
    2d28:	eb 58       	subi	r30, 0x8B	; 139
    2d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d2c:	80 81       	ld	r24, Z
    2d2e:	91 81       	ldd	r25, Z+1	; 0x01
    2d30:	8d 93       	st	X+, r24
    2d32:	9c 93       	st	X, r25
    2d34:	fe 01       	movw	r30, r28
    2d36:	ef 58       	subi	r30, 0x8F	; 143
    2d38:	ff 4f       	sbci	r31, 0xFF	; 255
    2d3a:	80 81       	ld	r24, Z
    2d3c:	91 81       	ldd	r25, Z+1	; 0x01
    2d3e:	01 97       	sbiw	r24, 0x01	; 1
    2d40:	f1 f7       	brne	.-4      	; 0x2d3e <ProgramThree+0x5c4>
    2d42:	fe 01       	movw	r30, r28
    2d44:	ef 58       	subi	r30, 0x8F	; 143
    2d46:	ff 4f       	sbci	r31, 0xFF	; 255
    2d48:	91 83       	std	Z+1, r25	; 0x01
    2d4a:	80 83       	st	Z, r24
	_delay_ms(10000);
	LED_turnOff(DIO_PORTC,PIN7);
    2d4c:	82 e0       	ldi	r24, 0x02	; 2
    2d4e:	67 e0       	ldi	r22, 0x07	; 7
    2d50:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    2d54:	fe 01       	movw	r30, r28
    2d56:	e3 59       	subi	r30, 0x93	; 147
    2d58:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5a:	80 e0       	ldi	r24, 0x00	; 0
    2d5c:	90 e4       	ldi	r25, 0x40	; 64
    2d5e:	ac e1       	ldi	r26, 0x1C	; 28
    2d60:	b6 e4       	ldi	r27, 0x46	; 70
    2d62:	80 83       	st	Z, r24
    2d64:	91 83       	std	Z+1, r25	; 0x01
    2d66:	a2 83       	std	Z+2, r26	; 0x02
    2d68:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d6a:	8e 01       	movw	r16, r28
    2d6c:	07 59       	subi	r16, 0x97	; 151
    2d6e:	1f 4f       	sbci	r17, 0xFF	; 255
    2d70:	fe 01       	movw	r30, r28
    2d72:	e3 59       	subi	r30, 0x93	; 147
    2d74:	ff 4f       	sbci	r31, 0xFF	; 255
    2d76:	60 81       	ld	r22, Z
    2d78:	71 81       	ldd	r23, Z+1	; 0x01
    2d7a:	82 81       	ldd	r24, Z+2	; 0x02
    2d7c:	93 81       	ldd	r25, Z+3	; 0x03
    2d7e:	20 e0       	ldi	r18, 0x00	; 0
    2d80:	30 e0       	ldi	r19, 0x00	; 0
    2d82:	4a e7       	ldi	r20, 0x7A	; 122
    2d84:	53 e4       	ldi	r21, 0x43	; 67
    2d86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d8a:	dc 01       	movw	r26, r24
    2d8c:	cb 01       	movw	r24, r22
    2d8e:	f8 01       	movw	r30, r16
    2d90:	80 83       	st	Z, r24
    2d92:	91 83       	std	Z+1, r25	; 0x01
    2d94:	a2 83       	std	Z+2, r26	; 0x02
    2d96:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d98:	fe 01       	movw	r30, r28
    2d9a:	e7 59       	subi	r30, 0x97	; 151
    2d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9e:	60 81       	ld	r22, Z
    2da0:	71 81       	ldd	r23, Z+1	; 0x01
    2da2:	82 81       	ldd	r24, Z+2	; 0x02
    2da4:	93 81       	ldd	r25, Z+3	; 0x03
    2da6:	20 e0       	ldi	r18, 0x00	; 0
    2da8:	30 e0       	ldi	r19, 0x00	; 0
    2daa:	40 e8       	ldi	r20, 0x80	; 128
    2dac:	5f e3       	ldi	r21, 0x3F	; 63
    2dae:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2db2:	88 23       	and	r24, r24
    2db4:	44 f4       	brge	.+16     	; 0x2dc6 <ProgramThree+0x64c>
		__ticks = 1;
    2db6:	fe 01       	movw	r30, r28
    2db8:	e9 59       	subi	r30, 0x99	; 153
    2dba:	ff 4f       	sbci	r31, 0xFF	; 255
    2dbc:	81 e0       	ldi	r24, 0x01	; 1
    2dbe:	90 e0       	ldi	r25, 0x00	; 0
    2dc0:	91 83       	std	Z+1, r25	; 0x01
    2dc2:	80 83       	st	Z, r24
    2dc4:	64 c0       	rjmp	.+200    	; 0x2e8e <ProgramThree+0x714>
	else if (__tmp > 65535)
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	e7 59       	subi	r30, 0x97	; 151
    2dca:	ff 4f       	sbci	r31, 0xFF	; 255
    2dcc:	60 81       	ld	r22, Z
    2dce:	71 81       	ldd	r23, Z+1	; 0x01
    2dd0:	82 81       	ldd	r24, Z+2	; 0x02
    2dd2:	93 81       	ldd	r25, Z+3	; 0x03
    2dd4:	20 e0       	ldi	r18, 0x00	; 0
    2dd6:	3f ef       	ldi	r19, 0xFF	; 255
    2dd8:	4f e7       	ldi	r20, 0x7F	; 127
    2dda:	57 e4       	ldi	r21, 0x47	; 71
    2ddc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2de0:	18 16       	cp	r1, r24
    2de2:	0c f0       	brlt	.+2      	; 0x2de6 <ProgramThree+0x66c>
    2de4:	43 c0       	rjmp	.+134    	; 0x2e6c <ProgramThree+0x6f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2de6:	fe 01       	movw	r30, r28
    2de8:	e3 59       	subi	r30, 0x93	; 147
    2dea:	ff 4f       	sbci	r31, 0xFF	; 255
    2dec:	60 81       	ld	r22, Z
    2dee:	71 81       	ldd	r23, Z+1	; 0x01
    2df0:	82 81       	ldd	r24, Z+2	; 0x02
    2df2:	93 81       	ldd	r25, Z+3	; 0x03
    2df4:	20 e0       	ldi	r18, 0x00	; 0
    2df6:	30 e0       	ldi	r19, 0x00	; 0
    2df8:	40 e2       	ldi	r20, 0x20	; 32
    2dfa:	51 e4       	ldi	r21, 0x41	; 65
    2dfc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e00:	dc 01       	movw	r26, r24
    2e02:	cb 01       	movw	r24, r22
    2e04:	8e 01       	movw	r16, r28
    2e06:	09 59       	subi	r16, 0x99	; 153
    2e08:	1f 4f       	sbci	r17, 0xFF	; 255
    2e0a:	bc 01       	movw	r22, r24
    2e0c:	cd 01       	movw	r24, r26
    2e0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e12:	dc 01       	movw	r26, r24
    2e14:	cb 01       	movw	r24, r22
    2e16:	f8 01       	movw	r30, r16
    2e18:	91 83       	std	Z+1, r25	; 0x01
    2e1a:	80 83       	st	Z, r24
    2e1c:	1f c0       	rjmp	.+62     	; 0x2e5c <ProgramThree+0x6e2>
    2e1e:	fe 01       	movw	r30, r28
    2e20:	eb 59       	subi	r30, 0x9B	; 155
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	89 e1       	ldi	r24, 0x19	; 25
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	91 83       	std	Z+1, r25	; 0x01
    2e2a:	80 83       	st	Z, r24
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	eb 59       	subi	r30, 0x9B	; 155
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	80 81       	ld	r24, Z
    2e34:	91 81       	ldd	r25, Z+1	; 0x01
    2e36:	01 97       	sbiw	r24, 0x01	; 1
    2e38:	f1 f7       	brne	.-4      	; 0x2e36 <ProgramThree+0x6bc>
    2e3a:	fe 01       	movw	r30, r28
    2e3c:	eb 59       	subi	r30, 0x9B	; 155
    2e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e40:	91 83       	std	Z+1, r25	; 0x01
    2e42:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e44:	de 01       	movw	r26, r28
    2e46:	a9 59       	subi	r26, 0x99	; 153
    2e48:	bf 4f       	sbci	r27, 0xFF	; 255
    2e4a:	fe 01       	movw	r30, r28
    2e4c:	e9 59       	subi	r30, 0x99	; 153
    2e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e50:	80 81       	ld	r24, Z
    2e52:	91 81       	ldd	r25, Z+1	; 0x01
    2e54:	01 97       	sbiw	r24, 0x01	; 1
    2e56:	11 96       	adiw	r26, 0x01	; 1
    2e58:	9c 93       	st	X, r25
    2e5a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e5c:	fe 01       	movw	r30, r28
    2e5e:	e9 59       	subi	r30, 0x99	; 153
    2e60:	ff 4f       	sbci	r31, 0xFF	; 255
    2e62:	80 81       	ld	r24, Z
    2e64:	91 81       	ldd	r25, Z+1	; 0x01
    2e66:	00 97       	sbiw	r24, 0x00	; 0
    2e68:	d1 f6       	brne	.-76     	; 0x2e1e <ProgramThree+0x6a4>
    2e6a:	27 c0       	rjmp	.+78     	; 0x2eba <ProgramThree+0x740>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e6c:	8e 01       	movw	r16, r28
    2e6e:	09 59       	subi	r16, 0x99	; 153
    2e70:	1f 4f       	sbci	r17, 0xFF	; 255
    2e72:	fe 01       	movw	r30, r28
    2e74:	e7 59       	subi	r30, 0x97	; 151
    2e76:	ff 4f       	sbci	r31, 0xFF	; 255
    2e78:	60 81       	ld	r22, Z
    2e7a:	71 81       	ldd	r23, Z+1	; 0x01
    2e7c:	82 81       	ldd	r24, Z+2	; 0x02
    2e7e:	93 81       	ldd	r25, Z+3	; 0x03
    2e80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e84:	dc 01       	movw	r26, r24
    2e86:	cb 01       	movw	r24, r22
    2e88:	f8 01       	movw	r30, r16
    2e8a:	91 83       	std	Z+1, r25	; 0x01
    2e8c:	80 83       	st	Z, r24
    2e8e:	de 01       	movw	r26, r28
    2e90:	ad 59       	subi	r26, 0x9D	; 157
    2e92:	bf 4f       	sbci	r27, 0xFF	; 255
    2e94:	fe 01       	movw	r30, r28
    2e96:	e9 59       	subi	r30, 0x99	; 153
    2e98:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9a:	80 81       	ld	r24, Z
    2e9c:	91 81       	ldd	r25, Z+1	; 0x01
    2e9e:	8d 93       	st	X+, r24
    2ea0:	9c 93       	st	X, r25
    2ea2:	fe 01       	movw	r30, r28
    2ea4:	ed 59       	subi	r30, 0x9D	; 157
    2ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea8:	80 81       	ld	r24, Z
    2eaa:	91 81       	ldd	r25, Z+1	; 0x01
    2eac:	01 97       	sbiw	r24, 0x01	; 1
    2eae:	f1 f7       	brne	.-4      	; 0x2eac <ProgramThree+0x732>
    2eb0:	fe 01       	movw	r30, r28
    2eb2:	ed 59       	subi	r30, 0x9D	; 157
    2eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb6:	91 83       	std	Z+1, r25	; 0x01
    2eb8:	80 83       	st	Z, r24
	_delay_ms(10000);
	LED_turnOff(DIO_PORTD,PIN3);
    2eba:	83 e0       	ldi	r24, 0x03	; 3
    2ebc:	63 e0       	ldi	r22, 0x03	; 3
    2ebe:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    2ec2:	fe 01       	movw	r30, r28
    2ec4:	e1 5a       	subi	r30, 0xA1	; 161
    2ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec8:	80 e0       	ldi	r24, 0x00	; 0
    2eca:	90 e4       	ldi	r25, 0x40	; 64
    2ecc:	ac e1       	ldi	r26, 0x1C	; 28
    2ece:	b6 e4       	ldi	r27, 0x46	; 70
    2ed0:	80 83       	st	Z, r24
    2ed2:	91 83       	std	Z+1, r25	; 0x01
    2ed4:	a2 83       	std	Z+2, r26	; 0x02
    2ed6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ed8:	8e 01       	movw	r16, r28
    2eda:	05 5a       	subi	r16, 0xA5	; 165
    2edc:	1f 4f       	sbci	r17, 0xFF	; 255
    2ede:	fe 01       	movw	r30, r28
    2ee0:	e1 5a       	subi	r30, 0xA1	; 161
    2ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee4:	60 81       	ld	r22, Z
    2ee6:	71 81       	ldd	r23, Z+1	; 0x01
    2ee8:	82 81       	ldd	r24, Z+2	; 0x02
    2eea:	93 81       	ldd	r25, Z+3	; 0x03
    2eec:	20 e0       	ldi	r18, 0x00	; 0
    2eee:	30 e0       	ldi	r19, 0x00	; 0
    2ef0:	4a e7       	ldi	r20, 0x7A	; 122
    2ef2:	53 e4       	ldi	r21, 0x43	; 67
    2ef4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ef8:	dc 01       	movw	r26, r24
    2efa:	cb 01       	movw	r24, r22
    2efc:	f8 01       	movw	r30, r16
    2efe:	80 83       	st	Z, r24
    2f00:	91 83       	std	Z+1, r25	; 0x01
    2f02:	a2 83       	std	Z+2, r26	; 0x02
    2f04:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f06:	fe 01       	movw	r30, r28
    2f08:	e5 5a       	subi	r30, 0xA5	; 165
    2f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0c:	60 81       	ld	r22, Z
    2f0e:	71 81       	ldd	r23, Z+1	; 0x01
    2f10:	82 81       	ldd	r24, Z+2	; 0x02
    2f12:	93 81       	ldd	r25, Z+3	; 0x03
    2f14:	20 e0       	ldi	r18, 0x00	; 0
    2f16:	30 e0       	ldi	r19, 0x00	; 0
    2f18:	40 e8       	ldi	r20, 0x80	; 128
    2f1a:	5f e3       	ldi	r21, 0x3F	; 63
    2f1c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2f20:	88 23       	and	r24, r24
    2f22:	44 f4       	brge	.+16     	; 0x2f34 <ProgramThree+0x7ba>
		__ticks = 1;
    2f24:	fe 01       	movw	r30, r28
    2f26:	e7 5a       	subi	r30, 0xA7	; 167
    2f28:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2a:	81 e0       	ldi	r24, 0x01	; 1
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	91 83       	std	Z+1, r25	; 0x01
    2f30:	80 83       	st	Z, r24
    2f32:	64 c0       	rjmp	.+200    	; 0x2ffc <ProgramThree+0x882>
	else if (__tmp > 65535)
    2f34:	fe 01       	movw	r30, r28
    2f36:	e5 5a       	subi	r30, 0xA5	; 165
    2f38:	ff 4f       	sbci	r31, 0xFF	; 255
    2f3a:	60 81       	ld	r22, Z
    2f3c:	71 81       	ldd	r23, Z+1	; 0x01
    2f3e:	82 81       	ldd	r24, Z+2	; 0x02
    2f40:	93 81       	ldd	r25, Z+3	; 0x03
    2f42:	20 e0       	ldi	r18, 0x00	; 0
    2f44:	3f ef       	ldi	r19, 0xFF	; 255
    2f46:	4f e7       	ldi	r20, 0x7F	; 127
    2f48:	57 e4       	ldi	r21, 0x47	; 71
    2f4a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2f4e:	18 16       	cp	r1, r24
    2f50:	0c f0       	brlt	.+2      	; 0x2f54 <ProgramThree+0x7da>
    2f52:	43 c0       	rjmp	.+134    	; 0x2fda <ProgramThree+0x860>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f54:	fe 01       	movw	r30, r28
    2f56:	e1 5a       	subi	r30, 0xA1	; 161
    2f58:	ff 4f       	sbci	r31, 0xFF	; 255
    2f5a:	60 81       	ld	r22, Z
    2f5c:	71 81       	ldd	r23, Z+1	; 0x01
    2f5e:	82 81       	ldd	r24, Z+2	; 0x02
    2f60:	93 81       	ldd	r25, Z+3	; 0x03
    2f62:	20 e0       	ldi	r18, 0x00	; 0
    2f64:	30 e0       	ldi	r19, 0x00	; 0
    2f66:	40 e2       	ldi	r20, 0x20	; 32
    2f68:	51 e4       	ldi	r21, 0x41	; 65
    2f6a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f6e:	dc 01       	movw	r26, r24
    2f70:	cb 01       	movw	r24, r22
    2f72:	8e 01       	movw	r16, r28
    2f74:	07 5a       	subi	r16, 0xA7	; 167
    2f76:	1f 4f       	sbci	r17, 0xFF	; 255
    2f78:	bc 01       	movw	r22, r24
    2f7a:	cd 01       	movw	r24, r26
    2f7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f80:	dc 01       	movw	r26, r24
    2f82:	cb 01       	movw	r24, r22
    2f84:	f8 01       	movw	r30, r16
    2f86:	91 83       	std	Z+1, r25	; 0x01
    2f88:	80 83       	st	Z, r24
    2f8a:	1f c0       	rjmp	.+62     	; 0x2fca <ProgramThree+0x850>
    2f8c:	fe 01       	movw	r30, r28
    2f8e:	e9 5a       	subi	r30, 0xA9	; 169
    2f90:	ff 4f       	sbci	r31, 0xFF	; 255
    2f92:	89 e1       	ldi	r24, 0x19	; 25
    2f94:	90 e0       	ldi	r25, 0x00	; 0
    2f96:	91 83       	std	Z+1, r25	; 0x01
    2f98:	80 83       	st	Z, r24
    2f9a:	fe 01       	movw	r30, r28
    2f9c:	e9 5a       	subi	r30, 0xA9	; 169
    2f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa0:	80 81       	ld	r24, Z
    2fa2:	91 81       	ldd	r25, Z+1	; 0x01
    2fa4:	01 97       	sbiw	r24, 0x01	; 1
    2fa6:	f1 f7       	brne	.-4      	; 0x2fa4 <ProgramThree+0x82a>
    2fa8:	fe 01       	movw	r30, r28
    2faa:	e9 5a       	subi	r30, 0xA9	; 169
    2fac:	ff 4f       	sbci	r31, 0xFF	; 255
    2fae:	91 83       	std	Z+1, r25	; 0x01
    2fb0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fb2:	de 01       	movw	r26, r28
    2fb4:	a7 5a       	subi	r26, 0xA7	; 167
    2fb6:	bf 4f       	sbci	r27, 0xFF	; 255
    2fb8:	fe 01       	movw	r30, r28
    2fba:	e7 5a       	subi	r30, 0xA7	; 167
    2fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2fbe:	80 81       	ld	r24, Z
    2fc0:	91 81       	ldd	r25, Z+1	; 0x01
    2fc2:	01 97       	sbiw	r24, 0x01	; 1
    2fc4:	11 96       	adiw	r26, 0x01	; 1
    2fc6:	9c 93       	st	X, r25
    2fc8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fca:	fe 01       	movw	r30, r28
    2fcc:	e7 5a       	subi	r30, 0xA7	; 167
    2fce:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd0:	80 81       	ld	r24, Z
    2fd2:	91 81       	ldd	r25, Z+1	; 0x01
    2fd4:	00 97       	sbiw	r24, 0x00	; 0
    2fd6:	d1 f6       	brne	.-76     	; 0x2f8c <ProgramThree+0x812>
    2fd8:	27 c0       	rjmp	.+78     	; 0x3028 <ProgramThree+0x8ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fda:	8e 01       	movw	r16, r28
    2fdc:	07 5a       	subi	r16, 0xA7	; 167
    2fde:	1f 4f       	sbci	r17, 0xFF	; 255
    2fe0:	fe 01       	movw	r30, r28
    2fe2:	e5 5a       	subi	r30, 0xA5	; 165
    2fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe6:	60 81       	ld	r22, Z
    2fe8:	71 81       	ldd	r23, Z+1	; 0x01
    2fea:	82 81       	ldd	r24, Z+2	; 0x02
    2fec:	93 81       	ldd	r25, Z+3	; 0x03
    2fee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ff2:	dc 01       	movw	r26, r24
    2ff4:	cb 01       	movw	r24, r22
    2ff6:	f8 01       	movw	r30, r16
    2ff8:	91 83       	std	Z+1, r25	; 0x01
    2ffa:	80 83       	st	Z, r24
    2ffc:	de 01       	movw	r26, r28
    2ffe:	ab 5a       	subi	r26, 0xAB	; 171
    3000:	bf 4f       	sbci	r27, 0xFF	; 255
    3002:	fe 01       	movw	r30, r28
    3004:	e7 5a       	subi	r30, 0xA7	; 167
    3006:	ff 4f       	sbci	r31, 0xFF	; 255
    3008:	80 81       	ld	r24, Z
    300a:	91 81       	ldd	r25, Z+1	; 0x01
    300c:	8d 93       	st	X+, r24
    300e:	9c 93       	st	X, r25
    3010:	fe 01       	movw	r30, r28
    3012:	eb 5a       	subi	r30, 0xAB	; 171
    3014:	ff 4f       	sbci	r31, 0xFF	; 255
    3016:	80 81       	ld	r24, Z
    3018:	91 81       	ldd	r25, Z+1	; 0x01
    301a:	01 97       	sbiw	r24, 0x01	; 1
    301c:	f1 f7       	brne	.-4      	; 0x301a <ProgramThree+0x8a0>
    301e:	fe 01       	movw	r30, r28
    3020:	eb 5a       	subi	r30, 0xAB	; 171
    3022:	ff 4f       	sbci	r31, 0xFF	; 255
    3024:	91 83       	std	Z+1, r25	; 0x01
    3026:	80 83       	st	Z, r24
	_delay_ms(10000);


	LED_turnOn(DIO_PORTD,PIN3);
    3028:	83 e0       	ldi	r24, 0x03	; 3
    302a:	63 e0       	ldi	r22, 0x03	; 3
    302c:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    3030:	fe 01       	movw	r30, r28
    3032:	ef 5a       	subi	r30, 0xAF	; 175
    3034:	ff 4f       	sbci	r31, 0xFF	; 255
    3036:	80 e0       	ldi	r24, 0x00	; 0
    3038:	90 e4       	ldi	r25, 0x40	; 64
    303a:	ac e1       	ldi	r26, 0x1C	; 28
    303c:	b6 e4       	ldi	r27, 0x46	; 70
    303e:	80 83       	st	Z, r24
    3040:	91 83       	std	Z+1, r25	; 0x01
    3042:	a2 83       	std	Z+2, r26	; 0x02
    3044:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3046:	8e 01       	movw	r16, r28
    3048:	03 5b       	subi	r16, 0xB3	; 179
    304a:	1f 4f       	sbci	r17, 0xFF	; 255
    304c:	fe 01       	movw	r30, r28
    304e:	ef 5a       	subi	r30, 0xAF	; 175
    3050:	ff 4f       	sbci	r31, 0xFF	; 255
    3052:	60 81       	ld	r22, Z
    3054:	71 81       	ldd	r23, Z+1	; 0x01
    3056:	82 81       	ldd	r24, Z+2	; 0x02
    3058:	93 81       	ldd	r25, Z+3	; 0x03
    305a:	20 e0       	ldi	r18, 0x00	; 0
    305c:	30 e0       	ldi	r19, 0x00	; 0
    305e:	4a e7       	ldi	r20, 0x7A	; 122
    3060:	53 e4       	ldi	r21, 0x43	; 67
    3062:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	f8 01       	movw	r30, r16
    306c:	80 83       	st	Z, r24
    306e:	91 83       	std	Z+1, r25	; 0x01
    3070:	a2 83       	std	Z+2, r26	; 0x02
    3072:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3074:	fe 01       	movw	r30, r28
    3076:	e3 5b       	subi	r30, 0xB3	; 179
    3078:	ff 4f       	sbci	r31, 0xFF	; 255
    307a:	60 81       	ld	r22, Z
    307c:	71 81       	ldd	r23, Z+1	; 0x01
    307e:	82 81       	ldd	r24, Z+2	; 0x02
    3080:	93 81       	ldd	r25, Z+3	; 0x03
    3082:	20 e0       	ldi	r18, 0x00	; 0
    3084:	30 e0       	ldi	r19, 0x00	; 0
    3086:	40 e8       	ldi	r20, 0x80	; 128
    3088:	5f e3       	ldi	r21, 0x3F	; 63
    308a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    308e:	88 23       	and	r24, r24
    3090:	44 f4       	brge	.+16     	; 0x30a2 <ProgramThree+0x928>
		__ticks = 1;
    3092:	fe 01       	movw	r30, r28
    3094:	e5 5b       	subi	r30, 0xB5	; 181
    3096:	ff 4f       	sbci	r31, 0xFF	; 255
    3098:	81 e0       	ldi	r24, 0x01	; 1
    309a:	90 e0       	ldi	r25, 0x00	; 0
    309c:	91 83       	std	Z+1, r25	; 0x01
    309e:	80 83       	st	Z, r24
    30a0:	64 c0       	rjmp	.+200    	; 0x316a <ProgramThree+0x9f0>
	else if (__tmp > 65535)
    30a2:	fe 01       	movw	r30, r28
    30a4:	e3 5b       	subi	r30, 0xB3	; 179
    30a6:	ff 4f       	sbci	r31, 0xFF	; 255
    30a8:	60 81       	ld	r22, Z
    30aa:	71 81       	ldd	r23, Z+1	; 0x01
    30ac:	82 81       	ldd	r24, Z+2	; 0x02
    30ae:	93 81       	ldd	r25, Z+3	; 0x03
    30b0:	20 e0       	ldi	r18, 0x00	; 0
    30b2:	3f ef       	ldi	r19, 0xFF	; 255
    30b4:	4f e7       	ldi	r20, 0x7F	; 127
    30b6:	57 e4       	ldi	r21, 0x47	; 71
    30b8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    30bc:	18 16       	cp	r1, r24
    30be:	0c f0       	brlt	.+2      	; 0x30c2 <ProgramThree+0x948>
    30c0:	43 c0       	rjmp	.+134    	; 0x3148 <ProgramThree+0x9ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30c2:	fe 01       	movw	r30, r28
    30c4:	ef 5a       	subi	r30, 0xAF	; 175
    30c6:	ff 4f       	sbci	r31, 0xFF	; 255
    30c8:	60 81       	ld	r22, Z
    30ca:	71 81       	ldd	r23, Z+1	; 0x01
    30cc:	82 81       	ldd	r24, Z+2	; 0x02
    30ce:	93 81       	ldd	r25, Z+3	; 0x03
    30d0:	20 e0       	ldi	r18, 0x00	; 0
    30d2:	30 e0       	ldi	r19, 0x00	; 0
    30d4:	40 e2       	ldi	r20, 0x20	; 32
    30d6:	51 e4       	ldi	r21, 0x41	; 65
    30d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30dc:	dc 01       	movw	r26, r24
    30de:	cb 01       	movw	r24, r22
    30e0:	8e 01       	movw	r16, r28
    30e2:	05 5b       	subi	r16, 0xB5	; 181
    30e4:	1f 4f       	sbci	r17, 0xFF	; 255
    30e6:	bc 01       	movw	r22, r24
    30e8:	cd 01       	movw	r24, r26
    30ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30ee:	dc 01       	movw	r26, r24
    30f0:	cb 01       	movw	r24, r22
    30f2:	f8 01       	movw	r30, r16
    30f4:	91 83       	std	Z+1, r25	; 0x01
    30f6:	80 83       	st	Z, r24
    30f8:	1f c0       	rjmp	.+62     	; 0x3138 <ProgramThree+0x9be>
    30fa:	fe 01       	movw	r30, r28
    30fc:	e7 5b       	subi	r30, 0xB7	; 183
    30fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3100:	89 e1       	ldi	r24, 0x19	; 25
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	91 83       	std	Z+1, r25	; 0x01
    3106:	80 83       	st	Z, r24
    3108:	fe 01       	movw	r30, r28
    310a:	e7 5b       	subi	r30, 0xB7	; 183
    310c:	ff 4f       	sbci	r31, 0xFF	; 255
    310e:	80 81       	ld	r24, Z
    3110:	91 81       	ldd	r25, Z+1	; 0x01
    3112:	01 97       	sbiw	r24, 0x01	; 1
    3114:	f1 f7       	brne	.-4      	; 0x3112 <ProgramThree+0x998>
    3116:	fe 01       	movw	r30, r28
    3118:	e7 5b       	subi	r30, 0xB7	; 183
    311a:	ff 4f       	sbci	r31, 0xFF	; 255
    311c:	91 83       	std	Z+1, r25	; 0x01
    311e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3120:	de 01       	movw	r26, r28
    3122:	a5 5b       	subi	r26, 0xB5	; 181
    3124:	bf 4f       	sbci	r27, 0xFF	; 255
    3126:	fe 01       	movw	r30, r28
    3128:	e5 5b       	subi	r30, 0xB5	; 181
    312a:	ff 4f       	sbci	r31, 0xFF	; 255
    312c:	80 81       	ld	r24, Z
    312e:	91 81       	ldd	r25, Z+1	; 0x01
    3130:	01 97       	sbiw	r24, 0x01	; 1
    3132:	11 96       	adiw	r26, 0x01	; 1
    3134:	9c 93       	st	X, r25
    3136:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3138:	fe 01       	movw	r30, r28
    313a:	e5 5b       	subi	r30, 0xB5	; 181
    313c:	ff 4f       	sbci	r31, 0xFF	; 255
    313e:	80 81       	ld	r24, Z
    3140:	91 81       	ldd	r25, Z+1	; 0x01
    3142:	00 97       	sbiw	r24, 0x00	; 0
    3144:	d1 f6       	brne	.-76     	; 0x30fa <ProgramThree+0x980>
    3146:	27 c0       	rjmp	.+78     	; 0x3196 <ProgramThree+0xa1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3148:	8e 01       	movw	r16, r28
    314a:	05 5b       	subi	r16, 0xB5	; 181
    314c:	1f 4f       	sbci	r17, 0xFF	; 255
    314e:	fe 01       	movw	r30, r28
    3150:	e3 5b       	subi	r30, 0xB3	; 179
    3152:	ff 4f       	sbci	r31, 0xFF	; 255
    3154:	60 81       	ld	r22, Z
    3156:	71 81       	ldd	r23, Z+1	; 0x01
    3158:	82 81       	ldd	r24, Z+2	; 0x02
    315a:	93 81       	ldd	r25, Z+3	; 0x03
    315c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3160:	dc 01       	movw	r26, r24
    3162:	cb 01       	movw	r24, r22
    3164:	f8 01       	movw	r30, r16
    3166:	91 83       	std	Z+1, r25	; 0x01
    3168:	80 83       	st	Z, r24
    316a:	de 01       	movw	r26, r28
    316c:	a9 5b       	subi	r26, 0xB9	; 185
    316e:	bf 4f       	sbci	r27, 0xFF	; 255
    3170:	fe 01       	movw	r30, r28
    3172:	e5 5b       	subi	r30, 0xB5	; 181
    3174:	ff 4f       	sbci	r31, 0xFF	; 255
    3176:	80 81       	ld	r24, Z
    3178:	91 81       	ldd	r25, Z+1	; 0x01
    317a:	8d 93       	st	X+, r24
    317c:	9c 93       	st	X, r25
    317e:	fe 01       	movw	r30, r28
    3180:	e9 5b       	subi	r30, 0xB9	; 185
    3182:	ff 4f       	sbci	r31, 0xFF	; 255
    3184:	80 81       	ld	r24, Z
    3186:	91 81       	ldd	r25, Z+1	; 0x01
    3188:	01 97       	sbiw	r24, 0x01	; 1
    318a:	f1 f7       	brne	.-4      	; 0x3188 <ProgramThree+0xa0e>
    318c:	fe 01       	movw	r30, r28
    318e:	e9 5b       	subi	r30, 0xB9	; 185
    3190:	ff 4f       	sbci	r31, 0xFF	; 255
    3192:	91 83       	std	Z+1, r25	; 0x01
    3194:	80 83       	st	Z, r24
	_delay_ms(10000);
	LED_turnOn(DIO_PORTC,PIN7);
    3196:	82 e0       	ldi	r24, 0x02	; 2
    3198:	67 e0       	ldi	r22, 0x07	; 7
    319a:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    319e:	fe 01       	movw	r30, r28
    31a0:	ed 5b       	subi	r30, 0xBD	; 189
    31a2:	ff 4f       	sbci	r31, 0xFF	; 255
    31a4:	80 e0       	ldi	r24, 0x00	; 0
    31a6:	90 e4       	ldi	r25, 0x40	; 64
    31a8:	ac e1       	ldi	r26, 0x1C	; 28
    31aa:	b6 e4       	ldi	r27, 0x46	; 70
    31ac:	80 83       	st	Z, r24
    31ae:	91 83       	std	Z+1, r25	; 0x01
    31b0:	a2 83       	std	Z+2, r26	; 0x02
    31b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31b4:	8e 01       	movw	r16, r28
    31b6:	01 5c       	subi	r16, 0xC1	; 193
    31b8:	1f 4f       	sbci	r17, 0xFF	; 255
    31ba:	fe 01       	movw	r30, r28
    31bc:	ed 5b       	subi	r30, 0xBD	; 189
    31be:	ff 4f       	sbci	r31, 0xFF	; 255
    31c0:	60 81       	ld	r22, Z
    31c2:	71 81       	ldd	r23, Z+1	; 0x01
    31c4:	82 81       	ldd	r24, Z+2	; 0x02
    31c6:	93 81       	ldd	r25, Z+3	; 0x03
    31c8:	20 e0       	ldi	r18, 0x00	; 0
    31ca:	30 e0       	ldi	r19, 0x00	; 0
    31cc:	4a e7       	ldi	r20, 0x7A	; 122
    31ce:	53 e4       	ldi	r21, 0x43	; 67
    31d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31d4:	dc 01       	movw	r26, r24
    31d6:	cb 01       	movw	r24, r22
    31d8:	f8 01       	movw	r30, r16
    31da:	80 83       	st	Z, r24
    31dc:	91 83       	std	Z+1, r25	; 0x01
    31de:	a2 83       	std	Z+2, r26	; 0x02
    31e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31e2:	fe 01       	movw	r30, r28
    31e4:	ff 96       	adiw	r30, 0x3f	; 63
    31e6:	60 81       	ld	r22, Z
    31e8:	71 81       	ldd	r23, Z+1	; 0x01
    31ea:	82 81       	ldd	r24, Z+2	; 0x02
    31ec:	93 81       	ldd	r25, Z+3	; 0x03
    31ee:	20 e0       	ldi	r18, 0x00	; 0
    31f0:	30 e0       	ldi	r19, 0x00	; 0
    31f2:	40 e8       	ldi	r20, 0x80	; 128
    31f4:	5f e3       	ldi	r21, 0x3F	; 63
    31f6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    31fa:	88 23       	and	r24, r24
    31fc:	2c f4       	brge	.+10     	; 0x3208 <ProgramThree+0xa8e>
		__ticks = 1;
    31fe:	81 e0       	ldi	r24, 0x01	; 1
    3200:	90 e0       	ldi	r25, 0x00	; 0
    3202:	9e af       	std	Y+62, r25	; 0x3e
    3204:	8d af       	std	Y+61, r24	; 0x3d
    3206:	46 c0       	rjmp	.+140    	; 0x3294 <ProgramThree+0xb1a>
	else if (__tmp > 65535)
    3208:	fe 01       	movw	r30, r28
    320a:	ff 96       	adiw	r30, 0x3f	; 63
    320c:	60 81       	ld	r22, Z
    320e:	71 81       	ldd	r23, Z+1	; 0x01
    3210:	82 81       	ldd	r24, Z+2	; 0x02
    3212:	93 81       	ldd	r25, Z+3	; 0x03
    3214:	20 e0       	ldi	r18, 0x00	; 0
    3216:	3f ef       	ldi	r19, 0xFF	; 255
    3218:	4f e7       	ldi	r20, 0x7F	; 127
    321a:	57 e4       	ldi	r21, 0x47	; 71
    321c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3220:	18 16       	cp	r1, r24
    3222:	64 f5       	brge	.+88     	; 0x327c <ProgramThree+0xb02>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3224:	fe 01       	movw	r30, r28
    3226:	ed 5b       	subi	r30, 0xBD	; 189
    3228:	ff 4f       	sbci	r31, 0xFF	; 255
    322a:	60 81       	ld	r22, Z
    322c:	71 81       	ldd	r23, Z+1	; 0x01
    322e:	82 81       	ldd	r24, Z+2	; 0x02
    3230:	93 81       	ldd	r25, Z+3	; 0x03
    3232:	20 e0       	ldi	r18, 0x00	; 0
    3234:	30 e0       	ldi	r19, 0x00	; 0
    3236:	40 e2       	ldi	r20, 0x20	; 32
    3238:	51 e4       	ldi	r21, 0x41	; 65
    323a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    323e:	dc 01       	movw	r26, r24
    3240:	cb 01       	movw	r24, r22
    3242:	bc 01       	movw	r22, r24
    3244:	cd 01       	movw	r24, r26
    3246:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    324a:	dc 01       	movw	r26, r24
    324c:	cb 01       	movw	r24, r22
    324e:	9e af       	std	Y+62, r25	; 0x3e
    3250:	8d af       	std	Y+61, r24	; 0x3d
    3252:	0f c0       	rjmp	.+30     	; 0x3272 <ProgramThree+0xaf8>
    3254:	89 e1       	ldi	r24, 0x19	; 25
    3256:	90 e0       	ldi	r25, 0x00	; 0
    3258:	9c af       	std	Y+60, r25	; 0x3c
    325a:	8b af       	std	Y+59, r24	; 0x3b
    325c:	8b ad       	ldd	r24, Y+59	; 0x3b
    325e:	9c ad       	ldd	r25, Y+60	; 0x3c
    3260:	01 97       	sbiw	r24, 0x01	; 1
    3262:	f1 f7       	brne	.-4      	; 0x3260 <ProgramThree+0xae6>
    3264:	9c af       	std	Y+60, r25	; 0x3c
    3266:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3268:	8d ad       	ldd	r24, Y+61	; 0x3d
    326a:	9e ad       	ldd	r25, Y+62	; 0x3e
    326c:	01 97       	sbiw	r24, 0x01	; 1
    326e:	9e af       	std	Y+62, r25	; 0x3e
    3270:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3272:	8d ad       	ldd	r24, Y+61	; 0x3d
    3274:	9e ad       	ldd	r25, Y+62	; 0x3e
    3276:	00 97       	sbiw	r24, 0x00	; 0
    3278:	69 f7       	brne	.-38     	; 0x3254 <ProgramThree+0xada>
    327a:	16 c0       	rjmp	.+44     	; 0x32a8 <ProgramThree+0xb2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    327c:	fe 01       	movw	r30, r28
    327e:	ff 96       	adiw	r30, 0x3f	; 63
    3280:	60 81       	ld	r22, Z
    3282:	71 81       	ldd	r23, Z+1	; 0x01
    3284:	82 81       	ldd	r24, Z+2	; 0x02
    3286:	93 81       	ldd	r25, Z+3	; 0x03
    3288:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    328c:	dc 01       	movw	r26, r24
    328e:	cb 01       	movw	r24, r22
    3290:	9e af       	std	Y+62, r25	; 0x3e
    3292:	8d af       	std	Y+61, r24	; 0x3d
    3294:	8d ad       	ldd	r24, Y+61	; 0x3d
    3296:	9e ad       	ldd	r25, Y+62	; 0x3e
    3298:	9a af       	std	Y+58, r25	; 0x3a
    329a:	89 af       	std	Y+57, r24	; 0x39
    329c:	89 ad       	ldd	r24, Y+57	; 0x39
    329e:	9a ad       	ldd	r25, Y+58	; 0x3a
    32a0:	01 97       	sbiw	r24, 0x01	; 1
    32a2:	f1 f7       	brne	.-4      	; 0x32a0 <ProgramThree+0xb26>
    32a4:	9a af       	std	Y+58, r25	; 0x3a
    32a6:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(10000);
	LED_turnOn(DIO_PORTC,PIN2);
    32a8:	82 e0       	ldi	r24, 0x02	; 2
    32aa:	62 e0       	ldi	r22, 0x02	; 2
    32ac:	0e 94 47 06 	call	0xc8e	; 0xc8e <LED_turnOn>
    32b0:	80 e0       	ldi	r24, 0x00	; 0
    32b2:	90 e4       	ldi	r25, 0x40	; 64
    32b4:	ac e1       	ldi	r26, 0x1C	; 28
    32b6:	b6 e4       	ldi	r27, 0x46	; 70
    32b8:	8d ab       	std	Y+53, r24	; 0x35
    32ba:	9e ab       	std	Y+54, r25	; 0x36
    32bc:	af ab       	std	Y+55, r26	; 0x37
    32be:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32c0:	6d a9       	ldd	r22, Y+53	; 0x35
    32c2:	7e a9       	ldd	r23, Y+54	; 0x36
    32c4:	8f a9       	ldd	r24, Y+55	; 0x37
    32c6:	98 ad       	ldd	r25, Y+56	; 0x38
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	4a e7       	ldi	r20, 0x7A	; 122
    32ce:	53 e4       	ldi	r21, 0x43	; 67
    32d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32d4:	dc 01       	movw	r26, r24
    32d6:	cb 01       	movw	r24, r22
    32d8:	89 ab       	std	Y+49, r24	; 0x31
    32da:	9a ab       	std	Y+50, r25	; 0x32
    32dc:	ab ab       	std	Y+51, r26	; 0x33
    32de:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    32e0:	69 a9       	ldd	r22, Y+49	; 0x31
    32e2:	7a a9       	ldd	r23, Y+50	; 0x32
    32e4:	8b a9       	ldd	r24, Y+51	; 0x33
    32e6:	9c a9       	ldd	r25, Y+52	; 0x34
    32e8:	20 e0       	ldi	r18, 0x00	; 0
    32ea:	30 e0       	ldi	r19, 0x00	; 0
    32ec:	40 e8       	ldi	r20, 0x80	; 128
    32ee:	5f e3       	ldi	r21, 0x3F	; 63
    32f0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    32f4:	88 23       	and	r24, r24
    32f6:	2c f4       	brge	.+10     	; 0x3302 <ProgramThree+0xb88>
		__ticks = 1;
    32f8:	81 e0       	ldi	r24, 0x01	; 1
    32fa:	90 e0       	ldi	r25, 0x00	; 0
    32fc:	98 ab       	std	Y+48, r25	; 0x30
    32fe:	8f a7       	std	Y+47, r24	; 0x2f
    3300:	3f c0       	rjmp	.+126    	; 0x3380 <ProgramThree+0xc06>
	else if (__tmp > 65535)
    3302:	69 a9       	ldd	r22, Y+49	; 0x31
    3304:	7a a9       	ldd	r23, Y+50	; 0x32
    3306:	8b a9       	ldd	r24, Y+51	; 0x33
    3308:	9c a9       	ldd	r25, Y+52	; 0x34
    330a:	20 e0       	ldi	r18, 0x00	; 0
    330c:	3f ef       	ldi	r19, 0xFF	; 255
    330e:	4f e7       	ldi	r20, 0x7F	; 127
    3310:	57 e4       	ldi	r21, 0x47	; 71
    3312:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3316:	18 16       	cp	r1, r24
    3318:	4c f5       	brge	.+82     	; 0x336c <ProgramThree+0xbf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    331a:	6d a9       	ldd	r22, Y+53	; 0x35
    331c:	7e a9       	ldd	r23, Y+54	; 0x36
    331e:	8f a9       	ldd	r24, Y+55	; 0x37
    3320:	98 ad       	ldd	r25, Y+56	; 0x38
    3322:	20 e0       	ldi	r18, 0x00	; 0
    3324:	30 e0       	ldi	r19, 0x00	; 0
    3326:	40 e2       	ldi	r20, 0x20	; 32
    3328:	51 e4       	ldi	r21, 0x41	; 65
    332a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    332e:	dc 01       	movw	r26, r24
    3330:	cb 01       	movw	r24, r22
    3332:	bc 01       	movw	r22, r24
    3334:	cd 01       	movw	r24, r26
    3336:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    333a:	dc 01       	movw	r26, r24
    333c:	cb 01       	movw	r24, r22
    333e:	98 ab       	std	Y+48, r25	; 0x30
    3340:	8f a7       	std	Y+47, r24	; 0x2f
    3342:	0f c0       	rjmp	.+30     	; 0x3362 <ProgramThree+0xbe8>
    3344:	89 e1       	ldi	r24, 0x19	; 25
    3346:	90 e0       	ldi	r25, 0x00	; 0
    3348:	9e a7       	std	Y+46, r25	; 0x2e
    334a:	8d a7       	std	Y+45, r24	; 0x2d
    334c:	8d a5       	ldd	r24, Y+45	; 0x2d
    334e:	9e a5       	ldd	r25, Y+46	; 0x2e
    3350:	01 97       	sbiw	r24, 0x01	; 1
    3352:	f1 f7       	brne	.-4      	; 0x3350 <ProgramThree+0xbd6>
    3354:	9e a7       	std	Y+46, r25	; 0x2e
    3356:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3358:	8f a5       	ldd	r24, Y+47	; 0x2f
    335a:	98 a9       	ldd	r25, Y+48	; 0x30
    335c:	01 97       	sbiw	r24, 0x01	; 1
    335e:	98 ab       	std	Y+48, r25	; 0x30
    3360:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3362:	8f a5       	ldd	r24, Y+47	; 0x2f
    3364:	98 a9       	ldd	r25, Y+48	; 0x30
    3366:	00 97       	sbiw	r24, 0x00	; 0
    3368:	69 f7       	brne	.-38     	; 0x3344 <ProgramThree+0xbca>
    336a:	14 c0       	rjmp	.+40     	; 0x3394 <ProgramThree+0xc1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    336c:	69 a9       	ldd	r22, Y+49	; 0x31
    336e:	7a a9       	ldd	r23, Y+50	; 0x32
    3370:	8b a9       	ldd	r24, Y+51	; 0x33
    3372:	9c a9       	ldd	r25, Y+52	; 0x34
    3374:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3378:	dc 01       	movw	r26, r24
    337a:	cb 01       	movw	r24, r22
    337c:	98 ab       	std	Y+48, r25	; 0x30
    337e:	8f a7       	std	Y+47, r24	; 0x2f
    3380:	8f a5       	ldd	r24, Y+47	; 0x2f
    3382:	98 a9       	ldd	r25, Y+48	; 0x30
    3384:	9c a7       	std	Y+44, r25	; 0x2c
    3386:	8b a7       	std	Y+43, r24	; 0x2b
    3388:	8b a5       	ldd	r24, Y+43	; 0x2b
    338a:	9c a5       	ldd	r25, Y+44	; 0x2c
    338c:	01 97       	sbiw	r24, 0x01	; 1
    338e:	f1 f7       	brne	.-4      	; 0x338c <ProgramThree+0xc12>
    3390:	9c a7       	std	Y+44, r25	; 0x2c
    3392:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10000);

	LED_turnOff(DIO_PORTD,PIN3);
    3394:	83 e0       	ldi	r24, 0x03	; 3
    3396:	63 e0       	ldi	r22, 0x03	; 3
    3398:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    339c:	80 e0       	ldi	r24, 0x00	; 0
    339e:	90 e4       	ldi	r25, 0x40	; 64
    33a0:	ac e1       	ldi	r26, 0x1C	; 28
    33a2:	b6 e4       	ldi	r27, 0x46	; 70
    33a4:	8f a3       	std	Y+39, r24	; 0x27
    33a6:	98 a7       	std	Y+40, r25	; 0x28
    33a8:	a9 a7       	std	Y+41, r26	; 0x29
    33aa:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33ac:	6f a1       	ldd	r22, Y+39	; 0x27
    33ae:	78 a5       	ldd	r23, Y+40	; 0x28
    33b0:	89 a5       	ldd	r24, Y+41	; 0x29
    33b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    33b4:	20 e0       	ldi	r18, 0x00	; 0
    33b6:	30 e0       	ldi	r19, 0x00	; 0
    33b8:	4a e7       	ldi	r20, 0x7A	; 122
    33ba:	53 e4       	ldi	r21, 0x43	; 67
    33bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33c0:	dc 01       	movw	r26, r24
    33c2:	cb 01       	movw	r24, r22
    33c4:	8b a3       	std	Y+35, r24	; 0x23
    33c6:	9c a3       	std	Y+36, r25	; 0x24
    33c8:	ad a3       	std	Y+37, r26	; 0x25
    33ca:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    33cc:	6b a1       	ldd	r22, Y+35	; 0x23
    33ce:	7c a1       	ldd	r23, Y+36	; 0x24
    33d0:	8d a1       	ldd	r24, Y+37	; 0x25
    33d2:	9e a1       	ldd	r25, Y+38	; 0x26
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	30 e0       	ldi	r19, 0x00	; 0
    33d8:	40 e8       	ldi	r20, 0x80	; 128
    33da:	5f e3       	ldi	r21, 0x3F	; 63
    33dc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    33e0:	88 23       	and	r24, r24
    33e2:	2c f4       	brge	.+10     	; 0x33ee <ProgramThree+0xc74>
		__ticks = 1;
    33e4:	81 e0       	ldi	r24, 0x01	; 1
    33e6:	90 e0       	ldi	r25, 0x00	; 0
    33e8:	9a a3       	std	Y+34, r25	; 0x22
    33ea:	89 a3       	std	Y+33, r24	; 0x21
    33ec:	3f c0       	rjmp	.+126    	; 0x346c <ProgramThree+0xcf2>
	else if (__tmp > 65535)
    33ee:	6b a1       	ldd	r22, Y+35	; 0x23
    33f0:	7c a1       	ldd	r23, Y+36	; 0x24
    33f2:	8d a1       	ldd	r24, Y+37	; 0x25
    33f4:	9e a1       	ldd	r25, Y+38	; 0x26
    33f6:	20 e0       	ldi	r18, 0x00	; 0
    33f8:	3f ef       	ldi	r19, 0xFF	; 255
    33fa:	4f e7       	ldi	r20, 0x7F	; 127
    33fc:	57 e4       	ldi	r21, 0x47	; 71
    33fe:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3402:	18 16       	cp	r1, r24
    3404:	4c f5       	brge	.+82     	; 0x3458 <ProgramThree+0xcde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3406:	6f a1       	ldd	r22, Y+39	; 0x27
    3408:	78 a5       	ldd	r23, Y+40	; 0x28
    340a:	89 a5       	ldd	r24, Y+41	; 0x29
    340c:	9a a5       	ldd	r25, Y+42	; 0x2a
    340e:	20 e0       	ldi	r18, 0x00	; 0
    3410:	30 e0       	ldi	r19, 0x00	; 0
    3412:	40 e2       	ldi	r20, 0x20	; 32
    3414:	51 e4       	ldi	r21, 0x41	; 65
    3416:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    341a:	dc 01       	movw	r26, r24
    341c:	cb 01       	movw	r24, r22
    341e:	bc 01       	movw	r22, r24
    3420:	cd 01       	movw	r24, r26
    3422:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3426:	dc 01       	movw	r26, r24
    3428:	cb 01       	movw	r24, r22
    342a:	9a a3       	std	Y+34, r25	; 0x22
    342c:	89 a3       	std	Y+33, r24	; 0x21
    342e:	0f c0       	rjmp	.+30     	; 0x344e <ProgramThree+0xcd4>
    3430:	89 e1       	ldi	r24, 0x19	; 25
    3432:	90 e0       	ldi	r25, 0x00	; 0
    3434:	98 a3       	std	Y+32, r25	; 0x20
    3436:	8f 8f       	std	Y+31, r24	; 0x1f
    3438:	8f 8d       	ldd	r24, Y+31	; 0x1f
    343a:	98 a1       	ldd	r25, Y+32	; 0x20
    343c:	01 97       	sbiw	r24, 0x01	; 1
    343e:	f1 f7       	brne	.-4      	; 0x343c <ProgramThree+0xcc2>
    3440:	98 a3       	std	Y+32, r25	; 0x20
    3442:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3444:	89 a1       	ldd	r24, Y+33	; 0x21
    3446:	9a a1       	ldd	r25, Y+34	; 0x22
    3448:	01 97       	sbiw	r24, 0x01	; 1
    344a:	9a a3       	std	Y+34, r25	; 0x22
    344c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    344e:	89 a1       	ldd	r24, Y+33	; 0x21
    3450:	9a a1       	ldd	r25, Y+34	; 0x22
    3452:	00 97       	sbiw	r24, 0x00	; 0
    3454:	69 f7       	brne	.-38     	; 0x3430 <ProgramThree+0xcb6>
    3456:	14 c0       	rjmp	.+40     	; 0x3480 <ProgramThree+0xd06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3458:	6b a1       	ldd	r22, Y+35	; 0x23
    345a:	7c a1       	ldd	r23, Y+36	; 0x24
    345c:	8d a1       	ldd	r24, Y+37	; 0x25
    345e:	9e a1       	ldd	r25, Y+38	; 0x26
    3460:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3464:	dc 01       	movw	r26, r24
    3466:	cb 01       	movw	r24, r22
    3468:	9a a3       	std	Y+34, r25	; 0x22
    346a:	89 a3       	std	Y+33, r24	; 0x21
    346c:	89 a1       	ldd	r24, Y+33	; 0x21
    346e:	9a a1       	ldd	r25, Y+34	; 0x22
    3470:	9e 8f       	std	Y+30, r25	; 0x1e
    3472:	8d 8f       	std	Y+29, r24	; 0x1d
    3474:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3476:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3478:	01 97       	sbiw	r24, 0x01	; 1
    347a:	f1 f7       	brne	.-4      	; 0x3478 <ProgramThree+0xcfe>
    347c:	9e 8f       	std	Y+30, r25	; 0x1e
    347e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10000);
	LED_turnOff(DIO_PORTC,PIN7);
    3480:	82 e0       	ldi	r24, 0x02	; 2
    3482:	67 e0       	ldi	r22, 0x07	; 7
    3484:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    3488:	80 e0       	ldi	r24, 0x00	; 0
    348a:	90 e4       	ldi	r25, 0x40	; 64
    348c:	ac e1       	ldi	r26, 0x1C	; 28
    348e:	b6 e4       	ldi	r27, 0x46	; 70
    3490:	89 8f       	std	Y+25, r24	; 0x19
    3492:	9a 8f       	std	Y+26, r25	; 0x1a
    3494:	ab 8f       	std	Y+27, r26	; 0x1b
    3496:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3498:	69 8d       	ldd	r22, Y+25	; 0x19
    349a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    349c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    349e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34a0:	20 e0       	ldi	r18, 0x00	; 0
    34a2:	30 e0       	ldi	r19, 0x00	; 0
    34a4:	4a e7       	ldi	r20, 0x7A	; 122
    34a6:	53 e4       	ldi	r21, 0x43	; 67
    34a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34ac:	dc 01       	movw	r26, r24
    34ae:	cb 01       	movw	r24, r22
    34b0:	8d 8b       	std	Y+21, r24	; 0x15
    34b2:	9e 8b       	std	Y+22, r25	; 0x16
    34b4:	af 8b       	std	Y+23, r26	; 0x17
    34b6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    34b8:	6d 89       	ldd	r22, Y+21	; 0x15
    34ba:	7e 89       	ldd	r23, Y+22	; 0x16
    34bc:	8f 89       	ldd	r24, Y+23	; 0x17
    34be:	98 8d       	ldd	r25, Y+24	; 0x18
    34c0:	20 e0       	ldi	r18, 0x00	; 0
    34c2:	30 e0       	ldi	r19, 0x00	; 0
    34c4:	40 e8       	ldi	r20, 0x80	; 128
    34c6:	5f e3       	ldi	r21, 0x3F	; 63
    34c8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    34cc:	88 23       	and	r24, r24
    34ce:	2c f4       	brge	.+10     	; 0x34da <ProgramThree+0xd60>
		__ticks = 1;
    34d0:	81 e0       	ldi	r24, 0x01	; 1
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	9c 8b       	std	Y+20, r25	; 0x14
    34d6:	8b 8b       	std	Y+19, r24	; 0x13
    34d8:	3f c0       	rjmp	.+126    	; 0x3558 <ProgramThree+0xdde>
	else if (__tmp > 65535)
    34da:	6d 89       	ldd	r22, Y+21	; 0x15
    34dc:	7e 89       	ldd	r23, Y+22	; 0x16
    34de:	8f 89       	ldd	r24, Y+23	; 0x17
    34e0:	98 8d       	ldd	r25, Y+24	; 0x18
    34e2:	20 e0       	ldi	r18, 0x00	; 0
    34e4:	3f ef       	ldi	r19, 0xFF	; 255
    34e6:	4f e7       	ldi	r20, 0x7F	; 127
    34e8:	57 e4       	ldi	r21, 0x47	; 71
    34ea:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    34ee:	18 16       	cp	r1, r24
    34f0:	4c f5       	brge	.+82     	; 0x3544 <ProgramThree+0xdca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34f2:	69 8d       	ldd	r22, Y+25	; 0x19
    34f4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34fa:	20 e0       	ldi	r18, 0x00	; 0
    34fc:	30 e0       	ldi	r19, 0x00	; 0
    34fe:	40 e2       	ldi	r20, 0x20	; 32
    3500:	51 e4       	ldi	r21, 0x41	; 65
    3502:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3506:	dc 01       	movw	r26, r24
    3508:	cb 01       	movw	r24, r22
    350a:	bc 01       	movw	r22, r24
    350c:	cd 01       	movw	r24, r26
    350e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3512:	dc 01       	movw	r26, r24
    3514:	cb 01       	movw	r24, r22
    3516:	9c 8b       	std	Y+20, r25	; 0x14
    3518:	8b 8b       	std	Y+19, r24	; 0x13
    351a:	0f c0       	rjmp	.+30     	; 0x353a <ProgramThree+0xdc0>
    351c:	89 e1       	ldi	r24, 0x19	; 25
    351e:	90 e0       	ldi	r25, 0x00	; 0
    3520:	9a 8b       	std	Y+18, r25	; 0x12
    3522:	89 8b       	std	Y+17, r24	; 0x11
    3524:	89 89       	ldd	r24, Y+17	; 0x11
    3526:	9a 89       	ldd	r25, Y+18	; 0x12
    3528:	01 97       	sbiw	r24, 0x01	; 1
    352a:	f1 f7       	brne	.-4      	; 0x3528 <ProgramThree+0xdae>
    352c:	9a 8b       	std	Y+18, r25	; 0x12
    352e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3530:	8b 89       	ldd	r24, Y+19	; 0x13
    3532:	9c 89       	ldd	r25, Y+20	; 0x14
    3534:	01 97       	sbiw	r24, 0x01	; 1
    3536:	9c 8b       	std	Y+20, r25	; 0x14
    3538:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    353a:	8b 89       	ldd	r24, Y+19	; 0x13
    353c:	9c 89       	ldd	r25, Y+20	; 0x14
    353e:	00 97       	sbiw	r24, 0x00	; 0
    3540:	69 f7       	brne	.-38     	; 0x351c <ProgramThree+0xda2>
    3542:	14 c0       	rjmp	.+40     	; 0x356c <ProgramThree+0xdf2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3544:	6d 89       	ldd	r22, Y+21	; 0x15
    3546:	7e 89       	ldd	r23, Y+22	; 0x16
    3548:	8f 89       	ldd	r24, Y+23	; 0x17
    354a:	98 8d       	ldd	r25, Y+24	; 0x18
    354c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3550:	dc 01       	movw	r26, r24
    3552:	cb 01       	movw	r24, r22
    3554:	9c 8b       	std	Y+20, r25	; 0x14
    3556:	8b 8b       	std	Y+19, r24	; 0x13
    3558:	8b 89       	ldd	r24, Y+19	; 0x13
    355a:	9c 89       	ldd	r25, Y+20	; 0x14
    355c:	98 8b       	std	Y+16, r25	; 0x10
    355e:	8f 87       	std	Y+15, r24	; 0x0f
    3560:	8f 85       	ldd	r24, Y+15	; 0x0f
    3562:	98 89       	ldd	r25, Y+16	; 0x10
    3564:	01 97       	sbiw	r24, 0x01	; 1
    3566:	f1 f7       	brne	.-4      	; 0x3564 <ProgramThree+0xdea>
    3568:	98 8b       	std	Y+16, r25	; 0x10
    356a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10000);
	LED_turnOff(DIO_PORTC,PIN2);
    356c:	82 e0       	ldi	r24, 0x02	; 2
    356e:	62 e0       	ldi	r22, 0x02	; 2
    3570:	0e 94 5e 06 	call	0xcbc	; 0xcbc <LED_turnOff>
    3574:	80 e0       	ldi	r24, 0x00	; 0
    3576:	90 e4       	ldi	r25, 0x40	; 64
    3578:	ac e1       	ldi	r26, 0x1C	; 28
    357a:	b6 e4       	ldi	r27, 0x46	; 70
    357c:	8b 87       	std	Y+11, r24	; 0x0b
    357e:	9c 87       	std	Y+12, r25	; 0x0c
    3580:	ad 87       	std	Y+13, r26	; 0x0d
    3582:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3584:	6b 85       	ldd	r22, Y+11	; 0x0b
    3586:	7c 85       	ldd	r23, Y+12	; 0x0c
    3588:	8d 85       	ldd	r24, Y+13	; 0x0d
    358a:	9e 85       	ldd	r25, Y+14	; 0x0e
    358c:	20 e0       	ldi	r18, 0x00	; 0
    358e:	30 e0       	ldi	r19, 0x00	; 0
    3590:	4a e7       	ldi	r20, 0x7A	; 122
    3592:	53 e4       	ldi	r21, 0x43	; 67
    3594:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3598:	dc 01       	movw	r26, r24
    359a:	cb 01       	movw	r24, r22
    359c:	8f 83       	std	Y+7, r24	; 0x07
    359e:	98 87       	std	Y+8, r25	; 0x08
    35a0:	a9 87       	std	Y+9, r26	; 0x09
    35a2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    35a4:	6f 81       	ldd	r22, Y+7	; 0x07
    35a6:	78 85       	ldd	r23, Y+8	; 0x08
    35a8:	89 85       	ldd	r24, Y+9	; 0x09
    35aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    35ac:	20 e0       	ldi	r18, 0x00	; 0
    35ae:	30 e0       	ldi	r19, 0x00	; 0
    35b0:	40 e8       	ldi	r20, 0x80	; 128
    35b2:	5f e3       	ldi	r21, 0x3F	; 63
    35b4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    35b8:	88 23       	and	r24, r24
    35ba:	2c f4       	brge	.+10     	; 0x35c6 <ProgramThree+0xe4c>
		__ticks = 1;
    35bc:	81 e0       	ldi	r24, 0x01	; 1
    35be:	90 e0       	ldi	r25, 0x00	; 0
    35c0:	9e 83       	std	Y+6, r25	; 0x06
    35c2:	8d 83       	std	Y+5, r24	; 0x05
    35c4:	3f c0       	rjmp	.+126    	; 0x3644 <ProgramThree+0xeca>
	else if (__tmp > 65535)
    35c6:	6f 81       	ldd	r22, Y+7	; 0x07
    35c8:	78 85       	ldd	r23, Y+8	; 0x08
    35ca:	89 85       	ldd	r24, Y+9	; 0x09
    35cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    35ce:	20 e0       	ldi	r18, 0x00	; 0
    35d0:	3f ef       	ldi	r19, 0xFF	; 255
    35d2:	4f e7       	ldi	r20, 0x7F	; 127
    35d4:	57 e4       	ldi	r21, 0x47	; 71
    35d6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    35da:	18 16       	cp	r1, r24
    35dc:	4c f5       	brge	.+82     	; 0x3630 <ProgramThree+0xeb6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35de:	6b 85       	ldd	r22, Y+11	; 0x0b
    35e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    35e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    35e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    35e6:	20 e0       	ldi	r18, 0x00	; 0
    35e8:	30 e0       	ldi	r19, 0x00	; 0
    35ea:	40 e2       	ldi	r20, 0x20	; 32
    35ec:	51 e4       	ldi	r21, 0x41	; 65
    35ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35f2:	dc 01       	movw	r26, r24
    35f4:	cb 01       	movw	r24, r22
    35f6:	bc 01       	movw	r22, r24
    35f8:	cd 01       	movw	r24, r26
    35fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35fe:	dc 01       	movw	r26, r24
    3600:	cb 01       	movw	r24, r22
    3602:	9e 83       	std	Y+6, r25	; 0x06
    3604:	8d 83       	std	Y+5, r24	; 0x05
    3606:	0f c0       	rjmp	.+30     	; 0x3626 <ProgramThree+0xeac>
    3608:	89 e1       	ldi	r24, 0x19	; 25
    360a:	90 e0       	ldi	r25, 0x00	; 0
    360c:	9c 83       	std	Y+4, r25	; 0x04
    360e:	8b 83       	std	Y+3, r24	; 0x03
    3610:	8b 81       	ldd	r24, Y+3	; 0x03
    3612:	9c 81       	ldd	r25, Y+4	; 0x04
    3614:	01 97       	sbiw	r24, 0x01	; 1
    3616:	f1 f7       	brne	.-4      	; 0x3614 <ProgramThree+0xe9a>
    3618:	9c 83       	std	Y+4, r25	; 0x04
    361a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    361c:	8d 81       	ldd	r24, Y+5	; 0x05
    361e:	9e 81       	ldd	r25, Y+6	; 0x06
    3620:	01 97       	sbiw	r24, 0x01	; 1
    3622:	9e 83       	std	Y+6, r25	; 0x06
    3624:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3626:	8d 81       	ldd	r24, Y+5	; 0x05
    3628:	9e 81       	ldd	r25, Y+6	; 0x06
    362a:	00 97       	sbiw	r24, 0x00	; 0
    362c:	69 f7       	brne	.-38     	; 0x3608 <ProgramThree+0xe8e>
    362e:	14 c0       	rjmp	.+40     	; 0x3658 <ProgramThree+0xede>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3630:	6f 81       	ldd	r22, Y+7	; 0x07
    3632:	78 85       	ldd	r23, Y+8	; 0x08
    3634:	89 85       	ldd	r24, Y+9	; 0x09
    3636:	9a 85       	ldd	r25, Y+10	; 0x0a
    3638:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    363c:	dc 01       	movw	r26, r24
    363e:	cb 01       	movw	r24, r22
    3640:	9e 83       	std	Y+6, r25	; 0x06
    3642:	8d 83       	std	Y+5, r24	; 0x05
    3644:	8d 81       	ldd	r24, Y+5	; 0x05
    3646:	9e 81       	ldd	r25, Y+6	; 0x06
    3648:	9a 83       	std	Y+2, r25	; 0x02
    364a:	89 83       	std	Y+1, r24	; 0x01
    364c:	89 81       	ldd	r24, Y+1	; 0x01
    364e:	9a 81       	ldd	r25, Y+2	; 0x02
    3650:	01 97       	sbiw	r24, 0x01	; 1
    3652:	f1 f7       	brne	.-4      	; 0x3650 <ProgramThree+0xed6>
    3654:	9a 83       	std	Y+2, r25	; 0x02
    3656:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10000);

}
    3658:	c8 55       	subi	r28, 0x58	; 88
    365a:	df 4f       	sbci	r29, 0xFF	; 255
    365c:	0f b6       	in	r0, 0x3f	; 63
    365e:	f8 94       	cli
    3660:	de bf       	out	0x3e, r29	; 62
    3662:	0f be       	out	0x3f, r0	; 63
    3664:	cd bf       	out	0x3d, r28	; 61
    3666:	cf 91       	pop	r28
    3668:	df 91       	pop	r29
    366a:	1f 91       	pop	r17
    366c:	0f 91       	pop	r16
    366e:	08 95       	ret

00003670 <__prologue_saves__>:
    3670:	2f 92       	push	r2
    3672:	3f 92       	push	r3
    3674:	4f 92       	push	r4
    3676:	5f 92       	push	r5
    3678:	6f 92       	push	r6
    367a:	7f 92       	push	r7
    367c:	8f 92       	push	r8
    367e:	9f 92       	push	r9
    3680:	af 92       	push	r10
    3682:	bf 92       	push	r11
    3684:	cf 92       	push	r12
    3686:	df 92       	push	r13
    3688:	ef 92       	push	r14
    368a:	ff 92       	push	r15
    368c:	0f 93       	push	r16
    368e:	1f 93       	push	r17
    3690:	cf 93       	push	r28
    3692:	df 93       	push	r29
    3694:	cd b7       	in	r28, 0x3d	; 61
    3696:	de b7       	in	r29, 0x3e	; 62
    3698:	ca 1b       	sub	r28, r26
    369a:	db 0b       	sbc	r29, r27
    369c:	0f b6       	in	r0, 0x3f	; 63
    369e:	f8 94       	cli
    36a0:	de bf       	out	0x3e, r29	; 62
    36a2:	0f be       	out	0x3f, r0	; 63
    36a4:	cd bf       	out	0x3d, r28	; 61
    36a6:	09 94       	ijmp

000036a8 <__epilogue_restores__>:
    36a8:	2a 88       	ldd	r2, Y+18	; 0x12
    36aa:	39 88       	ldd	r3, Y+17	; 0x11
    36ac:	48 88       	ldd	r4, Y+16	; 0x10
    36ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    36b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    36b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    36b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    36b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    36b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    36ba:	b9 84       	ldd	r11, Y+9	; 0x09
    36bc:	c8 84       	ldd	r12, Y+8	; 0x08
    36be:	df 80       	ldd	r13, Y+7	; 0x07
    36c0:	ee 80       	ldd	r14, Y+6	; 0x06
    36c2:	fd 80       	ldd	r15, Y+5	; 0x05
    36c4:	0c 81       	ldd	r16, Y+4	; 0x04
    36c6:	1b 81       	ldd	r17, Y+3	; 0x03
    36c8:	aa 81       	ldd	r26, Y+2	; 0x02
    36ca:	b9 81       	ldd	r27, Y+1	; 0x01
    36cc:	ce 0f       	add	r28, r30
    36ce:	d1 1d       	adc	r29, r1
    36d0:	0f b6       	in	r0, 0x3f	; 63
    36d2:	f8 94       	cli
    36d4:	de bf       	out	0x3e, r29	; 62
    36d6:	0f be       	out	0x3f, r0	; 63
    36d8:	cd bf       	out	0x3d, r28	; 61
    36da:	ed 01       	movw	r28, r26
    36dc:	08 95       	ret

000036de <_exit>:
    36de:	f8 94       	cli

000036e0 <__stop_program>:
    36e0:	ff cf       	rjmp	.-2      	; 0x36e0 <__stop_program>
